ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"MAX30101.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MAX30101_Start,"ax",%progbits
  20              		.align	2
  21              		.global	MAX30101_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	MAX30101_Start, %function
  25              	MAX30101_Start:
  26              	.LFB1:
  27              		.file 1 "MAX30101.c"
   1:MAX30101.c    **** /**
   2:MAX30101.c    **** *   Source file for the MAX30101 library.
   3:MAX30101.c    **** */
   4:MAX30101.c    **** 
   5:MAX30101.c    **** #include "I2C_Interface.h"
   6:MAX30101.c    **** #include "I2C_Master.h"
   7:MAX30101.c    **** #include "MAX30101.h"
   8:MAX30101.c    **** #include "string.h"
   9:MAX30101.c    **** #include "stdio.h"
  10:MAX30101.c    **** 
  11:MAX30101.c    **** //==============================================
  12:MAX30101.c    **** //          MACROS
  13:MAX30101.c    **** //==============================================
  14:MAX30101.c    **** 
  15:MAX30101.c    **** /**
  16:MAX30101.c    **** *   \brief Mask for Power Ready interrupt.
  17:MAX30101.c    **** */
  18:MAX30101.c    **** #define MAX30101_INT_PWR_RDY_MASK   0xFE
  19:MAX30101.c    **** 
  20:MAX30101.c    **** /**
  21:MAX30101.c    **** *   \brief Mask for FIFO A FULL interrupt.
  22:MAX30101.c    **** */
  23:MAX30101.c    **** #define MAX30101_INT_FIFO_A_FULL_MASK   0x7F
  24:MAX30101.c    **** 
  25:MAX30101.c    **** /**
  26:MAX30101.c    **** *   \brief Enable FIFO A FULL interrupt.
  27:MAX30101.c    **** */
  28:MAX30101.c    **** #define MAX30101_INT_FIFO_A_FULL_ENABLE 0x80
  29:MAX30101.c    **** 
  30:MAX30101.c    **** /**
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 2


  31:MAX30101.c    **** *   \brief Disable FIFO A FULL interrupt.
  32:MAX30101.c    **** */
  33:MAX30101.c    **** #define MAX30101_INT_FIFO_A_FULL_DISABLE 0x00
  34:MAX30101.c    **** 
  35:MAX30101.c    **** /**
  36:MAX30101.c    **** *   \brief Mask for PPG ready interrupt.
  37:MAX30101.c    **** */
  38:MAX30101.c    **** #define MAX30101_INT_PPG_RDY_MASK     0xBF
  39:MAX30101.c    **** 
  40:MAX30101.c    **** /**
  41:MAX30101.c    **** *   \brief Enable PPG ready interrupt.
  42:MAX30101.c    **** */
  43:MAX30101.c    **** #define MAX30101_INT_PPG_RDY_ENABLE 0x40
  44:MAX30101.c    **** 
  45:MAX30101.c    **** /**
  46:MAX30101.c    **** *   \brief Disable PPG ready interrupt.
  47:MAX30101.c    **** */
  48:MAX30101.c    **** #define MAX30101_INT_PPG_RDY_DISABLE 0x00
  49:MAX30101.c    **** 
  50:MAX30101.c    **** /**
  51:MAX30101.c    **** *   \brief Mask for FIFO overflow interrupt.
  52:MAX30101.c    **** */
  53:MAX30101.c    **** #define MAX30101_INT_ALC_OVF_MASK     0xDF
  54:MAX30101.c    **** 
  55:MAX30101.c    **** /**
  56:MAX30101.c    **** *   \brief Enable OVERFLOW interrupt.
  57:MAX30101.c    **** */
  58:MAX30101.c    **** #define MAX30101_INT_ALC_OVF_ENABLE 0x20
  59:MAX30101.c    **** 
  60:MAX30101.c    **** /**
  61:MAX30101.c    **** *   \brief Disable OVERFLOW interrupt.
  62:MAX30101.c    **** */
  63:MAX30101.c    **** #define MAX30101_INT_ALC_OVF_DISABLE 0x00
  64:MAX30101.c    **** 
  65:MAX30101.c    **** /**
  66:MAX30101.c    **** *   \brief Mask for temperature data ready interrupt.
  67:MAX30101.c    **** */
  68:MAX30101.c    **** #define MAX30101_INT_TMP_RDY_MASK     0xFD
  69:MAX30101.c    **** 
  70:MAX30101.c    **** /**
  71:MAX30101.c    **** *   \brief Enable temperature ready interrupt.
  72:MAX30101.c    **** */
  73:MAX30101.c    **** #define MAX30101_INT_TMP_RDY_ENABLE 0x02
  74:MAX30101.c    **** 
  75:MAX30101.c    **** /**
  76:MAX30101.c    **** *   \brief Disable temperature ready interrupt.
  77:MAX30101.c    **** */
  78:MAX30101.c    **** #define MAX30101_INT_TMP_RDY_DISABLE 0x00
  79:MAX30101.c    **** 
  80:MAX30101.c    **** /**
  81:MAX30101.c    **** *   \brief Mask for sample average settings.
  82:MAX30101.c    **** */
  83:MAX30101.c    **** #define MAX30101_SMP_AVG_MASK    0x1F
  84:MAX30101.c    **** 
  85:MAX30101.c    **** /**
  86:MAX30101.c    **** *   \brief Mask for fifo rollover.
  87:MAX30101.c    **** */
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 3


  88:MAX30101.c    **** #define MAX30101_FIFO_ROLLOVER_MASK    0xEF
  89:MAX30101.c    **** 
  90:MAX30101.c    **** /**
  91:MAX30101.c    **** *   \brief Mask for sample average settings.
  92:MAX30101.c    **** */
  93:MAX30101.c    **** #define MAX30101_FIFO_ROLLOVER_ENABLE    0x10
  94:MAX30101.c    **** 
  95:MAX30101.c    **** /**
  96:MAX30101.c    **** *   \brief Mask for sample average settings.
  97:MAX30101.c    **** */
  98:MAX30101.c    **** #define MAX30101_FIFO_ROLLOVER_DISABLE    0x00
  99:MAX30101.c    **** 
 100:MAX30101.c    **** /**
 101:MAX30101.c    **** *   \brief Mask for FIFO A Full samples.
 102:MAX30101.c    **** */
 103:MAX30101.c    **** #define MAX30101_FIFO_A_FULL_MASK   0xF0
 104:MAX30101.c    **** 
 105:MAX30101.c    **** /**
 106:MAX30101.c    **** *   \brief Mask for shutdown bit.
 107:MAX30101.c    **** */
 108:MAX30101.c    **** #define MAX30101_SHUTDOWN_MASK 0x7F
 109:MAX30101.c    **** 
 110:MAX30101.c    **** /**
 111:MAX30101.c    **** *   \brief Enable shutdown
 112:MAX30101.c    **** */
 113:MAX30101.c    **** #define MAX30101_SHUTDOWN_ENABLE 0x80
 114:MAX30101.c    **** 
 115:MAX30101.c    **** /**
 116:MAX30101.c    **** *   \brief Disable shutdown.
 117:MAX30101.c    **** */
 118:MAX30101.c    **** #define MAX30101_SHUTDOWN_DISABLE 0x00
 119:MAX30101.c    **** 
 120:MAX30101.c    **** /**
 121:MAX30101.c    **** *   \brief Reset bit mask.
 122:MAX30101.c    **** */
 123:MAX30101.c    **** #define MAX30101_RESET_MASK 0xBF
 124:MAX30101.c    **** 
 125:MAX30101.c    **** /**
 126:MAX30101.c    **** *   \brief Set reset bit.
 127:MAX30101.c    **** */
 128:MAX30101.c    **** #define MAX30101_RESET_ENABLE 0x40
 129:MAX30101.c    **** 
 130:MAX30101.c    **** /**
 131:MAX30101.c    **** *   \brief Mode mask.
 132:MAX30101.c    **** */
 133:MAX30101.c    **** #define MAX30101_MODE_MASK 0xF8
 134:MAX30101.c    **** 
 135:MAX30101.c    **** /**
 136:MAX30101.c    **** *   \brief SPO2 ADC Range mask.
 137:MAX30101.c    **** */
 138:MAX30101.c    **** #define MAX30101_SPO2_ADC_RANGE_MASK 0x9F 
 139:MAX30101.c    **** 
 140:MAX30101.c    **** /**
 141:MAX30101.c    **** *   \brief SPO2 Sample Rate mask.
 142:MAX30101.c    **** */
 143:MAX30101.c    **** #define MAX30101_SPO2_SAMPLE_RATE_MASK 0xE3
 144:MAX30101.c    **** 
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 4


 145:MAX30101.c    **** /**
 146:MAX30101.c    **** *   \brief SPO2 Sample Rate mask.
 147:MAX30101.c    **** */
 148:MAX30101.c    **** #define MAX30101_SPO2_PULSEWIDTH_MASK 0xFC
 149:MAX30101.c    **** 
 150:MAX30101.c    **** /**
 151:MAX30101.c    **** *   \brief Multi-LED SLOT1 mask.
 152:MAX30101.c    **** */
 153:MAX30101.c    **** #define MAX30101_SLOT1_MASK  		0xF8
 154:MAX30101.c    **** 
 155:MAX30101.c    **** /**
 156:MAX30101.c    **** *   \brief Multi-LED SLOT2 mask.
 157:MAX30101.c    **** */
 158:MAX30101.c    **** #define MAX30101_SLOT2_MASK  		0x8F
 159:MAX30101.c    **** 
 160:MAX30101.c    **** /**
 161:MAX30101.c    **** *   \brief Multi-LED SLOT3 mask.
 162:MAX30101.c    **** */
 163:MAX30101.c    **** #define MAX30101_SLOT3_MASK  		0xF8
 164:MAX30101.c    **** 
 165:MAX30101.c    **** /**
 166:MAX30101.c    **** *   \brief Multi-LED SLOT4 mask.
 167:MAX30101.c    **** */
 168:MAX30101.c    **** #define MAX30101_SLOT4_MASK  		0x8F
 169:MAX30101.c    **** 
 170:MAX30101.c    **** #define MAX30101_SHIFT(resolution) 4-resolution
 171:MAX30101.c    **** 
 172:MAX30101.c    **** //==============================================
 173:MAX30101.c    **** //          FUNCTION PROTOTYPESS
 174:MAX30101.c    **** //==============================================
 175:MAX30101.c    **** 
 176:MAX30101.c    **** static uint8_t MAX30101_BitMask(uint8_t reg_addr, uint8_t mask, uint8_t thing);
 177:MAX30101.c    **** 
 178:MAX30101.c    **** static uint8_t MAX30101_WriteRegister(uint8_t reg_addr, uint8_t reg_data);
 179:MAX30101.c    **** 
 180:MAX30101.c    **** 
 181:MAX30101.c    **** // Start the device
 182:MAX30101.c    **** uint8_t MAX30101_Start(void)
 183:MAX30101.c    **** {
  28              		.loc 1 183 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
 184:MAX30101.c    ****     I2C_Peripheral_Start();
  38              		.loc 1 184 0
  39 0004 FFF7FEFF 		bl	I2C_Peripheral_Start
 185:MAX30101.c    ****     return MAX30101_Reset();
  40              		.loc 1 185 0
  41 0008 FFF7FEFF 		bl	MAX30101_Reset
  42 000c 0346     		mov	r3, r0
 186:MAX30101.c    **** }
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 5


  43              		.loc 1 186 0
  44 000e 1846     		mov	r0, r3
  45 0010 80BD     		pop	{r7, pc}
  46              		.cfi_endproc
  47              	.LFE1:
  48              		.size	MAX30101_Start, .-MAX30101_Start
  49 0012 00BF     		.section	.text.MAX30101_IsDevicePresent,"ax",%progbits
  50              		.align	2
  51              		.global	MAX30101_IsDevicePresent
  52              		.thumb
  53              		.thumb_func
  54              		.type	MAX30101_IsDevicePresent, %function
  55              	MAX30101_IsDevicePresent:
  56              	.LFB2:
 187:MAX30101.c    **** 
 188:MAX30101.c    **** // Check if device is present on I2C bus
 189:MAX30101.c    **** uint8_t MAX30101_IsDevicePresent(void)
 190:MAX30101.c    **** {
  57              		.loc 1 190 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 00AF     		add	r7, sp, #0
  66              		.cfi_def_cfa_register 7
 191:MAX30101.c    ****     if (I2C_Peripheral_IsDeviceConnected(MAX30101_I2C_ADDRESS) == I2C_NO_ERROR)
  67              		.loc 1 191 0
  68 0004 5720     		movs	r0, #87
  69 0006 FFF7FEFF 		bl	I2C_Peripheral_IsDeviceConnected
  70 000a 0346     		mov	r3, r0
  71 000c 002B     		cmp	r3, #0
  72 000e 01D1     		bne	.L4
 192:MAX30101.c    ****     {
 193:MAX30101.c    ****         return MAX30101_OK;
  73              		.loc 1 193 0
  74 0010 0023     		movs	r3, #0
  75 0012 00E0     		b	.L5
  76              	.L4:
 194:MAX30101.c    ****     }
 195:MAX30101.c    ****     
 196:MAX30101.c    ****     return MAX30101_DEV_NOT_FOUND;
  77              		.loc 1 196 0
  78 0014 0123     		movs	r3, #1
  79              	.L5:
 197:MAX30101.c    **** }
  80              		.loc 1 197 0
  81 0016 1846     		mov	r0, r3
  82 0018 80BD     		pop	{r7, pc}
  83              		.cfi_endproc
  84              	.LFE2:
  85              		.size	MAX30101_IsDevicePresent, .-MAX30101_IsDevicePresent
  86 001a 00BF     		.section	.text.MAX30101_IsFIFOAFull,"ax",%progbits
  87              		.align	2
  88              		.global	MAX30101_IsFIFOAFull
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 6


  89              		.thumb
  90              		.thumb_func
  91              		.type	MAX30101_IsFIFOAFull, %function
  92              	MAX30101_IsFIFOAFull:
  93              	.LFB3:
 198:MAX30101.c    **** 
 199:MAX30101.c    **** //==============================================
 200:MAX30101.c    **** //          INTERRUPT RELATED FUNCTIONS
 201:MAX30101.c    **** //==============================================
 202:MAX30101.c    **** 
 203:MAX30101.c    **** // Check interrupt status
 204:MAX30101.c    **** uint8_t MAX30101_IsFIFOAFull(uint8_t* flag)
 205:MAX30101.c    **** {
  94              		.loc 1 205 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 16
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 80B5     		push	{r7, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 7, -8
 101              		.cfi_offset 14, -4
 102 0002 84B0     		sub	sp, sp, #16
 103              		.cfi_def_cfa_offset 24
 104 0004 00AF     		add	r7, sp, #0
 105              		.cfi_def_cfa_register 7
 106 0006 7860     		str	r0, [r7, #4]
 206:MAX30101.c    ****     // Read register
 207:MAX30101.c    ****     uint8_t temp;
 208:MAX30101.c    ****     uint8_t error = MAX30101_ReadRegister(MAX30101_INT_ST_1, &temp);
 107              		.loc 1 208 0
 108 0008 07F10E03 		add	r3, r7, #14
 109 000c 1946     		mov	r1, r3
 110 000e 0020     		movs	r0, #0
 111 0010 FFF7FEFF 		bl	MAX30101_ReadRegister
 112 0014 0346     		mov	r3, r0
 113 0016 FB73     		strb	r3, [r7, #15]
 209:MAX30101.c    ****     *flag = temp & (~MAX30101_INT_FIFO_A_FULL_MASK);
 114              		.loc 1 209 0
 115 0018 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 116 001a 23F07F03 		bic	r3, r3, #127
 117 001e DAB2     		uxtb	r2, r3
 118 0020 7B68     		ldr	r3, [r7, #4]
 119 0022 1A70     		strb	r2, [r3]
 210:MAX30101.c    ****     return error;
 120              		.loc 1 210 0
 121 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 211:MAX30101.c    ****     
 212:MAX30101.c    **** }
 122              		.loc 1 212 0
 123 0026 1846     		mov	r0, r3
 124 0028 1037     		adds	r7, r7, #16
 125              		.cfi_def_cfa_offset 8
 126 002a BD46     		mov	sp, r7
 127              		.cfi_def_cfa_register 13
 128              		@ sp needed
 129 002c 80BD     		pop	{r7, pc}
 130              		.cfi_endproc
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 7


 131              	.LFE3:
 132              		.size	MAX30101_IsFIFOAFull, .-MAX30101_IsFIFOAFull
 133              		.section	.text.MAX30101_IsPPGReady,"ax",%progbits
 134              		.align	2
 135              		.global	MAX30101_IsPPGReady
 136              		.thumb
 137              		.thumb_func
 138              		.type	MAX30101_IsPPGReady, %function
 139              	MAX30101_IsPPGReady:
 140              	.LFB4:
 213:MAX30101.c    **** 
 214:MAX30101.c    **** uint8_t MAX30101_IsPPGReady(uint8_t* flag)
 215:MAX30101.c    **** {
 141              		.loc 1 215 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 16
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145 0000 80B5     		push	{r7, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 7, -8
 148              		.cfi_offset 14, -4
 149 0002 84B0     		sub	sp, sp, #16
 150              		.cfi_def_cfa_offset 24
 151 0004 00AF     		add	r7, sp, #0
 152              		.cfi_def_cfa_register 7
 153 0006 7860     		str	r0, [r7, #4]
 216:MAX30101.c    ****     // Read register
 217:MAX30101.c    ****     uint8_t temp;
 218:MAX30101.c    ****     uint8_t error = MAX30101_ReadRegister(MAX30101_INT_ST_1, &temp);
 154              		.loc 1 218 0
 155 0008 07F10E03 		add	r3, r7, #14
 156 000c 1946     		mov	r1, r3
 157 000e 0020     		movs	r0, #0
 158 0010 FFF7FEFF 		bl	MAX30101_ReadRegister
 159 0014 0346     		mov	r3, r0
 160 0016 FB73     		strb	r3, [r7, #15]
 219:MAX30101.c    ****     *flag = temp & (~MAX30101_INT_PPG_RDY_MASK);
 161              		.loc 1 219 0
 162 0018 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 163 001a 03F04003 		and	r3, r3, #64
 164 001e DAB2     		uxtb	r2, r3
 165 0020 7B68     		ldr	r3, [r7, #4]
 166 0022 1A70     		strb	r2, [r3]
 220:MAX30101.c    ****     return error;
 167              		.loc 1 220 0
 168 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 221:MAX30101.c    **** }
 169              		.loc 1 221 0
 170 0026 1846     		mov	r0, r3
 171 0028 1037     		adds	r7, r7, #16
 172              		.cfi_def_cfa_offset 8
 173 002a BD46     		mov	sp, r7
 174              		.cfi_def_cfa_register 13
 175              		@ sp needed
 176 002c 80BD     		pop	{r7, pc}
 177              		.cfi_endproc
 178              	.LFE4:
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 8


 179              		.size	MAX30101_IsPPGReady, .-MAX30101_IsPPGReady
 180              		.section	.text.MAX30101_IsALCOverflow,"ax",%progbits
 181              		.align	2
 182              		.global	MAX30101_IsALCOverflow
 183              		.thumb
 184              		.thumb_func
 185              		.type	MAX30101_IsALCOverflow, %function
 186              	MAX30101_IsALCOverflow:
 187              	.LFB5:
 222:MAX30101.c    **** uint8_t MAX30101_IsALCOverflow(uint8_t* flag)
 223:MAX30101.c    **** {
 188              		.loc 1 223 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 16
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 84B0     		sub	sp, sp, #16
 197              		.cfi_def_cfa_offset 24
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 200 0006 7860     		str	r0, [r7, #4]
 224:MAX30101.c    ****     // Read register
 225:MAX30101.c    ****     uint8_t temp;
 226:MAX30101.c    ****     uint8_t error = MAX30101_ReadRegister(MAX30101_INT_ST_1, &temp);
 201              		.loc 1 226 0
 202 0008 07F10E03 		add	r3, r7, #14
 203 000c 1946     		mov	r1, r3
 204 000e 0020     		movs	r0, #0
 205 0010 FFF7FEFF 		bl	MAX30101_ReadRegister
 206 0014 0346     		mov	r3, r0
 207 0016 FB73     		strb	r3, [r7, #15]
 227:MAX30101.c    ****     *flag = temp & (~MAX30101_INT_ALC_OVF_MASK);
 208              		.loc 1 227 0
 209 0018 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 210 001a 03F02003 		and	r3, r3, #32
 211 001e DAB2     		uxtb	r2, r3
 212 0020 7B68     		ldr	r3, [r7, #4]
 213 0022 1A70     		strb	r2, [r3]
 228:MAX30101.c    ****     return error;
 214              		.loc 1 228 0
 215 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 229:MAX30101.c    **** }
 216              		.loc 1 229 0
 217 0026 1846     		mov	r0, r3
 218 0028 1037     		adds	r7, r7, #16
 219              		.cfi_def_cfa_offset 8
 220 002a BD46     		mov	sp, r7
 221              		.cfi_def_cfa_register 13
 222              		@ sp needed
 223 002c 80BD     		pop	{r7, pc}
 224              		.cfi_endproc
 225              	.LFE5:
 226              		.size	MAX30101_IsALCOverflow, .-MAX30101_IsALCOverflow
 227              		.section	.text.MAX30101_IsPowerReady,"ax",%progbits
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 9


 228              		.align	2
 229              		.global	MAX30101_IsPowerReady
 230              		.thumb
 231              		.thumb_func
 232              		.type	MAX30101_IsPowerReady, %function
 233              	MAX30101_IsPowerReady:
 234              	.LFB6:
 230:MAX30101.c    **** uint8_t MAX30101_IsPowerReady(uint8_t* flag)
 231:MAX30101.c    **** {
 235              		.loc 1 231 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 16
 238              		@ frame_needed = 1, uses_anonymous_args = 0
 239 0000 80B5     		push	{r7, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 0002 84B0     		sub	sp, sp, #16
 244              		.cfi_def_cfa_offset 24
 245 0004 00AF     		add	r7, sp, #0
 246              		.cfi_def_cfa_register 7
 247 0006 7860     		str	r0, [r7, #4]
 232:MAX30101.c    ****     // Read register
 233:MAX30101.c    ****     uint8_t temp;
 234:MAX30101.c    ****     uint8_t error = MAX30101_ReadRegister(MAX30101_INT_ST_1, &temp);
 248              		.loc 1 234 0
 249 0008 07F10E03 		add	r3, r7, #14
 250 000c 1946     		mov	r1, r3
 251 000e 0020     		movs	r0, #0
 252 0010 FFF7FEFF 		bl	MAX30101_ReadRegister
 253 0014 0346     		mov	r3, r0
 254 0016 FB73     		strb	r3, [r7, #15]
 235:MAX30101.c    ****     *flag = temp & (~MAX30101_INT_PWR_RDY_MASK);
 255              		.loc 1 235 0
 256 0018 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 257 001a 03F00103 		and	r3, r3, #1
 258 001e DAB2     		uxtb	r2, r3
 259 0020 7B68     		ldr	r3, [r7, #4]
 260 0022 1A70     		strb	r2, [r3]
 236:MAX30101.c    ****     return error;
 261              		.loc 1 236 0
 262 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 237:MAX30101.c    **** }
 263              		.loc 1 237 0
 264 0026 1846     		mov	r0, r3
 265 0028 1037     		adds	r7, r7, #16
 266              		.cfi_def_cfa_offset 8
 267 002a BD46     		mov	sp, r7
 268              		.cfi_def_cfa_register 13
 269              		@ sp needed
 270 002c 80BD     		pop	{r7, pc}
 271              		.cfi_endproc
 272              	.LFE6:
 273              		.size	MAX30101_IsPowerReady, .-MAX30101_IsPowerReady
 274              		.section	.text.MAX30101_IsTempReady,"ax",%progbits
 275              		.align	2
 276              		.global	MAX30101_IsTempReady
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 10


 277              		.thumb
 278              		.thumb_func
 279              		.type	MAX30101_IsTempReady, %function
 280              	MAX30101_IsTempReady:
 281              	.LFB7:
 238:MAX30101.c    **** uint8_t MAX30101_IsTempReady(uint8_t* flag)
 239:MAX30101.c    **** {
 282              		.loc 1 239 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 16
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286 0000 80B5     		push	{r7, lr}
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 84B0     		sub	sp, sp, #16
 291              		.cfi_def_cfa_offset 24
 292 0004 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
 294 0006 7860     		str	r0, [r7, #4]
 240:MAX30101.c    ****     // Read register
 241:MAX30101.c    ****     uint8_t temp;
 242:MAX30101.c    ****     uint8_t error = MAX30101_ReadRegister(MAX30101_INT_ST_2, &temp);
 295              		.loc 1 242 0
 296 0008 07F10E03 		add	r3, r7, #14
 297 000c 1946     		mov	r1, r3
 298 000e 0120     		movs	r0, #1
 299 0010 FFF7FEFF 		bl	MAX30101_ReadRegister
 300 0014 0346     		mov	r3, r0
 301 0016 FB73     		strb	r3, [r7, #15]
 243:MAX30101.c    ****     *flag = temp & (~MAX30101_INT_TMP_RDY_MASK);
 302              		.loc 1 243 0
 303 0018 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 304 001a 03F00203 		and	r3, r3, #2
 305 001e DAB2     		uxtb	r2, r3
 306 0020 7B68     		ldr	r3, [r7, #4]
 307 0022 1A70     		strb	r2, [r3]
 244:MAX30101.c    ****     return error;
 308              		.loc 1 244 0
 309 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 245:MAX30101.c    **** }
 310              		.loc 1 245 0
 311 0026 1846     		mov	r0, r3
 312 0028 1037     		adds	r7, r7, #16
 313              		.cfi_def_cfa_offset 8
 314 002a BD46     		mov	sp, r7
 315              		.cfi_def_cfa_register 13
 316              		@ sp needed
 317 002c 80BD     		pop	{r7, pc}
 318              		.cfi_endproc
 319              	.LFE7:
 320              		.size	MAX30101_IsTempReady, .-MAX30101_IsTempReady
 321              		.section	.text.MAX30101_EnableFIFOAFullInt,"ax",%progbits
 322              		.align	2
 323              		.global	MAX30101_EnableFIFOAFullInt
 324              		.thumb
 325              		.thumb_func
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 11


 326              		.type	MAX30101_EnableFIFOAFullInt, %function
 327              	MAX30101_EnableFIFOAFullInt:
 328              	.LFB8:
 246:MAX30101.c    ****     
 247:MAX30101.c    **** // Enable interrupts
 248:MAX30101.c    **** uint8_t MAX30101_EnableFIFOAFullInt(void)
 249:MAX30101.c    **** {
 329              		.loc 1 249 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 80B5     		push	{r7, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 7, -8
 336              		.cfi_offset 14, -4
 337 0002 00AF     		add	r7, sp, #0
 338              		.cfi_def_cfa_register 7
 250:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_INT_EN_1, MAX30101_FIFO_A_FULL_MASK, MAX30101_INT_FIFO_A_FULL_
 339              		.loc 1 250 0
 340 0004 8022     		movs	r2, #128
 341 0006 F021     		movs	r1, #240
 342 0008 0220     		movs	r0, #2
 343 000a FFF7FEFF 		bl	MAX30101_BitMask
 344 000e 0346     		mov	r3, r0
 251:MAX30101.c    **** }
 345              		.loc 1 251 0
 346 0010 1846     		mov	r0, r3
 347 0012 80BD     		pop	{r7, pc}
 348              		.cfi_endproc
 349              	.LFE8:
 350              		.size	MAX30101_EnableFIFOAFullInt, .-MAX30101_EnableFIFOAFullInt
 351              		.section	.text.MAX30101_EnablePPGReadyInt,"ax",%progbits
 352              		.align	2
 353              		.global	MAX30101_EnablePPGReadyInt
 354              		.thumb
 355              		.thumb_func
 356              		.type	MAX30101_EnablePPGReadyInt, %function
 357              	MAX30101_EnablePPGReadyInt:
 358              	.LFB9:
 252:MAX30101.c    **** uint8_t MAX30101_EnablePPGReadyInt(void)
 253:MAX30101.c    **** {
 359              		.loc 1 253 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 00AF     		add	r7, sp, #0
 368              		.cfi_def_cfa_register 7
 254:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_INT_EN_1, MAX30101_INT_PPG_RDY_MASK, MAX30101_INT_PPG_RDY_ENAB
 369              		.loc 1 254 0
 370 0004 4022     		movs	r2, #64
 371 0006 BF21     		movs	r1, #191
 372 0008 0220     		movs	r0, #2
 373 000a FFF7FEFF 		bl	MAX30101_BitMask
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 12


 374 000e 0346     		mov	r3, r0
 255:MAX30101.c    **** }
 375              		.loc 1 255 0
 376 0010 1846     		mov	r0, r3
 377 0012 80BD     		pop	{r7, pc}
 378              		.cfi_endproc
 379              	.LFE9:
 380              		.size	MAX30101_EnablePPGReadyInt, .-MAX30101_EnablePPGReadyInt
 381              		.section	.text.MAX30101_EnableALCOverflowInt,"ax",%progbits
 382              		.align	2
 383              		.global	MAX30101_EnableALCOverflowInt
 384              		.thumb
 385              		.thumb_func
 386              		.type	MAX30101_EnableALCOverflowInt, %function
 387              	MAX30101_EnableALCOverflowInt:
 388              	.LFB10:
 256:MAX30101.c    **** uint8_t MAX30101_EnableALCOverflowInt(void)
 257:MAX30101.c    **** {
 389              		.loc 1 257 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 1, uses_anonymous_args = 0
 393 0000 80B5     		push	{r7, lr}
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 7, -8
 396              		.cfi_offset 14, -4
 397 0002 00AF     		add	r7, sp, #0
 398              		.cfi_def_cfa_register 7
 258:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_INT_EN_1, MAX30101_INT_ALC_OVF_MASK, MAX30101_INT_ALC_OVF_ENAB
 399              		.loc 1 258 0
 400 0004 2022     		movs	r2, #32
 401 0006 DF21     		movs	r1, #223
 402 0008 0220     		movs	r0, #2
 403 000a FFF7FEFF 		bl	MAX30101_BitMask
 404 000e 0346     		mov	r3, r0
 259:MAX30101.c    **** }
 405              		.loc 1 259 0
 406 0010 1846     		mov	r0, r3
 407 0012 80BD     		pop	{r7, pc}
 408              		.cfi_endproc
 409              	.LFE10:
 410              		.size	MAX30101_EnableALCOverflowInt, .-MAX30101_EnableALCOverflowInt
 411              		.section	.text.MAX30101_EnableTempReadyInt,"ax",%progbits
 412              		.align	2
 413              		.global	MAX30101_EnableTempReadyInt
 414              		.thumb
 415              		.thumb_func
 416              		.type	MAX30101_EnableTempReadyInt, %function
 417              	MAX30101_EnableTempReadyInt:
 418              	.LFB11:
 260:MAX30101.c    **** 
 261:MAX30101.c    **** uint8_t MAX30101_EnableTempReadyInt(void)
 262:MAX30101.c    **** {
 419              		.loc 1 262 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 13


 423 0000 80B5     		push	{r7, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 00AF     		add	r7, sp, #0
 428              		.cfi_def_cfa_register 7
 263:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_INT_EN_2, MAX30101_INT_TMP_RDY_MASK, MAX30101_INT_TMP_RDY_ENAB
 429              		.loc 1 263 0
 430 0004 0222     		movs	r2, #2
 431 0006 FD21     		movs	r1, #253
 432 0008 0320     		movs	r0, #3
 433 000a FFF7FEFF 		bl	MAX30101_BitMask
 434 000e 0346     		mov	r3, r0
 264:MAX30101.c    **** }
 435              		.loc 1 264 0
 436 0010 1846     		mov	r0, r3
 437 0012 80BD     		pop	{r7, pc}
 438              		.cfi_endproc
 439              	.LFE11:
 440              		.size	MAX30101_EnableTempReadyInt, .-MAX30101_EnableTempReadyInt
 441              		.section	.text.MAX30101_DisableFIFOAFullInt,"ax",%progbits
 442              		.align	2
 443              		.global	MAX30101_DisableFIFOAFullInt
 444              		.thumb
 445              		.thumb_func
 446              		.type	MAX30101_DisableFIFOAFullInt, %function
 447              	MAX30101_DisableFIFOAFullInt:
 448              	.LFB12:
 265:MAX30101.c    **** 
 266:MAX30101.c    **** // Disable interrupts
 267:MAX30101.c    **** uint8_t MAX30101_DisableFIFOAFullInt(void)
 268:MAX30101.c    **** {
 449              		.loc 1 268 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 1, uses_anonymous_args = 0
 453 0000 80B5     		push	{r7, lr}
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 7, -8
 456              		.cfi_offset 14, -4
 457 0002 00AF     		add	r7, sp, #0
 458              		.cfi_def_cfa_register 7
 269:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_INT_EN_1, MAX30101_FIFO_A_FULL_MASK, MAX30101_INT_FIFO_A_FULL_
 459              		.loc 1 269 0
 460 0004 0022     		movs	r2, #0
 461 0006 F021     		movs	r1, #240
 462 0008 0220     		movs	r0, #2
 463 000a FFF7FEFF 		bl	MAX30101_BitMask
 464 000e 0346     		mov	r3, r0
 270:MAX30101.c    **** }
 465              		.loc 1 270 0
 466 0010 1846     		mov	r0, r3
 467 0012 80BD     		pop	{r7, pc}
 468              		.cfi_endproc
 469              	.LFE12:
 470              		.size	MAX30101_DisableFIFOAFullInt, .-MAX30101_DisableFIFOAFullInt
 471              		.section	.text.MAX30101_DisablePPGReadyInt,"ax",%progbits
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 14


 472              		.align	2
 473              		.global	MAX30101_DisablePPGReadyInt
 474              		.thumb
 475              		.thumb_func
 476              		.type	MAX30101_DisablePPGReadyInt, %function
 477              	MAX30101_DisablePPGReadyInt:
 478              	.LFB13:
 271:MAX30101.c    **** 
 272:MAX30101.c    **** uint8_t MAX30101_DisablePPGReadyInt(void)
 273:MAX30101.c    **** {
 479              		.loc 1 273 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483 0000 80B5     		push	{r7, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 7, -8
 486              		.cfi_offset 14, -4
 487 0002 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 274:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_INT_EN_1, MAX30101_INT_PPG_RDY_MASK, MAX30101_INT_PPG_RDY_DISA
 489              		.loc 1 274 0
 490 0004 0022     		movs	r2, #0
 491 0006 BF21     		movs	r1, #191
 492 0008 0220     		movs	r0, #2
 493 000a FFF7FEFF 		bl	MAX30101_BitMask
 494 000e 0346     		mov	r3, r0
 275:MAX30101.c    **** }
 495              		.loc 1 275 0
 496 0010 1846     		mov	r0, r3
 497 0012 80BD     		pop	{r7, pc}
 498              		.cfi_endproc
 499              	.LFE13:
 500              		.size	MAX30101_DisablePPGReadyInt, .-MAX30101_DisablePPGReadyInt
 501              		.section	.text.MAX30101_DisableALCOverflowInt,"ax",%progbits
 502              		.align	2
 503              		.global	MAX30101_DisableALCOverflowInt
 504              		.thumb
 505              		.thumb_func
 506              		.type	MAX30101_DisableALCOverflowInt, %function
 507              	MAX30101_DisableALCOverflowInt:
 508              	.LFB14:
 276:MAX30101.c    **** 
 277:MAX30101.c    **** uint8_t MAX30101_DisableALCOverflowInt(void)
 278:MAX30101.c    **** {
 509              		.loc 1 278 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513 0000 80B5     		push	{r7, lr}
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 00AF     		add	r7, sp, #0
 518              		.cfi_def_cfa_register 7
 279:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_INT_EN_1, MAX30101_INT_ALC_OVF_MASK, MAX30101_INT_ALC_OVF_DISA
 519              		.loc 1 279 0
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 15


 520 0004 0022     		movs	r2, #0
 521 0006 DF21     		movs	r1, #223
 522 0008 0220     		movs	r0, #2
 523 000a FFF7FEFF 		bl	MAX30101_BitMask
 524 000e 0346     		mov	r3, r0
 280:MAX30101.c    **** }
 525              		.loc 1 280 0
 526 0010 1846     		mov	r0, r3
 527 0012 80BD     		pop	{r7, pc}
 528              		.cfi_endproc
 529              	.LFE14:
 530              		.size	MAX30101_DisableALCOverflowInt, .-MAX30101_DisableALCOverflowInt
 531              		.section	.text.MAX30101_DisableTempReadyInt,"ax",%progbits
 532              		.align	2
 533              		.global	MAX30101_DisableTempReadyInt
 534              		.thumb
 535              		.thumb_func
 536              		.type	MAX30101_DisableTempReadyInt, %function
 537              	MAX30101_DisableTempReadyInt:
 538              	.LFB15:
 281:MAX30101.c    **** 
 282:MAX30101.c    **** uint8_t MAX30101_DisableTempReadyInt(void)
 283:MAX30101.c    **** {
 539              		.loc 1 283 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543 0000 80B5     		push	{r7, lr}
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 7, -8
 546              		.cfi_offset 14, -4
 547 0002 00AF     		add	r7, sp, #0
 548              		.cfi_def_cfa_register 7
 284:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_INT_EN_1, MAX30101_INT_TMP_RDY_MASK, MAX30101_INT_TMP_RDY_DISA
 549              		.loc 1 284 0
 550 0004 0022     		movs	r2, #0
 551 0006 FD21     		movs	r1, #253
 552 0008 0220     		movs	r0, #2
 553 000a FFF7FEFF 		bl	MAX30101_BitMask
 554 000e 0346     		mov	r3, r0
 285:MAX30101.c    **** }
 555              		.loc 1 285 0
 556 0010 1846     		mov	r0, r3
 557 0012 80BD     		pop	{r7, pc}
 558              		.cfi_endproc
 559              	.LFE15:
 560              		.size	MAX30101_DisableTempReadyInt, .-MAX30101_DisableTempReadyInt
 561              		.section	.text.MAX30101_ReadWritePointer,"ax",%progbits
 562              		.align	2
 563              		.global	MAX30101_ReadWritePointer
 564              		.thumb
 565              		.thumb_func
 566              		.type	MAX30101_ReadWritePointer, %function
 567              	MAX30101_ReadWritePointer:
 568              	.LFB16:
 286:MAX30101.c    **** 
 287:MAX30101.c    **** //==============================================
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 16


 288:MAX30101.c    **** //          FIFO FUNCTIONS
 289:MAX30101.c    **** //==============================================
 290:MAX30101.c    **** // Read Write pointer
 291:MAX30101.c    **** uint8_t MAX30101_ReadWritePointer(uint8_t* wr)
 292:MAX30101.c    **** {
 569              		.loc 1 292 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 8
 572              		@ frame_needed = 1, uses_anonymous_args = 0
 573 0000 80B5     		push	{r7, lr}
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 7, -8
 576              		.cfi_offset 14, -4
 577 0002 82B0     		sub	sp, sp, #8
 578              		.cfi_def_cfa_offset 16
 579 0004 00AF     		add	r7, sp, #0
 580              		.cfi_def_cfa_register 7
 581 0006 7860     		str	r0, [r7, #4]
 293:MAX30101.c    ****     return MAX30101_ReadRegister(MAX30101_FIFO_WP, wr);
 582              		.loc 1 293 0
 583 0008 7968     		ldr	r1, [r7, #4]
 584 000a 0420     		movs	r0, #4
 585 000c FFF7FEFF 		bl	MAX30101_ReadRegister
 586 0010 0346     		mov	r3, r0
 294:MAX30101.c    **** }
 587              		.loc 1 294 0
 588 0012 1846     		mov	r0, r3
 589 0014 0837     		adds	r7, r7, #8
 590              		.cfi_def_cfa_offset 8
 591 0016 BD46     		mov	sp, r7
 592              		.cfi_def_cfa_register 13
 593              		@ sp needed
 594 0018 80BD     		pop	{r7, pc}
 595              		.cfi_endproc
 596              	.LFE16:
 597              		.size	MAX30101_ReadWritePointer, .-MAX30101_ReadWritePointer
 598 001a 00BF     		.section	.text.MAX30101_ReadOverflowCounter,"ax",%progbits
 599              		.align	2
 600              		.global	MAX30101_ReadOverflowCounter
 601              		.thumb
 602              		.thumb_func
 603              		.type	MAX30101_ReadOverflowCounter, %function
 604              	MAX30101_ReadOverflowCounter:
 605              	.LFB17:
 295:MAX30101.c    **** 
 296:MAX30101.c    **** // Read Overflow counter
 297:MAX30101.c    **** uint8_t MAX30101_ReadOverflowCounter(uint8_t* oc)
 298:MAX30101.c    **** {
 606              		.loc 1 298 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 8
 609              		@ frame_needed = 1, uses_anonymous_args = 0
 610 0000 80B5     		push	{r7, lr}
 611              		.cfi_def_cfa_offset 8
 612              		.cfi_offset 7, -8
 613              		.cfi_offset 14, -4
 614 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 17


 615              		.cfi_def_cfa_offset 16
 616 0004 00AF     		add	r7, sp, #0
 617              		.cfi_def_cfa_register 7
 618 0006 7860     		str	r0, [r7, #4]
 299:MAX30101.c    ****     return MAX30101_ReadRegister(MAX30101_FIFO_OVF_CNT, oc);
 619              		.loc 1 299 0
 620 0008 7968     		ldr	r1, [r7, #4]
 621 000a 0520     		movs	r0, #5
 622 000c FFF7FEFF 		bl	MAX30101_ReadRegister
 623 0010 0346     		mov	r3, r0
 300:MAX30101.c    **** }
 624              		.loc 1 300 0
 625 0012 1846     		mov	r0, r3
 626 0014 0837     		adds	r7, r7, #8
 627              		.cfi_def_cfa_offset 8
 628 0016 BD46     		mov	sp, r7
 629              		.cfi_def_cfa_register 13
 630              		@ sp needed
 631 0018 80BD     		pop	{r7, pc}
 632              		.cfi_endproc
 633              	.LFE17:
 634              		.size	MAX30101_ReadOverflowCounter, .-MAX30101_ReadOverflowCounter
 635 001a 00BF     		.section	.text.MAX30101_ReadReadPointer,"ax",%progbits
 636              		.align	2
 637              		.global	MAX30101_ReadReadPointer
 638              		.thumb
 639              		.thumb_func
 640              		.type	MAX30101_ReadReadPointer, %function
 641              	MAX30101_ReadReadPointer:
 642              	.LFB18:
 301:MAX30101.c    **** 
 302:MAX30101.c    **** // Read Read Pointer
 303:MAX30101.c    **** uint8_t MAX30101_ReadReadPointer(uint8_t* rr)
 304:MAX30101.c    **** {
 643              		.loc 1 304 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 8
 646              		@ frame_needed = 1, uses_anonymous_args = 0
 647 0000 80B5     		push	{r7, lr}
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 7, -8
 650              		.cfi_offset 14, -4
 651 0002 82B0     		sub	sp, sp, #8
 652              		.cfi_def_cfa_offset 16
 653 0004 00AF     		add	r7, sp, #0
 654              		.cfi_def_cfa_register 7
 655 0006 7860     		str	r0, [r7, #4]
 305:MAX30101.c    ****     return MAX30101_ReadRegister(MAX30101_FIFO_RP, rr);
 656              		.loc 1 305 0
 657 0008 7968     		ldr	r1, [r7, #4]
 658 000a 0620     		movs	r0, #6
 659 000c FFF7FEFF 		bl	MAX30101_ReadRegister
 660 0010 0346     		mov	r3, r0
 306:MAX30101.c    **** }
 661              		.loc 1 306 0
 662 0012 1846     		mov	r0, r3
 663 0014 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 18


 664              		.cfi_def_cfa_offset 8
 665 0016 BD46     		mov	sp, r7
 666              		.cfi_def_cfa_register 13
 667              		@ sp needed
 668 0018 80BD     		pop	{r7, pc}
 669              		.cfi_endproc
 670              	.LFE18:
 671              		.size	MAX30101_ReadReadPointer, .-MAX30101_ReadReadPointer
 672 001a 00BF     		.section	.text.MAX30101_ClearFIFO,"ax",%progbits
 673              		.align	2
 674              		.global	MAX30101_ClearFIFO
 675              		.thumb
 676              		.thumb_func
 677              		.type	MAX30101_ClearFIFO, %function
 678              	MAX30101_ClearFIFO:
 679              	.LFB19:
 307:MAX30101.c    **** 
 308:MAX30101.c    **** // Clear FIFO
 309:MAX30101.c    **** uint8_t MAX30101_ClearFIFO(void)
 310:MAX30101.c    **** {
 680              		.loc 1 310 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 16
 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 685              		.cfi_def_cfa_offset 28
 686              		.cfi_offset 4, -28
 687              		.cfi_offset 5, -24
 688              		.cfi_offset 6, -20
 689              		.cfi_offset 7, -16
 690              		.cfi_offset 8, -12
 691              		.cfi_offset 9, -8
 692              		.cfi_offset 14, -4
 693 0004 85B0     		sub	sp, sp, #20
 694              		.cfi_def_cfa_offset 48
 695 0006 00AF     		add	r7, sp, #0
 696              		.cfi_def_cfa_register 7
 311:MAX30101.c    ****     uint8_t error = MAX30101_WriteRegister(MAX30101_FIFO_WP, 0x00);
 697              		.loc 1 311 0
 698 0008 0021     		movs	r1, #0
 699 000a 0420     		movs	r0, #4
 700 000c FFF7FEFF 		bl	MAX30101_WriteRegister
 701 0010 0346     		mov	r3, r0
 702 0012 FB73     		strb	r3, [r7, #15]
 312:MAX30101.c    ****     if ( error == MAX30101_OK)
 703              		.loc 1 312 0
 704 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 705 0016 002B     		cmp	r3, #0
 706 0018 4FD1     		bne	.L39
 313:MAX30101.c    ****     {
 314:MAX30101.c    ****         error = MAX30101_WriteRegister(MAX30101_FIFO_RP, 0x00);
 707              		.loc 1 314 0
 708 001a 0021     		movs	r1, #0
 709 001c 0620     		movs	r0, #6
 710 001e FFF7FEFF 		bl	MAX30101_WriteRegister
 711 0022 0346     		mov	r3, r0
 712 0024 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 19


 315:MAX30101.c    ****         if ( error == MAX30101_OK)
 713              		.loc 1 315 0
 714 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 715 0028 002B     		cmp	r3, #0
 716 002a 46D1     		bne	.L39
 717              	.LBB2:
 316:MAX30101.c    ****         {
 317:MAX30101.c    ****             // Read current mode to determine number of active leds
 318:MAX30101.c    ****             uint8_t temp_value;
 319:MAX30101.c    ****             error = MAX30101_ReadRegister(MAX30101_MODE_CONF, &temp_value);
 718              		.loc 1 319 0
 719 002c FB1C     		adds	r3, r7, #3
 720 002e 1946     		mov	r1, r3
 721 0030 0920     		movs	r0, #9
 722 0032 FFF7FEFF 		bl	MAX30101_ReadRegister
 723 0036 0346     		mov	r3, r0
 724 0038 FB73     		strb	r3, [r7, #15]
 320:MAX30101.c    ****             uint8_t current_mode = temp_value & 0x07;
 725              		.loc 1 320 0
 726 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 727 003c 03F00703 		and	r3, r3, #7
 728 0040 7B73     		strb	r3, [r7, #13]
 321:MAX30101.c    ****             uint8_t active_leds;
 322:MAX30101.c    ****             switch(current_mode)
 729              		.loc 1 322 0
 730 0042 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 731 0044 032B     		cmp	r3, #3
 732 0046 06D0     		beq	.L41
 733 0048 072B     		cmp	r3, #7
 734 004a 07D0     		beq	.L42
 735 004c 022B     		cmp	r3, #2
 736 004e 08D1     		bne	.L40
 323:MAX30101.c    ****             {
 324:MAX30101.c    ****                 case MAX30101_HR_MODE:
 325:MAX30101.c    ****                     active_leds = 1;
 737              		.loc 1 325 0
 738 0050 0123     		movs	r3, #1
 739 0052 BB73     		strb	r3, [r7, #14]
 326:MAX30101.c    ****                     break;
 740              		.loc 1 326 0
 741 0054 05E0     		b	.L40
 742              	.L41:
 327:MAX30101.c    ****                 case MAX30101_SPO2_MODE:
 328:MAX30101.c    ****                     active_leds = 2;
 743              		.loc 1 328 0
 744 0056 0223     		movs	r3, #2
 745 0058 BB73     		strb	r3, [r7, #14]
 329:MAX30101.c    ****                     break;
 746              		.loc 1 329 0
 747 005a 02E0     		b	.L40
 748              	.L42:
 330:MAX30101.c    ****                 case MAX30101_MULTI_MODE:
 331:MAX30101.c    ****                     active_leds = 3;
 749              		.loc 1 331 0
 750 005c 0323     		movs	r3, #3
 751 005e BB73     		strb	r3, [r7, #14]
 332:MAX30101.c    ****                     break;
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 20


 752              		.loc 1 332 0
 753 0060 00BF     		nop
 754              	.L40:
 333:MAX30101.c    ****             }
 334:MAX30101.c    ****             uint8_t fifo_values[active_leds*3];
 755              		.loc 1 334 0
 756 0062 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 757 0064 1346     		mov	r3, r2
 758 0066 5B00     		lsls	r3, r3, #1
 759 0068 9918     		adds	r1, r3, r2
 760 006a 6B46     		mov	r3, sp
 761 006c 1E46     		mov	r6, r3
 762 006e 4B1E     		subs	r3, r1, #1
 763 0070 BB60     		str	r3, [r7, #8]
 764 0072 0B46     		mov	r3, r1
 765 0074 1A46     		mov	r2, r3
 766 0076 4FF00003 		mov	r3, #0
 767 007a 4FEAC309 		lsl	r9, r3, #3
 768 007e 49EA5279 		orr	r9, r9, r2, lsr #29
 769 0082 4FEAC208 		lsl	r8, r2, #3
 770 0086 0B46     		mov	r3, r1
 771 0088 1A46     		mov	r2, r3
 772 008a 4FF00003 		mov	r3, #0
 773 008e DD00     		lsls	r5, r3, #3
 774 0090 45EA5275 		orr	r5, r5, r2, lsr #29
 775 0094 D400     		lsls	r4, r2, #3
 776 0096 0B46     		mov	r3, r1
 777 0098 0733     		adds	r3, r3, #7
 778 009a DB08     		lsrs	r3, r3, #3
 779 009c DB00     		lsls	r3, r3, #3
 780 009e ADEB030D 		sub	sp, sp, r3
 781 00a2 6B46     		mov	r3, sp
 782 00a4 0033     		adds	r3, r3, #0
 783 00a6 7B60     		str	r3, [r7, #4]
 335:MAX30101.c    ****             // Read 1 from FIFO to clear the overflow counter
 336:MAX30101.c    ****             error = MAX30101_ReadRawFIFOBytes(1, active_leds, fifo_values);
 784              		.loc 1 336 0
 785 00a8 7A68     		ldr	r2, [r7, #4]
 786 00aa BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 787 00ac 1946     		mov	r1, r3
 788 00ae 0120     		movs	r0, #1
 789 00b0 FFF7FEFF 		bl	MAX30101_ReadRawFIFOBytes
 790 00b4 0346     		mov	r3, r0
 791 00b6 FB73     		strb	r3, [r7, #15]
 792 00b8 B546     		mov	sp, r6
 793              	.L39:
 794              	.LBE2:
 337:MAX30101.c    ****         }
 338:MAX30101.c    ****     }
 339:MAX30101.c    ****     return error;
 795              		.loc 1 339 0
 796 00ba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 340:MAX30101.c    **** }
 797              		.loc 1 340 0
 798 00bc 1846     		mov	r0, r3
 799 00be 1437     		adds	r7, r7, #20
 800              		.cfi_def_cfa_offset 28
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 21


 801 00c0 BD46     		mov	sp, r7
 802              		.cfi_def_cfa_register 13
 803              		@ sp needed
 804 00c2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 805              		.cfi_endproc
 806              	.LFE19:
 807              		.size	MAX30101_ClearFIFO, .-MAX30101_ClearFIFO
 808 00c6 00BF     		.section	.text.MAX30101_ReadRawFIFOBytes,"ax",%progbits
 809              		.align	2
 810              		.global	MAX30101_ReadRawFIFOBytes
 811              		.thumb
 812              		.thumb_func
 813              		.type	MAX30101_ReadRawFIFOBytes, %function
 814              	MAX30101_ReadRawFIFOBytes:
 815              	.LFB20:
 341:MAX30101.c    **** 
 342:MAX30101.c    **** uint8_t MAX30101_ReadRawFIFOBytes(uint8_t num_samples, uint8_t active_leds, uint8_t* data)
 343:MAX30101.c    **** {
 816              		.loc 1 343 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 16
 819              		@ frame_needed = 1, uses_anonymous_args = 0
 820 0000 80B5     		push	{r7, lr}
 821              		.cfi_def_cfa_offset 8
 822              		.cfi_offset 7, -8
 823              		.cfi_offset 14, -4
 824 0002 84B0     		sub	sp, sp, #16
 825              		.cfi_def_cfa_offset 24
 826 0004 00AF     		add	r7, sp, #0
 827              		.cfi_def_cfa_register 7
 828 0006 0346     		mov	r3, r0
 829 0008 3A60     		str	r2, [r7]
 830 000a FB71     		strb	r3, [r7, #7]
 831 000c 0B46     		mov	r3, r1
 832 000e BB71     		strb	r3, [r7, #6]
 344:MAX30101.c    ****     // We need to read a number of bytes equal to num_samples + 3 * active_leds
 345:MAX30101.c    ****     uint16_t bytes_left_ro_read = num_samples * 3 * active_leds;
 833              		.loc 1 345 0
 834 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 835 0012 9BB2     		uxth	r3, r3
 836 0014 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 837 0016 92B2     		uxth	r2, r2
 838 0018 02FB03F3 		mul	r3, r2, r3
 839 001c 9BB2     		uxth	r3, r3
 840 001e 1A46     		mov	r2, r3	@ movhi
 841 0020 5200     		lsls	r2, r2, #1
 842 0022 1344     		add	r3, r3, r2
 843 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 346:MAX30101.c    ****     if (I2C_Peripheral_ReadRegisterMulti(MAX30101_I2C_ADDRESS, MAX30101_FIFO_DATA, bytes_left_ro_re
 844              		.loc 1 346 0
 845 0026 FA89     		ldrh	r2, [r7, #14]
 846 0028 3B68     		ldr	r3, [r7]
 847 002a 0721     		movs	r1, #7
 848 002c 5720     		movs	r0, #87
 849 002e FFF7FEFF 		bl	I2C_Peripheral_ReadRegisterMulti
 850 0032 0346     		mov	r3, r0
 851 0034 002B     		cmp	r3, #0
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 22


 852 0036 01D1     		bne	.L46
 347:MAX30101.c    ****     {
 348:MAX30101.c    ****         return MAX30101_OK;
 853              		.loc 1 348 0
 854 0038 0023     		movs	r3, #0
 855 003a 00E0     		b	.L47
 856              	.L46:
 349:MAX30101.c    ****     }
 350:MAX30101.c    ****     else
 351:MAX30101.c    ****     {
 352:MAX30101.c    ****         return MAX30101_DEV_NOT_FOUND;
 857              		.loc 1 352 0
 858 003c 0123     		movs	r3, #1
 859              	.L47:
 353:MAX30101.c    ****     }
 354:MAX30101.c    **** }
 860              		.loc 1 354 0
 861 003e 1846     		mov	r0, r3
 862 0040 1037     		adds	r7, r7, #16
 863              		.cfi_def_cfa_offset 8
 864 0042 BD46     		mov	sp, r7
 865              		.cfi_def_cfa_register 13
 866              		@ sp needed
 867 0044 80BD     		pop	{r7, pc}
 868              		.cfi_endproc
 869              	.LFE20:
 870              		.size	MAX30101_ReadRawFIFOBytes, .-MAX30101_ReadRawFIFOBytes
 871 0046 00BF     		.section	.text.MAX30101_ReadRawFIFO,"ax",%progbits
 872              		.align	2
 873              		.global	MAX30101_ReadRawFIFO
 874              		.thumb
 875              		.thumb_func
 876              		.type	MAX30101_ReadRawFIFO, %function
 877              	MAX30101_ReadRawFIFO:
 878              	.LFB21:
 355:MAX30101.c    **** 
 356:MAX30101.c    **** // Read FIFO Data
 357:MAX30101.c    **** uint8_t MAX30101_ReadRawFIFO(uint8_t num_samples, uint8_t active_leds, uint32_t* data)
 358:MAX30101.c    **** {
 879              		.loc 1 358 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 32
 882              		@ frame_needed = 1, uses_anonymous_args = 0
 883 0000 80B5     		push	{r7, lr}
 884              		.cfi_def_cfa_offset 8
 885              		.cfi_offset 7, -8
 886              		.cfi_offset 14, -4
 887 0002 88B0     		sub	sp, sp, #32
 888              		.cfi_def_cfa_offset 40
 889 0004 00AF     		add	r7, sp, #0
 890              		.cfi_def_cfa_register 7
 891 0006 0346     		mov	r3, r0
 892 0008 3A60     		str	r2, [r7]
 893 000a FB71     		strb	r3, [r7, #7]
 894 000c 0B46     		mov	r3, r1
 895 000e BB71     		strb	r3, [r7, #6]
 359:MAX30101.c    ****     // We need to read a number of bytes equal to num_samples + 3 * active_leds
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 23


 360:MAX30101.c    ****     uint16_t bytes_left_ro_read = num_samples * 3 * active_leds;
 896              		.loc 1 360 0
 897 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 898 0012 9BB2     		uxth	r3, r3
 899 0014 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 900 0016 92B2     		uxth	r2, r2
 901 0018 02FB03F3 		mul	r3, r2, r3
 902 001c 9BB2     		uxth	r3, r3
 903 001e 1A46     		mov	r2, r3	@ movhi
 904 0020 5200     		lsls	r2, r2, #1
 905 0022 1344     		add	r3, r3, r2
 906 0024 FB83     		strh	r3, [r7, #30]	@ movhi
 361:MAX30101.c    ****     uint8_t error;
 362:MAX30101.c    ****     //uint8_t error = I2C_Peripheral_WriteRegisterNoData(MAX30101_I2C_ADDRESS, MAX30101_FIFO_DATA);
 363:MAX30101.c    ****     //if ( error == I2C_NO_ERROR)
 364:MAX30101.c    ****     //{
 365:MAX30101.c    ****         uint8_t sample_counter = 0;
 907              		.loc 1 365 0
 908 0026 0023     		movs	r3, #0
 909 0028 3B77     		strb	r3, [r7, #28]
 366:MAX30101.c    ****         while(bytes_left_ro_read > 0)
 910              		.loc 1 366 0
 911 002a 7DE0     		b	.L49
 912              	.L52:
 913              	.LBB3:
 367:MAX30101.c    ****         {
 368:MAX30101.c    ****             uint16_t bytes_to_get =  active_leds * 3;
 914              		.loc 1 368 0
 915 002c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 916 002e 9BB2     		uxth	r3, r3
 917 0030 1A46     		mov	r2, r3	@ movhi
 918 0032 5200     		lsls	r2, r2, #1
 919 0034 1344     		add	r3, r3, r2
 920 0036 7B83     		strh	r3, [r7, #26]	@ movhi
 369:MAX30101.c    ****             
 370:MAX30101.c    ****             bytes_left_ro_read -= bytes_to_get;
 921              		.loc 1 370 0
 922 0038 FA8B     		ldrh	r2, [r7, #30]	@ movhi
 923 003a 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 924 003c D31A     		subs	r3, r2, r3
 925 003e FB83     		strh	r3, [r7, #30]	@ movhi
 371:MAX30101.c    ****             
 372:MAX30101.c    ****             uint8_t temp[sizeof(uint32_t)];
 373:MAX30101.c    ****             uint8_t temp_bytes[3];
 374:MAX30101.c    ****             uint32_t tempLong;
 375:MAX30101.c    ****             
 376:MAX30101.c    ****             error = I2C_Peripheral_ReadRegisterMulti(MAX30101_I2C_ADDRESS, MAX30101_FIFO_DATA, 3, t
 926              		.loc 1 376 0
 927 0040 07F11003 		add	r3, r7, #16
 928 0044 0322     		movs	r2, #3
 929 0046 0721     		movs	r1, #7
 930 0048 5720     		movs	r0, #87
 931 004a FFF7FEFF 		bl	I2C_Peripheral_ReadRegisterMulti
 932 004e 0346     		mov	r3, r0
 933 0050 7B77     		strb	r3, [r7, #29]
 377:MAX30101.c    ****             
 378:MAX30101.c    ****             //Burst read three bytes - RED
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 24


 379:MAX30101.c    ****             temp[3] = 0;
 934              		.loc 1 379 0
 935 0052 0023     		movs	r3, #0
 936 0054 FB75     		strb	r3, [r7, #23]
 380:MAX30101.c    ****             temp[2] = temp_bytes[0];
 937              		.loc 1 380 0
 938 0056 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 939 0058 BB75     		strb	r3, [r7, #22]
 381:MAX30101.c    ****             temp[1] = temp_bytes[1];
 940              		.loc 1 381 0
 941 005a 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 942 005c 7B75     		strb	r3, [r7, #21]
 382:MAX30101.c    ****             temp[0] = temp_bytes[2];
 943              		.loc 1 382 0
 944 005e BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 945 0060 3B75     		strb	r3, [r7, #20]
 383:MAX30101.c    **** 
 384:MAX30101.c    ****             //Convert array to long
 385:MAX30101.c    ****             memcpy(&tempLong, temp, sizeof(tempLong));
 946              		.loc 1 385 0
 947 0062 07F11401 		add	r1, r7, #20
 948 0066 07F10C03 		add	r3, r7, #12
 949 006a 0422     		movs	r2, #4
 950 006c 1846     		mov	r0, r3
 951 006e FFF7FEFF 		bl	memcpy
 386:MAX30101.c    ****     		
 387:MAX30101.c    ****             //Zero out all but 18 bits
 388:MAX30101.c    ****     		tempLong &= 0x3FFFF; 
 952              		.loc 1 388 0
 953 0072 FB68     		ldr	r3, [r7, #12]
 954 0074 C3F31103 		ubfx	r3, r3, #0, #18
 955 0078 FB60     		str	r3, [r7, #12]
 389:MAX30101.c    ****             data[sample_counter] = tempLong;
 956              		.loc 1 389 0
 957 007a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 958 007c 9B00     		lsls	r3, r3, #2
 959 007e 3A68     		ldr	r2, [r7]
 960 0080 1344     		add	r3, r3, r2
 961 0082 FA68     		ldr	r2, [r7, #12]
 962 0084 1A60     		str	r2, [r3]
 390:MAX30101.c    ****             
 391:MAX30101.c    ****             if (active_leds > 1)
 963              		.loc 1 391 0
 964 0086 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 965 0088 012B     		cmp	r3, #1
 966 008a 23D9     		bls	.L50
 392:MAX30101.c    ****             {
 393:MAX30101.c    ****                 I2C_Peripheral_ReadRegisterMulti(MAX30101_I2C_ADDRESS, MAX30101_FIFO_DATA, 3, temp_
 967              		.loc 1 393 0
 968 008c 07F11003 		add	r3, r7, #16
 969 0090 0322     		movs	r2, #3
 970 0092 0721     		movs	r1, #7
 971 0094 5720     		movs	r0, #87
 972 0096 FFF7FEFF 		bl	I2C_Peripheral_ReadRegisterMulti
 394:MAX30101.c    ****                
 395:MAX30101.c    ****                 //Burst read three bytes - IR
 396:MAX30101.c    ****                 temp[3] = 0;
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 25


 973              		.loc 1 396 0
 974 009a 0023     		movs	r3, #0
 975 009c FB75     		strb	r3, [r7, #23]
 397:MAX30101.c    ****                 temp[2] = temp_bytes[0];
 976              		.loc 1 397 0
 977 009e 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 978 00a0 BB75     		strb	r3, [r7, #22]
 398:MAX30101.c    ****                 temp[1] = temp_bytes[1];
 979              		.loc 1 398 0
 980 00a2 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 981 00a4 7B75     		strb	r3, [r7, #21]
 399:MAX30101.c    ****                 temp[0] = temp_bytes[2];
 982              		.loc 1 399 0
 983 00a6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 984 00a8 3B75     		strb	r3, [r7, #20]
 400:MAX30101.c    ****             
 401:MAX30101.c    ****                 //Convert array to long
 402:MAX30101.c    ****                 memcpy(&tempLong, temp, sizeof(tempLong));
 985              		.loc 1 402 0
 986 00aa 07F11401 		add	r1, r7, #20
 987 00ae 07F10C03 		add	r3, r7, #12
 988 00b2 0422     		movs	r2, #4
 989 00b4 1846     		mov	r0, r3
 990 00b6 FFF7FEFF 		bl	memcpy
 403:MAX30101.c    ****         		
 404:MAX30101.c    ****                 //Zero out all but 18 bits
 405:MAX30101.c    ****         		tempLong &= 0x3FFFF; 
 991              		.loc 1 405 0
 992 00ba FB68     		ldr	r3, [r7, #12]
 993 00bc C3F31103 		ubfx	r3, r3, #0, #18
 994 00c0 FB60     		str	r3, [r7, #12]
 406:MAX30101.c    ****                 sample_counter += 1;
 995              		.loc 1 406 0
 996 00c2 3B7F     		ldrb	r3, [r7, #28]
 997 00c4 0133     		adds	r3, r3, #1
 998 00c6 3B77     		strb	r3, [r7, #28]
 407:MAX30101.c    ****                 data[sample_counter] = tempLong;
 999              		.loc 1 407 0
 1000 00c8 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1001 00ca 9B00     		lsls	r3, r3, #2
 1002 00cc 3A68     		ldr	r2, [r7]
 1003 00ce 1344     		add	r3, r3, r2
 1004 00d0 FA68     		ldr	r2, [r7, #12]
 1005 00d2 1A60     		str	r2, [r3]
 1006              	.L50:
 408:MAX30101.c    ****             }
 409:MAX30101.c    ****             if (active_leds > 2)
 1007              		.loc 1 409 0
 1008 00d4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1009 00d6 022B     		cmp	r3, #2
 1010 00d8 23D9     		bls	.L51
 410:MAX30101.c    ****             {
 411:MAX30101.c    ****                 I2C_Peripheral_ReadRegisterMulti(MAX30101_I2C_ADDRESS, MAX30101_FIFO_DATA,3, temp_b
 1011              		.loc 1 411 0
 1012 00da 07F11003 		add	r3, r7, #16
 1013 00de 0322     		movs	r2, #3
 1014 00e0 0721     		movs	r1, #7
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 26


 1015 00e2 5720     		movs	r0, #87
 1016 00e4 FFF7FEFF 		bl	I2C_Peripheral_ReadRegisterMulti
 412:MAX30101.c    ****                 
 413:MAX30101.c    ****                 //Burst read three bytes - GREEN
 414:MAX30101.c    ****                 temp[3] = 0;
 1017              		.loc 1 414 0
 1018 00e8 0023     		movs	r3, #0
 1019 00ea FB75     		strb	r3, [r7, #23]
 415:MAX30101.c    ****                 temp[2] = temp_bytes[0];
 1020              		.loc 1 415 0
 1021 00ec 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 1022 00ee BB75     		strb	r3, [r7, #22]
 416:MAX30101.c    ****                 temp[1] = temp_bytes[1];
 1023              		.loc 1 416 0
 1024 00f0 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 1025 00f2 7B75     		strb	r3, [r7, #21]
 417:MAX30101.c    ****                 temp[0] = temp_bytes[2];
 1026              		.loc 1 417 0
 1027 00f4 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 1028 00f6 3B75     		strb	r3, [r7, #20]
 418:MAX30101.c    **** 
 419:MAX30101.c    ****                 //Convert array to long
 420:MAX30101.c    ****                 memcpy(&tempLong, temp, sizeof(tempLong));
 1029              		.loc 1 420 0
 1030 00f8 07F11401 		add	r1, r7, #20
 1031 00fc 07F10C03 		add	r3, r7, #12
 1032 0100 0422     		movs	r2, #4
 1033 0102 1846     		mov	r0, r3
 1034 0104 FFF7FEFF 		bl	memcpy
 421:MAX30101.c    ****         		
 422:MAX30101.c    ****                 //Zero out all but 18 bits
 423:MAX30101.c    ****         		tempLong &= 0x3FFFF; 
 1035              		.loc 1 423 0
 1036 0108 FB68     		ldr	r3, [r7, #12]
 1037 010a C3F31103 		ubfx	r3, r3, #0, #18
 1038 010e FB60     		str	r3, [r7, #12]
 424:MAX30101.c    ****                 sample_counter += 1;
 1039              		.loc 1 424 0
 1040 0110 3B7F     		ldrb	r3, [r7, #28]
 1041 0112 0133     		adds	r3, r3, #1
 1042 0114 3B77     		strb	r3, [r7, #28]
 425:MAX30101.c    ****                 data[sample_counter] = tempLong;
 1043              		.loc 1 425 0
 1044 0116 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1045 0118 9B00     		lsls	r3, r3, #2
 1046 011a 3A68     		ldr	r2, [r7]
 1047 011c 1344     		add	r3, r3, r2
 1048 011e FA68     		ldr	r2, [r7, #12]
 1049 0120 1A60     		str	r2, [r3]
 1050              	.L51:
 426:MAX30101.c    ****             }
 427:MAX30101.c    ****             sample_counter += 1;
 1051              		.loc 1 427 0
 1052 0122 3B7F     		ldrb	r3, [r7, #28]
 1053 0124 0133     		adds	r3, r3, #1
 1054 0126 3B77     		strb	r3, [r7, #28]
 1055              	.L49:
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 27


 1056              	.LBE3:
 366:MAX30101.c    ****         {
 1057              		.loc 1 366 0
 1058 0128 FB8B     		ldrh	r3, [r7, #30]
 1059 012a 002B     		cmp	r3, #0
 1060 012c 7FF47EAF 		bne	.L52
 428:MAX30101.c    ****             
 429:MAX30101.c    ****         }
 430:MAX30101.c    ****     //}
 431:MAX30101.c    ****     return error;
 1061              		.loc 1 431 0
 1062 0130 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 432:MAX30101.c    **** }
 1063              		.loc 1 432 0
 1064 0132 1846     		mov	r0, r3
 1065 0134 2037     		adds	r7, r7, #32
 1066              		.cfi_def_cfa_offset 8
 1067 0136 BD46     		mov	sp, r7
 1068              		.cfi_def_cfa_register 13
 1069              		@ sp needed
 1070 0138 80BD     		pop	{r7, pc}
 1071              		.cfi_endproc
 1072              	.LFE21:
 1073              		.size	MAX30101_ReadRawFIFO, .-MAX30101_ReadRawFIFO
 1074 013a 00BF     		.section	.text.MAX30101_ReadFIFO,"ax",%progbits
 1075              		.align	2
 1076              		.global	MAX30101_ReadFIFO
 1077              		.thumb
 1078              		.thumb_func
 1079              		.type	MAX30101_ReadFIFO, %function
 1080              	MAX30101_ReadFIFO:
 1081              	.LFB22:
 433:MAX30101.c    **** 
 434:MAX30101.c    **** // Read FIFO Data
 435:MAX30101.c    **** uint8_t MAX30101_ReadFIFO(uint8_t num_samples, uint8_t active_leds, MAX30101_Data* data)
 436:MAX30101.c    **** {
 1082              		.loc 1 436 0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 24
 1085              		@ frame_needed = 1, uses_anonymous_args = 0
 1086 0000 80B5     		push	{r7, lr}
 1087              		.cfi_def_cfa_offset 8
 1088              		.cfi_offset 7, -8
 1089              		.cfi_offset 14, -4
 1090 0002 86B0     		sub	sp, sp, #24
 1091              		.cfi_def_cfa_offset 32
 1092 0004 00AF     		add	r7, sp, #0
 1093              		.cfi_def_cfa_register 7
 1094 0006 0346     		mov	r3, r0
 1095 0008 3A60     		str	r2, [r7]
 1096 000a FB71     		strb	r3, [r7, #7]
 1097 000c 0B46     		mov	r3, r1
 1098 000e BB71     		strb	r3, [r7, #6]
 437:MAX30101.c    ****     // We need to read a number of bytes equal to num_samples + 3 * active_leds
 438:MAX30101.c    ****     uint16_t bytes_left_ro_read = num_samples * 3 * active_leds;
 1099              		.loc 1 438 0
 1100 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 28


 1101 0012 9BB2     		uxth	r3, r3
 1102 0014 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 1103 0016 92B2     		uxth	r2, r2
 1104 0018 02FB03F3 		mul	r3, r2, r3
 1105 001c 9BB2     		uxth	r3, r3
 1106 001e 1A46     		mov	r2, r3	@ movhi
 1107 0020 5200     		lsls	r2, r2, #1
 1108 0022 1344     		add	r3, r3, r2
 1109 0024 FB82     		strh	r3, [r7, #22]	@ movhi
 439:MAX30101.c    ****     uint8_t error = MAX30101_OK;
 1110              		.loc 1 439 0
 1111 0026 0023     		movs	r3, #0
 1112 0028 7B75     		strb	r3, [r7, #21]
 440:MAX30101.c    ****     
 441:MAX30101.c    ****     // Read current resolution so that we know how much shift to apply
 442:MAX30101.c    ****     uint8_t resolution = 0;
 1113              		.loc 1 442 0
 1114 002a 0023     		movs	r3, #0
 1115 002c 7B74     		strb	r3, [r7, #17]
 443:MAX30101.c    ****     I2C_Peripheral_ReadRegister(MAX30101_I2C_ADDRESS, MAX30101_SPO2_CONF, &resolution);
 1116              		.loc 1 443 0
 1117 002e 07F11103 		add	r3, r7, #17
 1118 0032 1A46     		mov	r2, r3
 1119 0034 0A21     		movs	r1, #10
 1120 0036 5720     		movs	r0, #87
 1121 0038 FFF7FEFF 		bl	I2C_Peripheral_ReadRegister
 444:MAX30101.c    ****     resolution &= (~MAX30101_SPO2_PULSEWIDTH_MASK);
 1122              		.loc 1 444 0
 1123 003c 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 1124 003e 03F00303 		and	r3, r3, #3
 1125 0042 DBB2     		uxtb	r3, r3
 1126 0044 7B74     		strb	r3, [r7, #17]
 445:MAX30101.c    ****     
 446:MAX30101.c    ****     I2C_Master_MasterSendStart(MAX30101_I2C_ADDRESS, I2C_Master_WRITE_XFER_MODE);
 1127              		.loc 1 446 0
 1128 0046 0021     		movs	r1, #0
 1129 0048 5720     		movs	r0, #87
 1130 004a FFF7FEFF 		bl	I2C_Master_MasterSendStart
 447:MAX30101.c    ****     I2C_Master_MasterWriteByte(MAX30101_FIFO_DATA);
 1131              		.loc 1 447 0
 1132 004e 0720     		movs	r0, #7
 1133 0050 FFF7FEFF 		bl	I2C_Master_MasterWriteByte
 448:MAX30101.c    ****     I2C_Master_MasterSendRestart(MAX30101_I2C_ADDRESS, I2C_Master_READ_XFER_MODE);
 1134              		.loc 1 448 0
 1135 0054 0121     		movs	r1, #1
 1136 0056 5720     		movs	r0, #87
 1137 0058 FFF7FEFF 		bl	I2C_Master_MasterSendRestart
 449:MAX30101.c    ****     
 450:MAX30101.c    ****     //I2C_Peripheral_WriteRegisterNoData(MAX30101_I2C_ADDRESS, MAX30101_FIFO_DATA);
 451:MAX30101.c    ****     //I2C_Peripheral_StartReadNoAddress(MAX30101_I2C_ADDRESS);
 452:MAX30101.c    ****     
 453:MAX30101.c    ****     while(bytes_left_ro_read > 0)
 1138              		.loc 1 453 0
 1139 005c A6E0     		b	.L55
 1140              	.L58:
 1141              	.LBB4:
 454:MAX30101.c    ****     {
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 29


 455:MAX30101.c    ****         uint16_t bytes_to_get =  active_leds * 3;
 1142              		.loc 1 455 0
 1143 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1144 0060 9BB2     		uxth	r3, r3
 1145 0062 1A46     		mov	r2, r3	@ movhi
 1146 0064 5200     		lsls	r2, r2, #1
 1147 0066 1344     		add	r3, r3, r2
 1148 0068 7B82     		strh	r3, [r7, #18]	@ movhi
 456:MAX30101.c    ****         
 457:MAX30101.c    ****         bytes_left_ro_read -= bytes_to_get;
 1149              		.loc 1 457 0
 1150 006a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 1151 006c 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1152 006e D31A     		subs	r3, r2, r3
 1153 0070 FB82     		strh	r3, [r7, #22]	@ movhi
 458:MAX30101.c    ****         
 459:MAX30101.c    ****         data->head++; //Advance the head of the storage struct
 1154              		.loc 1 459 0
 1155 0072 3B68     		ldr	r3, [r7]
 1156 0074 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 1157 0078 0133     		adds	r3, r3, #1
 1158 007a DAB2     		uxtb	r2, r3
 1159 007c 3B68     		ldr	r3, [r7]
 1160 007e 83F86020 		strb	r2, [r3, #96]
 460:MAX30101.c    ****         data->head %= BUFFER_STORAGE_SIZE; //Wrap condition
 1161              		.loc 1 460 0
 1162 0082 3B68     		ldr	r3, [r7]
 1163 0084 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 1164 0088 03F00703 		and	r3, r3, #7
 1165 008c DAB2     		uxtb	r2, r3
 1166 008e 3B68     		ldr	r3, [r7]
 1167 0090 83F86020 		strb	r2, [r3, #96]
 461:MAX30101.c    ****         
 462:MAX30101.c    ****         uint8_t temp[sizeof(uint32_t)];
 463:MAX30101.c    ****         uint32_t tempLong;
 464:MAX30101.c    ****         
 465:MAX30101.c    ****         //error = I2C_Peripheral_ReadBytes(temp_bytes, 3);
 466:MAX30101.c    ****         
 467:MAX30101.c    ****         //Burst read three bytes - RED
 468:MAX30101.c    ****         temp[3] = 0;
 1168              		.loc 1 468 0
 1169 0094 0023     		movs	r3, #0
 1170 0096 FB73     		strb	r3, [r7, #15]
 469:MAX30101.c    ****         temp[2] = I2C_Master_MasterReadByte(I2C_Master_ACK_DATA);
 1171              		.loc 1 469 0
 1172 0098 0120     		movs	r0, #1
 1173 009a FFF7FEFF 		bl	I2C_Master_MasterReadByte
 1174 009e 0346     		mov	r3, r0
 1175 00a0 BB73     		strb	r3, [r7, #14]
 470:MAX30101.c    ****         temp[1] = I2C_Master_MasterReadByte(I2C_Master_ACK_DATA);
 1176              		.loc 1 470 0
 1177 00a2 0120     		movs	r0, #1
 1178 00a4 FFF7FEFF 		bl	I2C_Master_MasterReadByte
 1179 00a8 0346     		mov	r3, r0
 1180 00aa 7B73     		strb	r3, [r7, #13]
 471:MAX30101.c    ****         temp[0] = I2C_Master_MasterReadByte(I2C_Master_ACK_DATA);
 1181              		.loc 1 471 0
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 30


 1182 00ac 0120     		movs	r0, #1
 1183 00ae FFF7FEFF 		bl	I2C_Master_MasterReadByte
 1184 00b2 0346     		mov	r3, r0
 1185 00b4 3B73     		strb	r3, [r7, #12]
 472:MAX30101.c    **** 
 473:MAX30101.c    ****         //Convert array to long
 474:MAX30101.c    ****         memcpy(&tempLong, temp, sizeof(tempLong));
 1186              		.loc 1 474 0
 1187 00b6 07F10C01 		add	r1, r7, #12
 1188 00ba 07F10803 		add	r3, r7, #8
 1189 00be 0422     		movs	r2, #4
 1190 00c0 1846     		mov	r0, r3
 1191 00c2 FFF7FEFF 		bl	memcpy
 475:MAX30101.c    **** 		
 476:MAX30101.c    ****         //Zero out all but 18 bits
 477:MAX30101.c    **** 		tempLong &= 0x3FFFF; 
 1192              		.loc 1 477 0
 1193 00c6 BB68     		ldr	r3, [r7, #8]
 1194 00c8 C3F31103 		ubfx	r3, r3, #0, #18
 1195 00cc BB60     		str	r3, [r7, #8]
 478:MAX30101.c    ****         
 479:MAX30101.c    ****         // Shift according to resolution
 480:MAX30101.c    ****         tempLong = tempLong >> (MAX30101_SHIFT(resolution));
 1196              		.loc 1 480 0
 1197 00ce BA68     		ldr	r2, [r7, #8]
 1198 00d0 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 1199 00d2 C3F10403 		rsb	r3, r3, #4
 1200 00d6 22FA03F3 		lsr	r3, r2, r3
 1201 00da BB60     		str	r3, [r7, #8]
 481:MAX30101.c    ****         
 482:MAX30101.c    ****         data->red[data->head] = tempLong; //Store this reading into the sense array
 1202              		.loc 1 482 0
 1203 00dc 3B68     		ldr	r3, [r7]
 1204 00de 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 1205 00e2 1946     		mov	r1, r3
 1206 00e4 BA68     		ldr	r2, [r7, #8]
 1207 00e6 3B68     		ldr	r3, [r7]
 1208 00e8 43F82120 		str	r2, [r3, r1, lsl #2]
 483:MAX30101.c    ****         
 484:MAX30101.c    ****         if (active_leds > 1)
 1209              		.loc 1 484 0
 1210 00ec BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1211 00ee 012B     		cmp	r3, #1
 1212 00f0 2CD9     		bls	.L56
 485:MAX30101.c    ****         {
 486:MAX30101.c    ****             //error = I2C_Peripheral_ReadBytes(temp_bytes, 3);
 487:MAX30101.c    ****            
 488:MAX30101.c    ****             //Burst read three bytes - IR
 489:MAX30101.c    ****             temp[3] = 0;
 1213              		.loc 1 489 0
 1214 00f2 0023     		movs	r3, #0
 1215 00f4 FB73     		strb	r3, [r7, #15]
 490:MAX30101.c    ****             temp[2] = I2C_Master_MasterReadByte(I2C_Master_ACK_DATA);
 1216              		.loc 1 490 0
 1217 00f6 0120     		movs	r0, #1
 1218 00f8 FFF7FEFF 		bl	I2C_Master_MasterReadByte
 1219 00fc 0346     		mov	r3, r0
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 31


 1220 00fe BB73     		strb	r3, [r7, #14]
 491:MAX30101.c    ****             temp[1] = I2C_Master_MasterReadByte(I2C_Master_ACK_DATA);
 1221              		.loc 1 491 0
 1222 0100 0120     		movs	r0, #1
 1223 0102 FFF7FEFF 		bl	I2C_Master_MasterReadByte
 1224 0106 0346     		mov	r3, r0
 1225 0108 7B73     		strb	r3, [r7, #13]
 492:MAX30101.c    ****             temp[0] = I2C_Master_MasterReadByte(I2C_Master_ACK_DATA);
 1226              		.loc 1 492 0
 1227 010a 0120     		movs	r0, #1
 1228 010c FFF7FEFF 		bl	I2C_Master_MasterReadByte
 1229 0110 0346     		mov	r3, r0
 1230 0112 3B73     		strb	r3, [r7, #12]
 493:MAX30101.c    ****         
 494:MAX30101.c    ****             //Convert array to long
 495:MAX30101.c    ****             memcpy(&tempLong, temp, sizeof(tempLong));
 1231              		.loc 1 495 0
 1232 0114 07F10C01 		add	r1, r7, #12
 1233 0118 07F10803 		add	r3, r7, #8
 1234 011c 0422     		movs	r2, #4
 1235 011e 1846     		mov	r0, r3
 1236 0120 FFF7FEFF 		bl	memcpy
 496:MAX30101.c    ****     		
 497:MAX30101.c    ****             //Zero out all but 18 bits
 498:MAX30101.c    ****     		tempLong &= 0x3FFFF;
 1237              		.loc 1 498 0
 1238 0124 BB68     		ldr	r3, [r7, #8]
 1239 0126 C3F31103 		ubfx	r3, r3, #0, #18
 1240 012a BB60     		str	r3, [r7, #8]
 499:MAX30101.c    ****             tempLong = tempLong >> (MAX30101_SHIFT(resolution));
 1241              		.loc 1 499 0
 1242 012c BA68     		ldr	r2, [r7, #8]
 1243 012e 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 1244 0130 C3F10403 		rsb	r3, r3, #4
 1245 0134 22FA03F3 		lsr	r3, r2, r3
 1246 0138 BB60     		str	r3, [r7, #8]
 500:MAX30101.c    ****             
 501:MAX30101.c    ****             data->IR[data->head] = tempLong; //Store this reading into the sense array
 1247              		.loc 1 501 0
 1248 013a 3B68     		ldr	r3, [r7]
 1249 013c 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 1250 0140 1A46     		mov	r2, r3
 1251 0142 B968     		ldr	r1, [r7, #8]
 1252 0144 3B68     		ldr	r3, [r7]
 1253 0146 0832     		adds	r2, r2, #8
 1254 0148 43F82210 		str	r1, [r3, r2, lsl #2]
 1255              	.L56:
 502:MAX30101.c    ****         }
 503:MAX30101.c    ****         if (active_leds > 2)
 1256              		.loc 1 503 0
 1257 014c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1258 014e 022B     		cmp	r3, #2
 1259 0150 2CD9     		bls	.L55
 504:MAX30101.c    ****         {
 505:MAX30101.c    ****             //error = I2C_Peripheral_ReadBytes(temp_bytes, 3);
 506:MAX30101.c    ****             
 507:MAX30101.c    ****             //Burst read three bytes - GREEN
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 32


 508:MAX30101.c    ****             temp[3] = 0;
 1260              		.loc 1 508 0
 1261 0152 0023     		movs	r3, #0
 1262 0154 FB73     		strb	r3, [r7, #15]
 509:MAX30101.c    ****             temp[2] = I2C_Master_MasterReadByte(I2C_Master_ACK_DATA);
 1263              		.loc 1 509 0
 1264 0156 0120     		movs	r0, #1
 1265 0158 FFF7FEFF 		bl	I2C_Master_MasterReadByte
 1266 015c 0346     		mov	r3, r0
 1267 015e BB73     		strb	r3, [r7, #14]
 510:MAX30101.c    ****             temp[1] = I2C_Master_MasterReadByte(I2C_Master_ACK_DATA);
 1268              		.loc 1 510 0
 1269 0160 0120     		movs	r0, #1
 1270 0162 FFF7FEFF 		bl	I2C_Master_MasterReadByte
 1271 0166 0346     		mov	r3, r0
 1272 0168 7B73     		strb	r3, [r7, #13]
 511:MAX30101.c    ****             temp[0] = I2C_Master_MasterReadByte(I2C_Master_ACK_DATA);
 1273              		.loc 1 511 0
 1274 016a 0120     		movs	r0, #1
 1275 016c FFF7FEFF 		bl	I2C_Master_MasterReadByte
 1276 0170 0346     		mov	r3, r0
 1277 0172 3B73     		strb	r3, [r7, #12]
 512:MAX30101.c    **** 
 513:MAX30101.c    ****             //Convert array to long
 514:MAX30101.c    ****             memcpy(&tempLong, temp, sizeof(tempLong));
 1278              		.loc 1 514 0
 1279 0174 07F10C01 		add	r1, r7, #12
 1280 0178 07F10803 		add	r3, r7, #8
 1281 017c 0422     		movs	r2, #4
 1282 017e 1846     		mov	r0, r3
 1283 0180 FFF7FEFF 		bl	memcpy
 515:MAX30101.c    ****     		
 516:MAX30101.c    ****             //Zero out all but 18 bits
 517:MAX30101.c    ****     		tempLong &= 0x3FFFF; 
 1284              		.loc 1 517 0
 1285 0184 BB68     		ldr	r3, [r7, #8]
 1286 0186 C3F31103 		ubfx	r3, r3, #0, #18
 1287 018a BB60     		str	r3, [r7, #8]
 518:MAX30101.c    ****             
 519:MAX30101.c    ****             tempLong = tempLong >> (MAX30101_SHIFT(resolution));
 1288              		.loc 1 519 0
 1289 018c BA68     		ldr	r2, [r7, #8]
 1290 018e 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 1291 0190 C3F10403 		rsb	r3, r3, #4
 1292 0194 22FA03F3 		lsr	r3, r2, r3
 1293 0198 BB60     		str	r3, [r7, #8]
 520:MAX30101.c    ****             
 521:MAX30101.c    ****             data->green[data->head] = tempLong; //Store this reading into the sense array
 1294              		.loc 1 521 0
 1295 019a 3B68     		ldr	r3, [r7]
 1296 019c 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 1297 01a0 1A46     		mov	r2, r3
 1298 01a2 B968     		ldr	r1, [r7, #8]
 1299 01a4 3B68     		ldr	r3, [r7]
 1300 01a6 1032     		adds	r2, r2, #16
 1301 01a8 43F82210 		str	r1, [r3, r2, lsl #2]
 1302              	.L55:
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 33


 1303              	.LBE4:
 453:MAX30101.c    ****     {
 1304              		.loc 1 453 0
 1305 01ac FB8A     		ldrh	r3, [r7, #22]
 1306 01ae 002B     		cmp	r3, #0
 1307 01b0 7FF455AF 		bne	.L58
 522:MAX30101.c    ****         }
 523:MAX30101.c    ****     }
 524:MAX30101.c    ****     
 525:MAX30101.c    ****     I2C_Master_MasterSendStop();
 1308              		.loc 1 525 0
 1309 01b4 FFF7FEFF 		bl	I2C_Master_MasterSendStop
 526:MAX30101.c    ****     return error;
 1310              		.loc 1 526 0
 1311 01b8 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 527:MAX30101.c    **** }
 1312              		.loc 1 527 0
 1313 01ba 1846     		mov	r0, r3
 1314 01bc 1837     		adds	r7, r7, #24
 1315              		.cfi_def_cfa_offset 8
 1316 01be BD46     		mov	sp, r7
 1317              		.cfi_def_cfa_register 13
 1318              		@ sp needed
 1319 01c0 80BD     		pop	{r7, pc}
 1320              		.cfi_endproc
 1321              	.LFE22:
 1322              		.size	MAX30101_ReadFIFO, .-MAX30101_ReadFIFO
 1323 01c2 00BF     		.section	.text.MAX30101_SetSampleAverage,"ax",%progbits
 1324              		.align	2
 1325              		.global	MAX30101_SetSampleAverage
 1326              		.thumb
 1327              		.thumb_func
 1328              		.type	MAX30101_SetSampleAverage, %function
 1329              	MAX30101_SetSampleAverage:
 1330              	.LFB23:
 528:MAX30101.c    **** 
 529:MAX30101.c    **** //==============================================
 530:MAX30101.c    **** //    MAX30101 FIFO CONFIGURATION FUNCTIONS
 531:MAX30101.c    **** //==============================================
 532:MAX30101.c    **** 
 533:MAX30101.c    **** /// Set number of averaged samples
 534:MAX30101.c    **** uint8_t MAX30101_SetSampleAverage(uint8_t samples)
 535:MAX30101.c    **** {
 1331              		.loc 1 535 0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 8
 1334              		@ frame_needed = 1, uses_anonymous_args = 0
 1335 0000 80B5     		push	{r7, lr}
 1336              		.cfi_def_cfa_offset 8
 1337              		.cfi_offset 7, -8
 1338              		.cfi_offset 14, -4
 1339 0002 82B0     		sub	sp, sp, #8
 1340              		.cfi_def_cfa_offset 16
 1341 0004 00AF     		add	r7, sp, #0
 1342              		.cfi_def_cfa_register 7
 1343 0006 0346     		mov	r3, r0
 1344 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 34


 536:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_FIFO_CONF, MAX30101_SMP_AVG_MASK, samples);
 1345              		.loc 1 536 0
 1346 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1347 000c 1A46     		mov	r2, r3
 1348 000e 1F21     		movs	r1, #31
 1349 0010 0820     		movs	r0, #8
 1350 0012 FFF7FEFF 		bl	MAX30101_BitMask
 1351 0016 0346     		mov	r3, r0
 537:MAX30101.c    **** }
 1352              		.loc 1 537 0
 1353 0018 1846     		mov	r0, r3
 1354 001a 0837     		adds	r7, r7, #8
 1355              		.cfi_def_cfa_offset 8
 1356 001c BD46     		mov	sp, r7
 1357              		.cfi_def_cfa_register 13
 1358              		@ sp needed
 1359 001e 80BD     		pop	{r7, pc}
 1360              		.cfi_endproc
 1361              	.LFE23:
 1362              		.size	MAX30101_SetSampleAverage, .-MAX30101_SetSampleAverage
 1363              		.section	.text.MAX30101_EnableFIFORollover,"ax",%progbits
 1364              		.align	2
 1365              		.global	MAX30101_EnableFIFORollover
 1366              		.thumb
 1367              		.thumb_func
 1368              		.type	MAX30101_EnableFIFORollover, %function
 1369              	MAX30101_EnableFIFORollover:
 1370              	.LFB24:
 538:MAX30101.c    **** 
 539:MAX30101.c    **** // Enable FIFO rollover
 540:MAX30101.c    **** uint8_t MAX30101_EnableFIFORollover(void)
 541:MAX30101.c    **** {
 1371              		.loc 1 541 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 1, uses_anonymous_args = 0
 1375 0000 80B5     		push	{r7, lr}
 1376              		.cfi_def_cfa_offset 8
 1377              		.cfi_offset 7, -8
 1378              		.cfi_offset 14, -4
 1379 0002 00AF     		add	r7, sp, #0
 1380              		.cfi_def_cfa_register 7
 542:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_FIFO_CONF, MAX30101_FIFO_ROLLOVER_MASK, MAX30101_FIFO_ROLLOVER
 1381              		.loc 1 542 0
 1382 0004 1022     		movs	r2, #16
 1383 0006 EF21     		movs	r1, #239
 1384 0008 0820     		movs	r0, #8
 1385 000a FFF7FEFF 		bl	MAX30101_BitMask
 1386 000e 0346     		mov	r3, r0
 543:MAX30101.c    **** }
 1387              		.loc 1 543 0
 1388 0010 1846     		mov	r0, r3
 1389 0012 80BD     		pop	{r7, pc}
 1390              		.cfi_endproc
 1391              	.LFE24:
 1392              		.size	MAX30101_EnableFIFORollover, .-MAX30101_EnableFIFORollover
 1393              		.section	.text.MAX30101_DisableFIFORollover,"ax",%progbits
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 35


 1394              		.align	2
 1395              		.global	MAX30101_DisableFIFORollover
 1396              		.thumb
 1397              		.thumb_func
 1398              		.type	MAX30101_DisableFIFORollover, %function
 1399              	MAX30101_DisableFIFORollover:
 1400              	.LFB25:
 544:MAX30101.c    **** 
 545:MAX30101.c    **** // Disable FIFO rollover
 546:MAX30101.c    **** uint8_t MAX30101_DisableFIFORollover(void)
 547:MAX30101.c    **** {
 1401              		.loc 1 547 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 1, uses_anonymous_args = 0
 1405 0000 80B5     		push	{r7, lr}
 1406              		.cfi_def_cfa_offset 8
 1407              		.cfi_offset 7, -8
 1408              		.cfi_offset 14, -4
 1409 0002 00AF     		add	r7, sp, #0
 1410              		.cfi_def_cfa_register 7
 548:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_FIFO_CONF, MAX30101_FIFO_ROLLOVER_MASK, MAX30101_FIFO_ROLLOVER
 1411              		.loc 1 548 0
 1412 0004 0022     		movs	r2, #0
 1413 0006 EF21     		movs	r1, #239
 1414 0008 0820     		movs	r0, #8
 1415 000a FFF7FEFF 		bl	MAX30101_BitMask
 1416 000e 0346     		mov	r3, r0
 549:MAX30101.c    **** }
 1417              		.loc 1 549 0
 1418 0010 1846     		mov	r0, r3
 1419 0012 80BD     		pop	{r7, pc}
 1420              		.cfi_endproc
 1421              	.LFE25:
 1422              		.size	MAX30101_DisableFIFORollover, .-MAX30101_DisableFIFORollover
 1423              		.section	.text.MAX30101_SetFIFOAlmostFull,"ax",%progbits
 1424              		.align	2
 1425              		.global	MAX30101_SetFIFOAlmostFull
 1426              		.thumb
 1427              		.thumb_func
 1428              		.type	MAX30101_SetFIFOAlmostFull, %function
 1429              	MAX30101_SetFIFOAlmostFull:
 1430              	.LFB26:
 550:MAX30101.c    **** 
 551:MAX30101.c    **** // Set number of samples for FIFO Almost Full
 552:MAX30101.c    **** uint8_t MAX30101_SetFIFOAlmostFull(uint8_t samples)
 553:MAX30101.c    **** {
 1431              		.loc 1 553 0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 8
 1434              		@ frame_needed = 1, uses_anonymous_args = 0
 1435 0000 80B5     		push	{r7, lr}
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 7, -8
 1438              		.cfi_offset 14, -4
 1439 0002 82B0     		sub	sp, sp, #8
 1440              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 36


 1441 0004 00AF     		add	r7, sp, #0
 1442              		.cfi_def_cfa_register 7
 1443 0006 0346     		mov	r3, r0
 1444 0008 FB71     		strb	r3, [r7, #7]
 554:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_FIFO_CONF, MAX30101_FIFO_A_FULL_MASK, 32-samples);
 1445              		.loc 1 554 0
 1446 000a FB79     		ldrb	r3, [r7, #7]
 1447 000c C3F12003 		rsb	r3, r3, #32
 1448 0010 DBB2     		uxtb	r3, r3
 1449 0012 1A46     		mov	r2, r3
 1450 0014 F021     		movs	r1, #240
 1451 0016 0820     		movs	r0, #8
 1452 0018 FFF7FEFF 		bl	MAX30101_BitMask
 1453 001c 0346     		mov	r3, r0
 555:MAX30101.c    **** }
 1454              		.loc 1 555 0
 1455 001e 1846     		mov	r0, r3
 1456 0020 0837     		adds	r7, r7, #8
 1457              		.cfi_def_cfa_offset 8
 1458 0022 BD46     		mov	sp, r7
 1459              		.cfi_def_cfa_register 13
 1460              		@ sp needed
 1461 0024 80BD     		pop	{r7, pc}
 1462              		.cfi_endproc
 1463              	.LFE26:
 1464              		.size	MAX30101_SetFIFOAlmostFull, .-MAX30101_SetFIFOAlmostFull
 1465 0026 00BF     		.section	.text.MAX30101_Shutdown,"ax",%progbits
 1466              		.align	2
 1467              		.global	MAX30101_Shutdown
 1468              		.thumb
 1469              		.thumb_func
 1470              		.type	MAX30101_Shutdown, %function
 1471              	MAX30101_Shutdown:
 1472              	.LFB27:
 556:MAX30101.c    **** 
 557:MAX30101.c    **** //==============================================
 558:MAX30101.c    **** //     MAX30101 MODE CONFIGURATION FUNCTIONS
 559:MAX30101.c    **** //==============================================
 560:MAX30101.c    **** 
 561:MAX30101.c    **** // Shutdown the MAX30101
 562:MAX30101.c    **** uint8_t MAX30101_Shutdown(void)
 563:MAX30101.c    **** {
 1473              		.loc 1 563 0
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 0
 1476              		@ frame_needed = 1, uses_anonymous_args = 0
 1477 0000 80B5     		push	{r7, lr}
 1478              		.cfi_def_cfa_offset 8
 1479              		.cfi_offset 7, -8
 1480              		.cfi_offset 14, -4
 1481 0002 00AF     		add	r7, sp, #0
 1482              		.cfi_def_cfa_register 7
 564:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_MODE_CONF, MAX30101_SHUTDOWN_MASK, MAX30101_SHUTDOWN_ENABLE);
 1483              		.loc 1 564 0
 1484 0004 8022     		movs	r2, #128
 1485 0006 7F21     		movs	r1, #127
 1486 0008 0920     		movs	r0, #9
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 37


 1487 000a FFF7FEFF 		bl	MAX30101_BitMask
 1488 000e 0346     		mov	r3, r0
 565:MAX30101.c    **** }
 1489              		.loc 1 565 0
 1490 0010 1846     		mov	r0, r3
 1491 0012 80BD     		pop	{r7, pc}
 1492              		.cfi_endproc
 1493              	.LFE27:
 1494              		.size	MAX30101_Shutdown, .-MAX30101_Shutdown
 1495              		.section	.text.MAX30101_WakeUp,"ax",%progbits
 1496              		.align	2
 1497              		.global	MAX30101_WakeUp
 1498              		.thumb
 1499              		.thumb_func
 1500              		.type	MAX30101_WakeUp, %function
 1501              	MAX30101_WakeUp:
 1502              	.LFB28:
 566:MAX30101.c    **** 
 567:MAX30101.c    **** // Wake Up the MAX30101
 568:MAX30101.c    **** uint8_t MAX30101_WakeUp(void)
 569:MAX30101.c    **** {
 1503              		.loc 1 569 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 0
 1506              		@ frame_needed = 1, uses_anonymous_args = 0
 1507 0000 80B5     		push	{r7, lr}
 1508              		.cfi_def_cfa_offset 8
 1509              		.cfi_offset 7, -8
 1510              		.cfi_offset 14, -4
 1511 0002 00AF     		add	r7, sp, #0
 1512              		.cfi_def_cfa_register 7
 570:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_MODE_CONF, MAX30101_SHUTDOWN_MASK, MAX30101_SHUTDOWN_DISABLE);
 1513              		.loc 1 570 0
 1514 0004 0022     		movs	r2, #0
 1515 0006 7F21     		movs	r1, #127
 1516 0008 0920     		movs	r0, #9
 1517 000a FFF7FEFF 		bl	MAX30101_BitMask
 1518 000e 0346     		mov	r3, r0
 571:MAX30101.c    **** }
 1519              		.loc 1 571 0
 1520 0010 1846     		mov	r0, r3
 1521 0012 80BD     		pop	{r7, pc}
 1522              		.cfi_endproc
 1523              	.LFE28:
 1524              		.size	MAX30101_WakeUp, .-MAX30101_WakeUp
 1525              		.section	.text.MAX30101_Reset,"ax",%progbits
 1526              		.align	2
 1527              		.global	MAX30101_Reset
 1528              		.thumb
 1529              		.thumb_func
 1530              		.type	MAX30101_Reset, %function
 1531              	MAX30101_Reset:
 1532              	.LFB29:
 572:MAX30101.c    **** 
 573:MAX30101.c    **** // Reset the MAX30101
 574:MAX30101.c    **** uint8_t MAX30101_Reset(void)
 575:MAX30101.c    **** {
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 38


 1533              		.loc 1 575 0
 1534              		.cfi_startproc
 1535              		@ args = 0, pretend = 0, frame = 0
 1536              		@ frame_needed = 1, uses_anonymous_args = 0
 1537 0000 80B5     		push	{r7, lr}
 1538              		.cfi_def_cfa_offset 8
 1539              		.cfi_offset 7, -8
 1540              		.cfi_offset 14, -4
 1541 0002 00AF     		add	r7, sp, #0
 1542              		.cfi_def_cfa_register 7
 576:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_MODE_CONF, MAX30101_RESET_MASK, MAX30101_RESET_ENABLE);    
 1543              		.loc 1 576 0
 1544 0004 4022     		movs	r2, #64
 1545 0006 BF21     		movs	r1, #191
 1546 0008 0920     		movs	r0, #9
 1547 000a FFF7FEFF 		bl	MAX30101_BitMask
 1548 000e 0346     		mov	r3, r0
 577:MAX30101.c    **** }
 1549              		.loc 1 577 0
 1550 0010 1846     		mov	r0, r3
 1551 0012 80BD     		pop	{r7, pc}
 1552              		.cfi_endproc
 1553              	.LFE29:
 1554              		.size	MAX30101_Reset, .-MAX30101_Reset
 1555              		.section	.text.MAX30101_SetMode,"ax",%progbits
 1556              		.align	2
 1557              		.global	MAX30101_SetMode
 1558              		.thumb
 1559              		.thumb_func
 1560              		.type	MAX30101_SetMode, %function
 1561              	MAX30101_SetMode:
 1562              	.LFB30:
 578:MAX30101.c    **** 
 579:MAX30101.c    **** // Set current mode of operation
 580:MAX30101.c    **** uint8_t MAX30101_SetMode(uint8_t mode)
 581:MAX30101.c    **** {
 1563              		.loc 1 581 0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 8
 1566              		@ frame_needed = 1, uses_anonymous_args = 0
 1567 0000 80B5     		push	{r7, lr}
 1568              		.cfi_def_cfa_offset 8
 1569              		.cfi_offset 7, -8
 1570              		.cfi_offset 14, -4
 1571 0002 82B0     		sub	sp, sp, #8
 1572              		.cfi_def_cfa_offset 16
 1573 0004 00AF     		add	r7, sp, #0
 1574              		.cfi_def_cfa_register 7
 1575 0006 0346     		mov	r3, r0
 1576 0008 FB71     		strb	r3, [r7, #7]
 582:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_MODE_CONF, MAX30101_MODE_MASK, mode);
 1577              		.loc 1 582 0
 1578 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1579 000c 1A46     		mov	r2, r3
 1580 000e F821     		movs	r1, #248
 1581 0010 0920     		movs	r0, #9
 1582 0012 FFF7FEFF 		bl	MAX30101_BitMask
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 39


 1583 0016 0346     		mov	r3, r0
 583:MAX30101.c    **** }
 1584              		.loc 1 583 0
 1585 0018 1846     		mov	r0, r3
 1586 001a 0837     		adds	r7, r7, #8
 1587              		.cfi_def_cfa_offset 8
 1588 001c BD46     		mov	sp, r7
 1589              		.cfi_def_cfa_register 13
 1590              		@ sp needed
 1591 001e 80BD     		pop	{r7, pc}
 1592              		.cfi_endproc
 1593              	.LFE30:
 1594              		.size	MAX30101_SetMode, .-MAX30101_SetMode
 1595              		.section	.text.MAX30101_SetSpO2ADCRange,"ax",%progbits
 1596              		.align	2
 1597              		.global	MAX30101_SetSpO2ADCRange
 1598              		.thumb
 1599              		.thumb_func
 1600              		.type	MAX30101_SetSpO2ADCRange, %function
 1601              	MAX30101_SetSpO2ADCRange:
 1602              	.LFB31:
 584:MAX30101.c    **** 
 585:MAX30101.c    **** //==============================================
 586:MAX30101.c    **** //     MAX30101 SPO2 CONFIGURATION FUNCTIONS
 587:MAX30101.c    **** //==============================================
 588:MAX30101.c    **** // Set SpO2 ADC Range
 589:MAX30101.c    **** uint8_t MAX30101_SetSpO2ADCRange(uint8_t range)
 590:MAX30101.c    **** {
 1603              		.loc 1 590 0
 1604              		.cfi_startproc
 1605              		@ args = 0, pretend = 0, frame = 8
 1606              		@ frame_needed = 1, uses_anonymous_args = 0
 1607 0000 80B5     		push	{r7, lr}
 1608              		.cfi_def_cfa_offset 8
 1609              		.cfi_offset 7, -8
 1610              		.cfi_offset 14, -4
 1611 0002 82B0     		sub	sp, sp, #8
 1612              		.cfi_def_cfa_offset 16
 1613 0004 00AF     		add	r7, sp, #0
 1614              		.cfi_def_cfa_register 7
 1615 0006 0346     		mov	r3, r0
 1616 0008 FB71     		strb	r3, [r7, #7]
 591:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_SPO2_CONF, MAX30101_SPO2_ADC_RANGE_MASK, range);
 1617              		.loc 1 591 0
 1618 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1619 000c 1A46     		mov	r2, r3
 1620 000e 9F21     		movs	r1, #159
 1621 0010 0A20     		movs	r0, #10
 1622 0012 FFF7FEFF 		bl	MAX30101_BitMask
 1623 0016 0346     		mov	r3, r0
 592:MAX30101.c    **** }
 1624              		.loc 1 592 0
 1625 0018 1846     		mov	r0, r3
 1626 001a 0837     		adds	r7, r7, #8
 1627              		.cfi_def_cfa_offset 8
 1628 001c BD46     		mov	sp, r7
 1629              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 40


 1630              		@ sp needed
 1631 001e 80BD     		pop	{r7, pc}
 1632              		.cfi_endproc
 1633              	.LFE31:
 1634              		.size	MAX30101_SetSpO2ADCRange, .-MAX30101_SetSpO2ADCRange
 1635              		.section	.text.MAX30101_SetSpO2SampleRate,"ax",%progbits
 1636              		.align	2
 1637              		.global	MAX30101_SetSpO2SampleRate
 1638              		.thumb
 1639              		.thumb_func
 1640              		.type	MAX30101_SetSpO2SampleRate, %function
 1641              	MAX30101_SetSpO2SampleRate:
 1642              	.LFB32:
 593:MAX30101.c    **** 
 594:MAX30101.c    **** // Set SpO2 Sample Rate
 595:MAX30101.c    **** uint8_t MAX30101_SetSpO2SampleRate(uint8_t sr)
 596:MAX30101.c    **** {
 1643              		.loc 1 596 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 8
 1646              		@ frame_needed = 1, uses_anonymous_args = 0
 1647 0000 80B5     		push	{r7, lr}
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 7, -8
 1650              		.cfi_offset 14, -4
 1651 0002 82B0     		sub	sp, sp, #8
 1652              		.cfi_def_cfa_offset 16
 1653 0004 00AF     		add	r7, sp, #0
 1654              		.cfi_def_cfa_register 7
 1655 0006 0346     		mov	r3, r0
 1656 0008 FB71     		strb	r3, [r7, #7]
 597:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_SPO2_CONF, MAX30101_SPO2_SAMPLE_RATE_MASK, sr);
 1657              		.loc 1 597 0
 1658 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1659 000c 1A46     		mov	r2, r3
 1660 000e E321     		movs	r1, #227
 1661 0010 0A20     		movs	r0, #10
 1662 0012 FFF7FEFF 		bl	MAX30101_BitMask
 1663 0016 0346     		mov	r3, r0
 598:MAX30101.c    **** }
 1664              		.loc 1 598 0
 1665 0018 1846     		mov	r0, r3
 1666 001a 0837     		adds	r7, r7, #8
 1667              		.cfi_def_cfa_offset 8
 1668 001c BD46     		mov	sp, r7
 1669              		.cfi_def_cfa_register 13
 1670              		@ sp needed
 1671 001e 80BD     		pop	{r7, pc}
 1672              		.cfi_endproc
 1673              	.LFE32:
 1674              		.size	MAX30101_SetSpO2SampleRate, .-MAX30101_SetSpO2SampleRate
 1675              		.section	.text.MAX30101_SetSpO2PulseWidth,"ax",%progbits
 1676              		.align	2
 1677              		.global	MAX30101_SetSpO2PulseWidth
 1678              		.thumb
 1679              		.thumb_func
 1680              		.type	MAX30101_SetSpO2PulseWidth, %function
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 41


 1681              	MAX30101_SetSpO2PulseWidth:
 1682              	.LFB33:
 599:MAX30101.c    **** 
 600:MAX30101.c    **** // Set SpO2 Pulse Widht
 601:MAX30101.c    **** uint8_t MAX30101_SetSpO2PulseWidth(uint8_t pw)
 602:MAX30101.c    **** {
 1683              		.loc 1 602 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 8
 1686              		@ frame_needed = 1, uses_anonymous_args = 0
 1687 0000 80B5     		push	{r7, lr}
 1688              		.cfi_def_cfa_offset 8
 1689              		.cfi_offset 7, -8
 1690              		.cfi_offset 14, -4
 1691 0002 82B0     		sub	sp, sp, #8
 1692              		.cfi_def_cfa_offset 16
 1693 0004 00AF     		add	r7, sp, #0
 1694              		.cfi_def_cfa_register 7
 1695 0006 0346     		mov	r3, r0
 1696 0008 FB71     		strb	r3, [r7, #7]
 603:MAX30101.c    ****     return MAX30101_BitMask(MAX30101_SPO2_CONF, MAX30101_SPO2_PULSEWIDTH_MASK, pw);
 1697              		.loc 1 603 0
 1698 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1699 000c 1A46     		mov	r2, r3
 1700 000e FC21     		movs	r1, #252
 1701 0010 0A20     		movs	r0, #10
 1702 0012 FFF7FEFF 		bl	MAX30101_BitMask
 1703 0016 0346     		mov	r3, r0
 604:MAX30101.c    **** }
 1704              		.loc 1 604 0
 1705 0018 1846     		mov	r0, r3
 1706 001a 0837     		adds	r7, r7, #8
 1707              		.cfi_def_cfa_offset 8
 1708 001c BD46     		mov	sp, r7
 1709              		.cfi_def_cfa_register 13
 1710              		@ sp needed
 1711 001e 80BD     		pop	{r7, pc}
 1712              		.cfi_endproc
 1713              	.LFE33:
 1714              		.size	MAX30101_SetSpO2PulseWidth, .-MAX30101_SetSpO2PulseWidth
 1715              		.section	.text.MAX30101_SetLEDPulseAmplitude,"ax",%progbits
 1716              		.align	2
 1717              		.global	MAX30101_SetLEDPulseAmplitude
 1718              		.thumb
 1719              		.thumb_func
 1720              		.type	MAX30101_SetLEDPulseAmplitude, %function
 1721              	MAX30101_SetLEDPulseAmplitude:
 1722              	.LFB34:
 605:MAX30101.c    **** 
 606:MAX30101.c    **** // Set pulse amplitude for a channel
 607:MAX30101.c    **** uint8_t MAX30101_SetLEDPulseAmplitude(uint8_t led_channel, uint8_t pa)
 608:MAX30101.c    **** {
 1723              		.loc 1 608 0
 1724              		.cfi_startproc
 1725              		@ args = 0, pretend = 0, frame = 16
 1726              		@ frame_needed = 1, uses_anonymous_args = 0
 1727 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 42


 1728              		.cfi_def_cfa_offset 8
 1729              		.cfi_offset 7, -8
 1730              		.cfi_offset 14, -4
 1731 0002 84B0     		sub	sp, sp, #16
 1732              		.cfi_def_cfa_offset 24
 1733 0004 00AF     		add	r7, sp, #0
 1734              		.cfi_def_cfa_register 7
 1735 0006 0346     		mov	r3, r0
 1736 0008 0A46     		mov	r2, r1
 1737 000a FB71     		strb	r3, [r7, #7]
 1738 000c 1346     		mov	r3, r2
 1739 000e BB71     		strb	r3, [r7, #6]
 609:MAX30101.c    ****     // Read register
 610:MAX30101.c    ****     uint8_t error = MAX30101_OK;
 1740              		.loc 1 610 0
 1741 0010 0023     		movs	r3, #0
 1742 0012 FB73     		strb	r3, [r7, #15]
 611:MAX30101.c    ****     uint8_t reg_data;
 612:MAX30101.c    ****     error = I2C_Peripheral_ReadRegister(MAX30101_I2C_ADDRESS, MAX30101_LED1_PA + led_channel, &reg_
 1743              		.loc 1 612 0
 1744 0014 FB79     		ldrb	r3, [r7, #7]
 1745 0016 0C33     		adds	r3, r3, #12
 1746 0018 DBB2     		uxtb	r3, r3
 1747 001a 07F10E02 		add	r2, r7, #14
 1748 001e 1946     		mov	r1, r3
 1749 0020 5720     		movs	r0, #87
 1750 0022 FFF7FEFF 		bl	I2C_Peripheral_ReadRegister
 1751 0026 0346     		mov	r3, r0
 1752 0028 FB73     		strb	r3, [r7, #15]
 613:MAX30101.c    ****     if (error == I2C_NO_ERROR)
 1753              		.loc 1 613 0
 1754 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1755 002c 002B     		cmp	r3, #0
 1756 002e 12D1     		bne	.L83
 614:MAX30101.c    ****     {
 615:MAX30101.c    ****         reg_data |= pa;
 1757              		.loc 1 615 0
 1758 0030 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1759 0032 BB79     		ldrb	r3, [r7, #6]
 1760 0034 1343     		orrs	r3, r3, r2
 1761 0036 DBB2     		uxtb	r3, r3
 1762 0038 BB73     		strb	r3, [r7, #14]
 616:MAX30101.c    ****         if(I2C_Peripheral_WriteRegister(MAX30101_I2C_ADDRESS, MAX30101_LED1_PA + led_channel, reg_d
 1763              		.loc 1 616 0
 1764 003a FB79     		ldrb	r3, [r7, #7]
 1765 003c 0C33     		adds	r3, r3, #12
 1766 003e DBB2     		uxtb	r3, r3
 1767 0040 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1768 0042 1946     		mov	r1, r3
 1769 0044 5720     		movs	r0, #87
 1770 0046 FFF7FEFF 		bl	I2C_Peripheral_WriteRegister
 1771 004a 0346     		mov	r3, r0
 1772 004c 002B     		cmp	r3, #0
 1773 004e 04D0     		beq	.L85
 617:MAX30101.c    ****         {
 618:MAX30101.c    ****           error = MAX30101_ERROR;
 1774              		.loc 1 618 0
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 43


 1775 0050 0223     		movs	r3, #2
 1776 0052 FB73     		strb	r3, [r7, #15]
 1777 0054 01E0     		b	.L85
 1778              	.L83:
 619:MAX30101.c    ****         }
 620:MAX30101.c    ****     }
 621:MAX30101.c    ****     else
 622:MAX30101.c    ****     {
 623:MAX30101.c    ****         error = MAX30101_DEV_NOT_FOUND;
 1779              		.loc 1 623 0
 1780 0056 0123     		movs	r3, #1
 1781 0058 FB73     		strb	r3, [r7, #15]
 1782              	.L85:
 624:MAX30101.c    ****     }
 625:MAX30101.c    ****     return error;
 1783              		.loc 1 625 0
 1784 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 626:MAX30101.c    **** }
 1785              		.loc 1 626 0
 1786 005c 1846     		mov	r0, r3
 1787 005e 1037     		adds	r7, r7, #16
 1788              		.cfi_def_cfa_offset 8
 1789 0060 BD46     		mov	sp, r7
 1790              		.cfi_def_cfa_register 13
 1791              		@ sp needed
 1792 0062 80BD     		pop	{r7, pc}
 1793              		.cfi_endproc
 1794              	.LFE34:
 1795              		.size	MAX30101_SetLEDPulseAmplitude, .-MAX30101_SetLEDPulseAmplitude
 1796              		.section	.text.MAX30101_EnableSlot,"ax",%progbits
 1797              		.align	2
 1798              		.global	MAX30101_EnableSlot
 1799              		.thumb
 1800              		.thumb_func
 1801              		.type	MAX30101_EnableSlot, %function
 1802              	MAX30101_EnableSlot:
 1803              	.LFB35:
 627:MAX30101.c    **** 
 628:MAX30101.c    **** //======================================================
 629:MAX30101.c    **** //    MAX30101 MULTI LED MODE CONFIGURATION FUNCTIONS
 630:MAX30101.c    **** //======================================================
 631:MAX30101.c    **** // Enable given slot
 632:MAX30101.c    **** uint8_t MAX30101_EnableSlot(uint8_t slot, uint8_t led)
 633:MAX30101.c    **** {
 1804              		.loc 1 633 0
 1805              		.cfi_startproc
 1806              		@ args = 0, pretend = 0, frame = 8
 1807              		@ frame_needed = 1, uses_anonymous_args = 0
 1808 0000 80B5     		push	{r7, lr}
 1809              		.cfi_def_cfa_offset 8
 1810              		.cfi_offset 7, -8
 1811              		.cfi_offset 14, -4
 1812 0002 82B0     		sub	sp, sp, #8
 1813              		.cfi_def_cfa_offset 16
 1814 0004 00AF     		add	r7, sp, #0
 1815              		.cfi_def_cfa_register 7
 1816 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 44


 1817 0008 0A46     		mov	r2, r1
 1818 000a FB71     		strb	r3, [r7, #7]
 1819 000c 1346     		mov	r3, r2
 1820 000e BB71     		strb	r3, [r7, #6]
 634:MAX30101.c    ****     switch(slot)
 1821              		.loc 1 634 0
 1822 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1823 0012 013B     		subs	r3, r3, #1
 1824 0014 032B     		cmp	r3, #3
 1825 0016 2FD8     		bhi	.L88
 1826 0018 01A2     		adr	r2, .L90
 1827 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1828 001e 00BF     		.p2align 2
 1829              	.L90:
 1830 0020 31000000 		.word	.L89+1
 1831 0024 41000000 		.word	.L91+1
 1832 0028 55000000 		.word	.L92+1
 1833 002c 65000000 		.word	.L93+1
 1834              		.p2align 1
 1835              	.L89:
 635:MAX30101.c    ****     {
 636:MAX30101.c    ****         case 1:
 637:MAX30101.c    ****             return MAX30101_BitMask(MAX30101_MULTI_LED_1, MAX30101_SLOT1_MASK, led);
 1836              		.loc 1 637 0
 1837 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1838 0032 1A46     		mov	r2, r3
 1839 0034 F821     		movs	r1, #248
 1840 0036 1120     		movs	r0, #17
 1841 0038 FFF7FEFF 		bl	MAX30101_BitMask
 1842 003c 0346     		mov	r3, r0
 1843 003e 1CE0     		b	.L94
 1844              	.L91:
 638:MAX30101.c    ****             break;
 639:MAX30101.c    ****         case 2:
 640:MAX30101.c    ****             return MAX30101_BitMask(MAX30101_MULTI_LED_1, MAX30101_SLOT2_MASK, led << 4);
 1845              		.loc 1 640 0
 1846 0040 BB79     		ldrb	r3, [r7, #6]
 1847 0042 1B01     		lsls	r3, r3, #4
 1848 0044 DBB2     		uxtb	r3, r3
 1849 0046 1A46     		mov	r2, r3
 1850 0048 8F21     		movs	r1, #143
 1851 004a 1120     		movs	r0, #17
 1852 004c FFF7FEFF 		bl	MAX30101_BitMask
 1853 0050 0346     		mov	r3, r0
 1854 0052 12E0     		b	.L94
 1855              	.L92:
 641:MAX30101.c    ****             break;
 642:MAX30101.c    ****         case 3:
 643:MAX30101.c    ****             return MAX30101_BitMask(MAX30101_MULTI_LED_2, MAX30101_SLOT3_MASK, led);
 1856              		.loc 1 643 0
 1857 0054 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1858 0056 1A46     		mov	r2, r3
 1859 0058 F821     		movs	r1, #248
 1860 005a 1220     		movs	r0, #18
 1861 005c FFF7FEFF 		bl	MAX30101_BitMask
 1862 0060 0346     		mov	r3, r0
 1863 0062 0AE0     		b	.L94
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 45


 1864              	.L93:
 644:MAX30101.c    ****             break;
 645:MAX30101.c    ****         case 4:
 646:MAX30101.c    ****             return MAX30101_BitMask(MAX30101_MULTI_LED_2, MAX30101_SLOT4_MASK, led << 4);
 1865              		.loc 1 646 0
 1866 0064 BB79     		ldrb	r3, [r7, #6]
 1867 0066 1B01     		lsls	r3, r3, #4
 1868 0068 DBB2     		uxtb	r3, r3
 1869 006a 1A46     		mov	r2, r3
 1870 006c 8F21     		movs	r1, #143
 1871 006e 1220     		movs	r0, #18
 1872 0070 FFF7FEFF 		bl	MAX30101_BitMask
 1873 0074 0346     		mov	r3, r0
 1874 0076 00E0     		b	.L94
 1875              	.L88:
 647:MAX30101.c    ****             break;
 648:MAX30101.c    ****         default:
 649:MAX30101.c    ****             return MAX30101_ERROR;
 1876              		.loc 1 649 0
 1877 0078 0223     		movs	r3, #2
 1878              	.L94:
 650:MAX30101.c    ****             break;
 651:MAX30101.c    ****     } 
 652:MAX30101.c    **** }
 1879              		.loc 1 652 0
 1880 007a 1846     		mov	r0, r3
 1881 007c 0837     		adds	r7, r7, #8
 1882              		.cfi_def_cfa_offset 8
 1883 007e BD46     		mov	sp, r7
 1884              		.cfi_def_cfa_register 13
 1885              		@ sp needed
 1886 0080 80BD     		pop	{r7, pc}
 1887              		.cfi_endproc
 1888              	.LFE35:
 1889              		.size	MAX30101_EnableSlot, .-MAX30101_EnableSlot
 1890 0082 00BF     		.section	.text.MAX30101_DisableSlots,"ax",%progbits
 1891              		.align	2
 1892              		.global	MAX30101_DisableSlots
 1893              		.thumb
 1894              		.thumb_func
 1895              		.type	MAX30101_DisableSlots, %function
 1896              	MAX30101_DisableSlots:
 1897              	.LFB36:
 653:MAX30101.c    **** 
 654:MAX30101.c    **** // Disable all slots configurations
 655:MAX30101.c    **** uint8_t MAX30101_DisableSlots(void)
 656:MAX30101.c    **** {
 1898              		.loc 1 656 0
 1899              		.cfi_startproc
 1900              		@ args = 0, pretend = 0, frame = 8
 1901              		@ frame_needed = 1, uses_anonymous_args = 0
 1902 0000 80B5     		push	{r7, lr}
 1903              		.cfi_def_cfa_offset 8
 1904              		.cfi_offset 7, -8
 1905              		.cfi_offset 14, -4
 1906 0002 82B0     		sub	sp, sp, #8
 1907              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 46


 1908 0004 00AF     		add	r7, sp, #0
 1909              		.cfi_def_cfa_register 7
 657:MAX30101.c    ****     uint8_t error = MAX30101_WriteRegister(MAX30101_MULTI_LED_1, 0x00);
 1910              		.loc 1 657 0
 1911 0006 0021     		movs	r1, #0
 1912 0008 1120     		movs	r0, #17
 1913 000a FFF7FEFF 		bl	MAX30101_WriteRegister
 1914 000e 0346     		mov	r3, r0
 1915 0010 FB71     		strb	r3, [r7, #7]
 658:MAX30101.c    ****     if ( error == MAX30101_OK)
 1916              		.loc 1 658 0
 1917 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1918 0014 002B     		cmp	r3, #0
 1919 0016 05D1     		bne	.L96
 659:MAX30101.c    ****     {    
 660:MAX30101.c    ****         error = MAX30101_WriteRegister(MAX30101_MULTI_LED_2, 0x00);
 1920              		.loc 1 660 0
 1921 0018 0021     		movs	r1, #0
 1922 001a 1220     		movs	r0, #18
 1923 001c FFF7FEFF 		bl	MAX30101_WriteRegister
 1924 0020 0346     		mov	r3, r0
 1925 0022 FB71     		strb	r3, [r7, #7]
 1926              	.L96:
 661:MAX30101.c    ****     }
 662:MAX30101.c    ****     
 663:MAX30101.c    ****     return error;
 1927              		.loc 1 663 0
 1928 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 664:MAX30101.c    **** }
 1929              		.loc 1 664 0
 1930 0026 1846     		mov	r0, r3
 1931 0028 0837     		adds	r7, r7, #8
 1932              		.cfi_def_cfa_offset 8
 1933 002a BD46     		mov	sp, r7
 1934              		.cfi_def_cfa_register 13
 1935              		@ sp needed
 1936 002c 80BD     		pop	{r7, pc}
 1937              		.cfi_endproc
 1938              	.LFE36:
 1939              		.size	MAX30101_DisableSlots, .-MAX30101_DisableSlots
 1940              		.global	__aeabi_ui2f
 1941              		.global	__aeabi_f2d
 1942              		.global	__aeabi_i2d
 1943              		.global	__aeabi_dmul
 1944              		.global	__aeabi_dadd
 1945              		.global	__aeabi_d2f
 1946 002e 00BF     		.section	.text.MAX30101_ReadTemperature,"ax",%progbits
 1947              		.align	2
 1948              		.global	MAX30101_ReadTemperature
 1949              		.thumb
 1950              		.thumb_func
 1951              		.type	MAX30101_ReadTemperature, %function
 1952              	MAX30101_ReadTemperature:
 1953              	.LFB37:
 665:MAX30101.c    **** 
 666:MAX30101.c    **** //======================================================
 667:MAX30101.c    **** //            MAX30101 DIE TEMPERATURE FUNCTIONS
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 47


 668:MAX30101.c    **** //======================================================
 669:MAX30101.c    **** uint8_t MAX30101_ReadTemperature(float* temperature)
 670:MAX30101.c    **** {
 1954              		.loc 1 670 0
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 16
 1957              		@ frame_needed = 1, uses_anonymous_args = 0
 1958 0000 B0B5     		push	{r4, r5, r7, lr}
 1959              		.cfi_def_cfa_offset 16
 1960              		.cfi_offset 4, -16
 1961              		.cfi_offset 5, -12
 1962              		.cfi_offset 7, -8
 1963              		.cfi_offset 14, -4
 1964 0002 84B0     		sub	sp, sp, #16
 1965              		.cfi_def_cfa_offset 32
 1966 0004 00AF     		add	r7, sp, #0
 1967              		.cfi_def_cfa_register 7
 1968 0006 7860     		str	r0, [r7, #4]
 671:MAX30101.c    ****     uint8_t integer, frac = 0;
 1969              		.loc 1 671 0
 1970 0008 0023     		movs	r3, #0
 1971 000a 7B73     		strb	r3, [r7, #13]
 672:MAX30101.c    ****     uint8_t error = MAX30101_ReadRegister(MAX30101_TEMP_INT, &integer);
 1972              		.loc 1 672 0
 1973 000c 07F10E03 		add	r3, r7, #14
 1974 0010 1946     		mov	r1, r3
 1975 0012 1F20     		movs	r0, #31
 1976 0014 FFF7FEFF 		bl	MAX30101_ReadRegister
 1977 0018 0346     		mov	r3, r0
 1978 001a FB73     		strb	r3, [r7, #15]
 673:MAX30101.c    ****     if ( error == MAX30101_OK)
 1979              		.loc 1 673 0
 1980 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1981 001e 002B     		cmp	r3, #0
 1982 0020 2CD1     		bne	.L99
 674:MAX30101.c    ****     {
 675:MAX30101.c    ****         error = MAX30101_ReadRegister(MAX30101_TEMP_FRACT, &frac);
 1983              		.loc 1 675 0
 1984 0022 07F10D03 		add	r3, r7, #13
 1985 0026 1946     		mov	r1, r3
 1986 0028 2020     		movs	r0, #32
 1987 002a FFF7FEFF 		bl	MAX30101_ReadRegister
 1988 002e 0346     		mov	r3, r0
 1989 0030 FB73     		strb	r3, [r7, #15]
 676:MAX30101.c    ****         if ( error == MAX30101_OK)
 1990              		.loc 1 676 0
 1991 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1992 0034 002B     		cmp	r3, #0
 1993 0036 21D1     		bne	.L99
 677:MAX30101.c    ****         {
 678:MAX30101.c    ****             *temperature = ((float)(integer)) + frac * 0.0625;
 1994              		.loc 1 678 0
 1995 0038 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1996 003a 1846     		mov	r0, r3
 1997 003c FFF7FEFF 		bl	__aeabi_ui2f
 1998 0040 0346     		mov	r3, r0
 1999 0042 1846     		mov	r0, r3
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 48


 2000 0044 FFF7FEFF 		bl	__aeabi_f2d
 2001 0048 0446     		mov	r4, r0
 2002 004a 0D46     		mov	r5, r1
 2003 004c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2004 004e 1846     		mov	r0, r3
 2005 0050 FFF7FEFF 		bl	__aeabi_i2d
 2006 0054 4FF00002 		mov	r2, #0
 2007 0058 0B4B     		ldr	r3, .L101
 2008 005a FFF7FEFF 		bl	__aeabi_dmul
 2009 005e 0246     		mov	r2, r0
 2010 0060 0B46     		mov	r3, r1
 2011 0062 2046     		mov	r0, r4
 2012 0064 2946     		mov	r1, r5
 2013 0066 FFF7FEFF 		bl	__aeabi_dadd
 2014 006a 0346     		mov	r3, r0
 2015 006c 0C46     		mov	r4, r1
 2016 006e 1846     		mov	r0, r3
 2017 0070 2146     		mov	r1, r4
 2018 0072 FFF7FEFF 		bl	__aeabi_d2f
 2019 0076 0246     		mov	r2, r0
 2020 0078 7B68     		ldr	r3, [r7, #4]
 2021 007a 1A60     		str	r2, [r3]	@ float
 2022              	.L99:
 679:MAX30101.c    ****         }
 680:MAX30101.c    ****     }
 681:MAX30101.c    ****     
 682:MAX30101.c    ****     return error;
 2023              		.loc 1 682 0
 2024 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 683:MAX30101.c    **** }
 2025              		.loc 1 683 0
 2026 007e 1846     		mov	r0, r3
 2027 0080 1037     		adds	r7, r7, #16
 2028              		.cfi_def_cfa_offset 16
 2029 0082 BD46     		mov	sp, r7
 2030              		.cfi_def_cfa_register 13
 2031              		@ sp needed
 2032 0084 B0BD     		pop	{r4, r5, r7, pc}
 2033              	.L102:
 2034 0086 00BF     		.align	2
 2035              	.L101:
 2036 0088 0000B03F 		.word	1068498944
 2037              		.cfi_endproc
 2038              	.LFE37:
 2039              		.size	MAX30101_ReadTemperature, .-MAX30101_ReadTemperature
 2040              		.section	.text.MAX30101_ReadRawTemperature,"ax",%progbits
 2041              		.align	2
 2042              		.global	MAX30101_ReadRawTemperature
 2043              		.thumb
 2044              		.thumb_func
 2045              		.type	MAX30101_ReadRawTemperature, %function
 2046              	MAX30101_ReadRawTemperature:
 2047              	.LFB38:
 684:MAX30101.c    **** 
 685:MAX30101.c    **** uint8_t MAX30101_ReadRawTemperature(int8_t* integer, uint8_t* frac)
 686:MAX30101.c    **** {
 2048              		.loc 1 686 0
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 49


 2049              		.cfi_startproc
 2050              		@ args = 0, pretend = 0, frame = 16
 2051              		@ frame_needed = 1, uses_anonymous_args = 0
 2052 0000 80B5     		push	{r7, lr}
 2053              		.cfi_def_cfa_offset 8
 2054              		.cfi_offset 7, -8
 2055              		.cfi_offset 14, -4
 2056 0002 84B0     		sub	sp, sp, #16
 2057              		.cfi_def_cfa_offset 24
 2058 0004 00AF     		add	r7, sp, #0
 2059              		.cfi_def_cfa_register 7
 2060 0006 7860     		str	r0, [r7, #4]
 2061 0008 3960     		str	r1, [r7]
 687:MAX30101.c    ****     uint8_t temp;
 688:MAX30101.c    ****     uint8_t error = MAX30101_ReadRegister(MAX30101_TEMP_INT, &temp);
 2062              		.loc 1 688 0
 2063 000a 07F10E03 		add	r3, r7, #14
 2064 000e 1946     		mov	r1, r3
 2065 0010 1F20     		movs	r0, #31
 2066 0012 FFF7FEFF 		bl	MAX30101_ReadRegister
 2067 0016 0346     		mov	r3, r0
 2068 0018 FB73     		strb	r3, [r7, #15]
 689:MAX30101.c    ****     if ( error == MAX30101_OK)
 2069              		.loc 1 689 0
 2070 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2071 001c 002B     		cmp	r3, #0
 2072 001e 09D1     		bne	.L104
 690:MAX30101.c    ****     {
 691:MAX30101.c    ****         *integer = (int8_t)temp;
 2073              		.loc 1 691 0
 2074 0020 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2075 0022 5AB2     		sxtb	r2, r3
 2076 0024 7B68     		ldr	r3, [r7, #4]
 2077 0026 1A70     		strb	r2, [r3]
 692:MAX30101.c    ****         error = MAX30101_ReadRegister(MAX30101_TEMP_FRACT, frac);
 2078              		.loc 1 692 0
 2079 0028 3968     		ldr	r1, [r7]
 2080 002a 2020     		movs	r0, #32
 2081 002c FFF7FEFF 		bl	MAX30101_ReadRegister
 2082 0030 0346     		mov	r3, r0
 2083 0032 FB73     		strb	r3, [r7, #15]
 2084              	.L104:
 693:MAX30101.c    ****     }
 694:MAX30101.c    ****     
 695:MAX30101.c    ****     return error;
 2085              		.loc 1 695 0
 2086 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 696:MAX30101.c    **** }
 2087              		.loc 1 696 0
 2088 0036 1846     		mov	r0, r3
 2089 0038 1037     		adds	r7, r7, #16
 2090              		.cfi_def_cfa_offset 8
 2091 003a BD46     		mov	sp, r7
 2092              		.cfi_def_cfa_register 13
 2093              		@ sp needed
 2094 003c 80BD     		pop	{r7, pc}
 2095              		.cfi_endproc
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 50


 2096              	.LFE38:
 2097              		.size	MAX30101_ReadRawTemperature, .-MAX30101_ReadRawTemperature
 2098 003e 00BF     		.section	.text.MAX30101_StartTemperatureConversion,"ax",%progbits
 2099              		.align	2
 2100              		.global	MAX30101_StartTemperatureConversion
 2101              		.thumb
 2102              		.thumb_func
 2103              		.type	MAX30101_StartTemperatureConversion, %function
 2104              	MAX30101_StartTemperatureConversion:
 2105              	.LFB39:
 697:MAX30101.c    **** 
 698:MAX30101.c    **** uint8_t MAX30101_StartTemperatureConversion(void)
 699:MAX30101.c    **** {
 2106              		.loc 1 699 0
 2107              		.cfi_startproc
 2108              		@ args = 0, pretend = 0, frame = 0
 2109              		@ frame_needed = 1, uses_anonymous_args = 0
 2110 0000 80B5     		push	{r7, lr}
 2111              		.cfi_def_cfa_offset 8
 2112              		.cfi_offset 7, -8
 2113              		.cfi_offset 14, -4
 2114 0002 00AF     		add	r7, sp, #0
 2115              		.cfi_def_cfa_register 7
 700:MAX30101.c    ****     return MAX30101_WriteRegister(MAX30101_TEMP_CONF, 0x01);
 2116              		.loc 1 700 0
 2117 0004 0121     		movs	r1, #1
 2118 0006 2120     		movs	r0, #33
 2119 0008 FFF7FEFF 		bl	MAX30101_WriteRegister
 2120 000c 0346     		mov	r3, r0
 701:MAX30101.c    **** }
 2121              		.loc 1 701 0
 2122 000e 1846     		mov	r0, r3
 2123 0010 80BD     		pop	{r7, pc}
 2124              		.cfi_endproc
 2125              	.LFE39:
 2126              		.size	MAX30101_StartTemperatureConversion, .-MAX30101_StartTemperatureConversion
 2127 0012 00BF     		.section	.text.MAX30101_ReadPartID,"ax",%progbits
 2128              		.align	2
 2129              		.global	MAX30101_ReadPartID
 2130              		.thumb
 2131              		.thumb_func
 2132              		.type	MAX30101_ReadPartID, %function
 2133              	MAX30101_ReadPartID:
 2134              	.LFB40:
 702:MAX30101.c    **** 
 703:MAX30101.c    **** //======================================================
 704:MAX30101.c    **** //            MAX30101 PART/REVISION ID FUNCTIONS
 705:MAX30101.c    **** //======================================================
 706:MAX30101.c    **** // Read part ID number
 707:MAX30101.c    **** uint8_t MAX30101_ReadPartID(uint8_t* part_id)
 708:MAX30101.c    **** {
 2135              		.loc 1 708 0
 2136              		.cfi_startproc
 2137              		@ args = 0, pretend = 0, frame = 8
 2138              		@ frame_needed = 1, uses_anonymous_args = 0
 2139 0000 80B5     		push	{r7, lr}
 2140              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 51


 2141              		.cfi_offset 7, -8
 2142              		.cfi_offset 14, -4
 2143 0002 82B0     		sub	sp, sp, #8
 2144              		.cfi_def_cfa_offset 16
 2145 0004 00AF     		add	r7, sp, #0
 2146              		.cfi_def_cfa_register 7
 2147 0006 7860     		str	r0, [r7, #4]
 709:MAX30101.c    ****     return MAX30101_ReadRegister(MAX30101_PART_ID, part_id);
 2148              		.loc 1 709 0
 2149 0008 7968     		ldr	r1, [r7, #4]
 2150 000a FF20     		movs	r0, #255
 2151 000c FFF7FEFF 		bl	MAX30101_ReadRegister
 2152 0010 0346     		mov	r3, r0
 710:MAX30101.c    ****     
 711:MAX30101.c    **** }
 2153              		.loc 1 711 0
 2154 0012 1846     		mov	r0, r3
 2155 0014 0837     		adds	r7, r7, #8
 2156              		.cfi_def_cfa_offset 8
 2157 0016 BD46     		mov	sp, r7
 2158              		.cfi_def_cfa_register 13
 2159              		@ sp needed
 2160 0018 80BD     		pop	{r7, pc}
 2161              		.cfi_endproc
 2162              	.LFE40:
 2163              		.size	MAX30101_ReadPartID, .-MAX30101_ReadPartID
 2164 001a 00BF     		.section	.text.MAX30101_ReadRevisionID,"ax",%progbits
 2165              		.align	2
 2166              		.global	MAX30101_ReadRevisionID
 2167              		.thumb
 2168              		.thumb_func
 2169              		.type	MAX30101_ReadRevisionID, %function
 2170              	MAX30101_ReadRevisionID:
 2171              	.LFB41:
 712:MAX30101.c    **** 
 713:MAX30101.c    **** // Read revision ID number
 714:MAX30101.c    **** uint8_t MAX30101_ReadRevisionID(uint8_t* revision_id)
 715:MAX30101.c    **** {
 2172              		.loc 1 715 0
 2173              		.cfi_startproc
 2174              		@ args = 0, pretend = 0, frame = 8
 2175              		@ frame_needed = 1, uses_anonymous_args = 0
 2176 0000 80B5     		push	{r7, lr}
 2177              		.cfi_def_cfa_offset 8
 2178              		.cfi_offset 7, -8
 2179              		.cfi_offset 14, -4
 2180 0002 82B0     		sub	sp, sp, #8
 2181              		.cfi_def_cfa_offset 16
 2182 0004 00AF     		add	r7, sp, #0
 2183              		.cfi_def_cfa_register 7
 2184 0006 7860     		str	r0, [r7, #4]
 716:MAX30101.c    ****     return MAX30101_ReadRegister(MAX30101_REVISION_ID, revision_id);
 2185              		.loc 1 716 0
 2186 0008 7968     		ldr	r1, [r7, #4]
 2187 000a FE20     		movs	r0, #254
 2188 000c FFF7FEFF 		bl	MAX30101_ReadRegister
 2189 0010 0346     		mov	r3, r0
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 52


 717:MAX30101.c    **** }
 2190              		.loc 1 717 0
 2191 0012 1846     		mov	r0, r3
 2192 0014 0837     		adds	r7, r7, #8
 2193              		.cfi_def_cfa_offset 8
 2194 0016 BD46     		mov	sp, r7
 2195              		.cfi_def_cfa_register 13
 2196              		@ sp needed
 2197 0018 80BD     		pop	{r7, pc}
 2198              		.cfi_endproc
 2199              	.LFE41:
 2200              		.size	MAX30101_ReadRevisionID, .-MAX30101_ReadRevisionID
 2201 001a 00BF     		.section	.text.MAX30101_ReadRegister,"ax",%progbits
 2202              		.align	2
 2203              		.global	MAX30101_ReadRegister
 2204              		.thumb
 2205              		.thumb_func
 2206              		.type	MAX30101_ReadRegister, %function
 2207              	MAX30101_ReadRegister:
 2208              	.LFB42:
 718:MAX30101.c    **** 
 719:MAX30101.c    **** //======================================================
 720:MAX30101.c    **** //            MAX30101 HELPER FUNCTIONS
 721:MAX30101.c    **** //======================================================
 722:MAX30101.c    **** // Simple helper function to read a register from the MAX30101
 723:MAX30101.c    **** uint8_t MAX30101_ReadRegister(uint8_t reg_addr, uint8_t* reg_value)
 724:MAX30101.c    **** {
 2209              		.loc 1 724 0
 2210              		.cfi_startproc
 2211              		@ args = 0, pretend = 0, frame = 16
 2212              		@ frame_needed = 1, uses_anonymous_args = 0
 2213 0000 80B5     		push	{r7, lr}
 2214              		.cfi_def_cfa_offset 8
 2215              		.cfi_offset 7, -8
 2216              		.cfi_offset 14, -4
 2217 0002 84B0     		sub	sp, sp, #16
 2218              		.cfi_def_cfa_offset 24
 2219 0004 00AF     		add	r7, sp, #0
 2220              		.cfi_def_cfa_register 7
 2221 0006 0346     		mov	r3, r0
 2222 0008 3960     		str	r1, [r7]
 2223 000a FB71     		strb	r3, [r7, #7]
 725:MAX30101.c    ****     uint8_t error = MAX30101_OK;
 2224              		.loc 1 725 0
 2225 000c 0023     		movs	r3, #0
 2226 000e FB73     		strb	r3, [r7, #15]
 726:MAX30101.c    ****     uint8_t reg_data;
 727:MAX30101.c    ****     if(I2C_Peripheral_ReadRegister(MAX30101_I2C_ADDRESS, reg_addr, &reg_data) == I2C_NO_ERROR)
 2227              		.loc 1 727 0
 2228 0010 07F10E02 		add	r2, r7, #14
 2229 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2230 0016 1946     		mov	r1, r3
 2231 0018 5720     		movs	r0, #87
 2232 001a FFF7FEFF 		bl	I2C_Peripheral_ReadRegister
 2233 001e 0346     		mov	r3, r0
 2234 0020 002B     		cmp	r3, #0
 2235 0022 03D1     		bne	.L113
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 53


 728:MAX30101.c    ****     {
 729:MAX30101.c    ****         *reg_value = reg_data;
 2236              		.loc 1 729 0
 2237 0024 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2238 0026 3B68     		ldr	r3, [r7]
 2239 0028 1A70     		strb	r2, [r3]
 2240 002a 01E0     		b	.L114
 2241              	.L113:
 730:MAX30101.c    ****     }
 731:MAX30101.c    ****     else
 732:MAX30101.c    ****     {
 733:MAX30101.c    ****         error = MAX30101_DEV_NOT_FOUND;
 2242              		.loc 1 733 0
 2243 002c 0123     		movs	r3, #1
 2244 002e FB73     		strb	r3, [r7, #15]
 2245              	.L114:
 734:MAX30101.c    ****     }
 735:MAX30101.c    ****     return error;
 2246              		.loc 1 735 0
 2247 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 736:MAX30101.c    **** }
 2248              		.loc 1 736 0
 2249 0032 1846     		mov	r0, r3
 2250 0034 1037     		adds	r7, r7, #16
 2251              		.cfi_def_cfa_offset 8
 2252 0036 BD46     		mov	sp, r7
 2253              		.cfi_def_cfa_register 13
 2254              		@ sp needed
 2255 0038 80BD     		pop	{r7, pc}
 2256              		.cfi_endproc
 2257              	.LFE42:
 2258              		.size	MAX30101_ReadRegister, .-MAX30101_ReadRegister
 2259 003a 00BF     		.section	.rodata
 2260              		.align	2
 2261              	.LC0:
 2262 0000 00       		.byte	0
 2263 0001 01       		.byte	1
 2264 0002 02       		.byte	2
 2265 0003 03       		.byte	3
 2266 0004 04       		.byte	4
 2267 0005 05       		.byte	5
 2268 0006 06       		.byte	6
 2269 0007 07       		.byte	7
 2270 0008 08       		.byte	8
 2271 0009 09       		.byte	9
 2272 000a 0A       		.byte	10
 2273 000b 0C       		.byte	12
 2274 000c 0D       		.byte	13
 2275 000d 0E       		.byte	14
 2276 000e 0F       		.byte	15
 2277 000f 11       		.byte	17
 2278 0010 12       		.byte	18
 2279 0011 1F       		.byte	31
 2280 0012 20       		.byte	32
 2281 0013 21       		.byte	33
 2282 0014 FE       		.byte	-2
 2283 0015 FF       		.byte	-1
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 54


 2284              		.section	.text.MAX30101_LogRegisters,"ax",%progbits
 2285              		.align	2
 2286              		.global	MAX30101_LogRegisters
 2287              		.thumb
 2288              		.thumb_func
 2289              		.type	MAX30101_LogRegisters, %function
 2290              	MAX30101_LogRegisters:
 2291              	.LFB43:
 737:MAX30101.c    **** 
 738:MAX30101.c    **** // Log all registers
 739:MAX30101.c    **** uint8_t MAX30101_LogRegisters(void (*print_fun)(const char*))
 740:MAX30101.c    **** {
 2292              		.loc 1 740 0
 2293              		.cfi_startproc
 2294              		@ args = 0, pretend = 0, frame = 32
 2295              		@ frame_needed = 1, uses_anonymous_args = 0
 2296 0000 B0B5     		push	{r4, r5, r7, lr}
 2297              		.cfi_def_cfa_offset 16
 2298              		.cfi_offset 4, -16
 2299              		.cfi_offset 5, -12
 2300              		.cfi_offset 7, -8
 2301              		.cfi_offset 14, -4
 2302 0002 88B0     		sub	sp, sp, #32
 2303              		.cfi_def_cfa_offset 48
 2304 0004 00AF     		add	r7, sp, #0
 2305              		.cfi_def_cfa_register 7
 2306 0006 7860     		str	r0, [r7, #4]
 741:MAX30101.c    ****     uint8_t reg_list[] = {MAX30101_INT_ST_1,
 2307              		.loc 1 741 0
 2308 0008 164B     		ldr	r3, .L123
 2309 000a 07F10804 		add	r4, r7, #8
 2310 000e 1D46     		mov	r5, r3
 2311 0010 2868     		ldr	r0, [r5]	@ unaligned
 2312 0012 6968     		ldr	r1, [r5, #4]	@ unaligned
 2313 0014 AA68     		ldr	r2, [r5, #8]	@ unaligned
 2314 0016 EB68     		ldr	r3, [r5, #12]	@ unaligned
 2315 0018 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2316 001a 2869     		ldr	r0, [r5, #16]	@ unaligned
 2317 001c 2060     		str	r0, [r4]	@ unaligned
 2318 001e AB8A     		ldrh	r3, [r5, #20]	@ unaligned
 2319 0020 A380     		strh	r3, [r4, #4]	@ unaligned
 742:MAX30101.c    ****                                 MAX30101_INT_ST_2,
 743:MAX30101.c    ****                                 MAX30101_INT_EN_1,
 744:MAX30101.c    ****                                 MAX30101_INT_EN_2,
 745:MAX30101.c    ****                                 MAX30101_FIFO_WP,
 746:MAX30101.c    ****                                 MAX30101_FIFO_OVF_CNT,
 747:MAX30101.c    ****                                 MAX30101_FIFO_RP,
 748:MAX30101.c    ****                                 MAX30101_FIFO_DATA,
 749:MAX30101.c    ****                                 MAX30101_FIFO_CONF,
 750:MAX30101.c    ****                                 MAX30101_MODE_CONF,
 751:MAX30101.c    ****                                 MAX30101_SPO2_CONF,
 752:MAX30101.c    ****                                 MAX30101_LED1_PA,
 753:MAX30101.c    ****                                 MAX30101_LED2_PA,
 754:MAX30101.c    ****                                 MAX30101_LED3_PA,
 755:MAX30101.c    ****                                 MAX30101_LED4_PA,
 756:MAX30101.c    ****                                 MAX30101_MULTI_LED_1,
 757:MAX30101.c    ****                                 MAX30101_MULTI_LED_2,
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 55


 758:MAX30101.c    ****                                 MAX30101_TEMP_INT,
 759:MAX30101.c    ****                                 MAX30101_TEMP_FRACT,
 760:MAX30101.c    ****                                 MAX30101_TEMP_CONF,
 761:MAX30101.c    ****                                 MAX30101_REVISION_ID,
 762:MAX30101.c    ****                                 MAX30101_PART_ID};
 763:MAX30101.c    ****     uint8_t error = MAX30101_OK;
 2320              		.loc 1 763 0
 2321 0022 0023     		movs	r3, #0
 2322 0024 FB77     		strb	r3, [r7, #31]
 2323              	.LBB5:
 764:MAX30101.c    ****     for (uint8_t i = 0; i < 22; i++)
 2324              		.loc 1 764 0
 2325 0026 0023     		movs	r3, #0
 2326 0028 BB77     		strb	r3, [r7, #30]
 2327 002a 11E0     		b	.L117
 2328              	.L120:
 765:MAX30101.c    ****     {
 766:MAX30101.c    ****         error = MAX30101_PrintRegister(print_fun, reg_list[i]);
 2329              		.loc 1 766 0
 2330 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2331 002e 07F12002 		add	r2, r7, #32
 2332 0032 1344     		add	r3, r3, r2
 2333 0034 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2334 0038 1946     		mov	r1, r3
 2335 003a 7868     		ldr	r0, [r7, #4]
 2336 003c FFF7FEFF 		bl	MAX30101_PrintRegister
 2337 0040 0346     		mov	r3, r0
 2338 0042 FB77     		strb	r3, [r7, #31]
 767:MAX30101.c    ****         if (error != MAX30101_OK)
 2339              		.loc 1 767 0
 2340 0044 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2341 0046 002B     		cmp	r3, #0
 2342 0048 06D1     		bne	.L122
 764:MAX30101.c    ****     for (uint8_t i = 0; i < 22; i++)
 2343              		.loc 1 764 0 discriminator 2
 2344 004a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2345 004c 0133     		adds	r3, r3, #1
 2346 004e BB77     		strb	r3, [r7, #30]
 2347              	.L117:
 764:MAX30101.c    ****     for (uint8_t i = 0; i < 22; i++)
 2348              		.loc 1 764 0 is_stmt 0 discriminator 1
 2349 0050 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2350 0052 152B     		cmp	r3, #21
 2351 0054 EAD9     		bls	.L120
 2352 0056 00E0     		b	.L119
 2353              	.L122:
 768:MAX30101.c    ****             break;
 2354              		.loc 1 768 0 is_stmt 1
 2355 0058 00BF     		nop
 2356              	.L119:
 2357              	.LBE5:
 769:MAX30101.c    ****     }
 770:MAX30101.c    ****     return error;
 2358              		.loc 1 770 0
 2359 005a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 771:MAX30101.c    **** }
 2360              		.loc 1 771 0
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 56


 2361 005c 1846     		mov	r0, r3
 2362 005e 2037     		adds	r7, r7, #32
 2363              		.cfi_def_cfa_offset 16
 2364 0060 BD46     		mov	sp, r7
 2365              		.cfi_def_cfa_register 13
 2366              		@ sp needed
 2367 0062 B0BD     		pop	{r4, r5, r7, pc}
 2368              	.L124:
 2369              		.align	2
 2370              	.L123:
 2371 0064 00000000 		.word	.LC0
 2372              		.cfi_endproc
 2373              	.LFE43:
 2374              		.size	MAX30101_LogRegisters, .-MAX30101_LogRegisters
 2375              		.section	.rodata
 2376 0016 0000     		.align	2
 2377              	.LC1:
 2378 0018 5B307825 		.ascii	"[0x%02X] - 0x%02X\015\012\000"
 2378      3032585D 
 2378      202D2030 
 2378      78253032 
 2378      580D0A00 
 2379              		.section	.text.MAX30101_PrintRegister,"ax",%progbits
 2380              		.align	2
 2381              		.global	MAX30101_PrintRegister
 2382              		.thumb
 2383              		.thumb_func
 2384              		.type	MAX30101_PrintRegister, %function
 2385              	MAX30101_PrintRegister:
 2386              	.LFB44:
 772:MAX30101.c    **** 
 773:MAX30101.c    **** uint8_t MAX30101_PrintRegister(void (*print_fun)(const char*), uint8_t reg_addr)
 774:MAX30101.c    **** {
 2387              		.loc 1 774 0
 2388              		.cfi_startproc
 2389              		@ args = 0, pretend = 0, frame = 32
 2390              		@ frame_needed = 1, uses_anonymous_args = 0
 2391 0000 80B5     		push	{r7, lr}
 2392              		.cfi_def_cfa_offset 8
 2393              		.cfi_offset 7, -8
 2394              		.cfi_offset 14, -4
 2395 0002 88B0     		sub	sp, sp, #32
 2396              		.cfi_def_cfa_offset 40
 2397 0004 00AF     		add	r7, sp, #0
 2398              		.cfi_def_cfa_register 7
 2399 0006 7860     		str	r0, [r7, #4]
 2400 0008 0B46     		mov	r3, r1
 2401 000a FB70     		strb	r3, [r7, #3]
 775:MAX30101.c    ****     uint8_t value;
 776:MAX30101.c    ****     uint8_t error = MAX30101_ReadRegister(reg_addr, &value);
 2402              		.loc 1 776 0
 2403 000c 07F11E02 		add	r2, r7, #30
 2404 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2405 0012 1146     		mov	r1, r2
 2406 0014 1846     		mov	r0, r3
 2407 0016 FFF7FEFF 		bl	MAX30101_ReadRegister
 2408 001a 0346     		mov	r3, r0
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 57


 2409 001c FB77     		strb	r3, [r7, #31]
 777:MAX30101.c    ****     if (error == MAX30101_OK)
 2410              		.loc 1 777 0
 2411 001e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2412 0020 002B     		cmp	r3, #0
 2413 0022 0BD1     		bne	.L126
 2414              	.LBB6:
 778:MAX30101.c    ****     {
 779:MAX30101.c    ****         char msg[20];
 780:MAX30101.c    ****         sprintf(msg, "[0x%02X] - 0x%02X\r\n", reg_addr, value);
 2415              		.loc 1 780 0
 2416 0024 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2417 0026 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2418 0028 07F10800 		add	r0, r7, #8
 2419 002c 0649     		ldr	r1, .L128
 2420 002e FFF7FEFF 		bl	sprintf
 781:MAX30101.c    ****         print_fun(msg);
 2421              		.loc 1 781 0
 2422 0032 07F10802 		add	r2, r7, #8
 2423 0036 7B68     		ldr	r3, [r7, #4]
 2424 0038 1046     		mov	r0, r2
 2425 003a 9847     		blx	r3
 2426              	.L126:
 2427              	.LBE6:
 782:MAX30101.c    ****     }
 783:MAX30101.c    ****     return error;
 2428              		.loc 1 783 0
 2429 003c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 784:MAX30101.c    **** }
 2430              		.loc 1 784 0
 2431 003e 1846     		mov	r0, r3
 2432 0040 2037     		adds	r7, r7, #32
 2433              		.cfi_def_cfa_offset 8
 2434 0042 BD46     		mov	sp, r7
 2435              		.cfi_def_cfa_register 13
 2436              		@ sp needed
 2437 0044 80BD     		pop	{r7, pc}
 2438              	.L129:
 2439 0046 00BF     		.align	2
 2440              	.L128:
 2441 0048 18000000 		.word	.LC1
 2442              		.cfi_endproc
 2443              	.LFE44:
 2444              		.size	MAX30101_PrintRegister, .-MAX30101_PrintRegister
 2445              		.section	.text.MAX30101_WriteRegister,"ax",%progbits
 2446              		.align	2
 2447              		.thumb
 2448              		.thumb_func
 2449              		.type	MAX30101_WriteRegister, %function
 2450              	MAX30101_WriteRegister:
 2451              	.LFB45:
 785:MAX30101.c    **** 
 786:MAX30101.c    **** // Simple helper function to write a register to the MAX30101
 787:MAX30101.c    **** static uint8_t MAX30101_WriteRegister(uint8_t reg_addr, uint8_t reg_data)
 788:MAX30101.c    **** {
 2452              		.loc 1 788 0
 2453              		.cfi_startproc
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 58


 2454              		@ args = 0, pretend = 0, frame = 16
 2455              		@ frame_needed = 1, uses_anonymous_args = 0
 2456 0000 80B5     		push	{r7, lr}
 2457              		.cfi_def_cfa_offset 8
 2458              		.cfi_offset 7, -8
 2459              		.cfi_offset 14, -4
 2460 0002 84B0     		sub	sp, sp, #16
 2461              		.cfi_def_cfa_offset 24
 2462 0004 00AF     		add	r7, sp, #0
 2463              		.cfi_def_cfa_register 7
 2464 0006 0346     		mov	r3, r0
 2465 0008 0A46     		mov	r2, r1
 2466 000a FB71     		strb	r3, [r7, #7]
 2467 000c 1346     		mov	r3, r2
 2468 000e BB71     		strb	r3, [r7, #6]
 789:MAX30101.c    ****     uint8_t error = MAX30101_OK;
 2469              		.loc 1 789 0
 2470 0010 0023     		movs	r3, #0
 2471 0012 FB73     		strb	r3, [r7, #15]
 790:MAX30101.c    ****     if(I2C_Peripheral_WriteRegister(MAX30101_I2C_ADDRESS, reg_addr, reg_data) != I2C_NO_ERROR)
 2472              		.loc 1 790 0
 2473 0014 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 2474 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2475 0018 1946     		mov	r1, r3
 2476 001a 5720     		movs	r0, #87
 2477 001c FFF7FEFF 		bl	I2C_Peripheral_WriteRegister
 2478 0020 0346     		mov	r3, r0
 2479 0022 002B     		cmp	r3, #0
 2480 0024 01D0     		beq	.L131
 791:MAX30101.c    ****     {
 792:MAX30101.c    ****         error = MAX30101_DEV_NOT_FOUND;
 2481              		.loc 1 792 0
 2482 0026 0123     		movs	r3, #1
 2483 0028 FB73     		strb	r3, [r7, #15]
 2484              	.L131:
 793:MAX30101.c    ****     }
 794:MAX30101.c    ****     return error;
 2485              		.loc 1 794 0
 2486 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 795:MAX30101.c    **** }
 2487              		.loc 1 795 0
 2488 002c 1846     		mov	r0, r3
 2489 002e 1037     		adds	r7, r7, #16
 2490              		.cfi_def_cfa_offset 8
 2491 0030 BD46     		mov	sp, r7
 2492              		.cfi_def_cfa_register 13
 2493              		@ sp needed
 2494 0032 80BD     		pop	{r7, pc}
 2495              		.cfi_endproc
 2496              	.LFE45:
 2497              		.size	MAX30101_WriteRegister, .-MAX30101_WriteRegister
 2498              		.section	.text.MAX30101_BitMask,"ax",%progbits
 2499              		.align	2
 2500              		.thumb
 2501              		.thumb_func
 2502              		.type	MAX30101_BitMask, %function
 2503              	MAX30101_BitMask:
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 59


 2504              	.LFB46:
 796:MAX30101.c    **** 
 797:MAX30101.c    **** // Simple helper function to perform bit mask operations
 798:MAX30101.c    **** static uint8_t MAX30101_BitMask(uint8_t reg_addr, uint8_t mask, uint8_t thing)
 799:MAX30101.c    **** {
 2505              		.loc 1 799 0
 2506              		.cfi_startproc
 2507              		@ args = 0, pretend = 0, frame = 16
 2508              		@ frame_needed = 1, uses_anonymous_args = 0
 2509 0000 80B5     		push	{r7, lr}
 2510              		.cfi_def_cfa_offset 8
 2511              		.cfi_offset 7, -8
 2512              		.cfi_offset 14, -4
 2513 0002 84B0     		sub	sp, sp, #16
 2514              		.cfi_def_cfa_offset 24
 2515 0004 00AF     		add	r7, sp, #0
 2516              		.cfi_def_cfa_register 7
 2517 0006 0346     		mov	r3, r0
 2518 0008 FB71     		strb	r3, [r7, #7]
 2519 000a 0B46     		mov	r3, r1
 2520 000c BB71     		strb	r3, [r7, #6]
 2521 000e 1346     		mov	r3, r2
 2522 0010 7B71     		strb	r3, [r7, #5]
 800:MAX30101.c    ****     uint8_t reg_data;
 801:MAX30101.c    ****     uint8_t error = MAX30101_ReadRegister(reg_addr, &reg_data);
 2523              		.loc 1 801 0
 2524 0012 07F10E02 		add	r2, r7, #14
 2525 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2526 0018 1146     		mov	r1, r2
 2527 001a 1846     		mov	r0, r3
 2528 001c FFF7FEFF 		bl	MAX30101_ReadRegister
 2529 0020 0346     		mov	r3, r0
 2530 0022 FB73     		strb	r3, [r7, #15]
 802:MAX30101.c    ****     if (error == MAX30101_OK)
 2531              		.loc 1 802 0
 2532 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2533 0026 002B     		cmp	r3, #0
 2534 0028 0FD1     		bne	.L134
 803:MAX30101.c    ****     {
 804:MAX30101.c    ****         reg_data = reg_data & mask;
 2535              		.loc 1 804 0
 2536 002a BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2537 002c BB79     		ldrb	r3, [r7, #6]
 2538 002e 1340     		ands	r3, r3, r2
 2539 0030 DBB2     		uxtb	r3, r3
 2540 0032 BB73     		strb	r3, [r7, #14]
 805:MAX30101.c    ****         error = MAX30101_WriteRegister(reg_addr, reg_data | thing);
 2541              		.loc 1 805 0
 2542 0034 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2543 0036 7B79     		ldrb	r3, [r7, #5]
 2544 0038 1343     		orrs	r3, r3, r2
 2545 003a DAB2     		uxtb	r2, r3
 2546 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2547 003e 1146     		mov	r1, r2
 2548 0040 1846     		mov	r0, r3
 2549 0042 FFF7FEFF 		bl	MAX30101_WriteRegister
 2550 0046 0346     		mov	r3, r0
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 60


 2551 0048 FB73     		strb	r3, [r7, #15]
 2552              	.L134:
 806:MAX30101.c    ****     }
 807:MAX30101.c    ****     return error;
 2553              		.loc 1 807 0
 2554 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 808:MAX30101.c    **** }
 2555              		.loc 1 808 0
 2556 004c 1846     		mov	r0, r3
 2557 004e 1037     		adds	r7, r7, #16
 2558              		.cfi_def_cfa_offset 8
 2559 0050 BD46     		mov	sp, r7
 2560              		.cfi_def_cfa_register 13
 2561              		@ sp needed
 2562 0052 80BD     		pop	{r7, pc}
 2563              		.cfi_endproc
 2564              	.LFE46:
 2565              		.size	MAX30101_BitMask, .-MAX30101_BitMask
 2566              		.text
 2567              	.Letext0:
 2568              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2569              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2570              		.file 4 "MAX30101.h"
 2571              		.section	.debug_info,"",%progbits
 2572              	.Ldebug_info0:
 2573 0000 AE0B0000 		.4byte	0xbae
 2574 0004 0400     		.2byte	0x4
 2575 0006 00000000 		.4byte	.Ldebug_abbrev0
 2576 000a 04       		.byte	0x4
 2577 000b 01       		.uleb128 0x1
 2578 000c 23010000 		.4byte	.LASF103
 2579 0010 0C       		.byte	0xc
 2580 0011 09020000 		.4byte	.LASF104
 2581 0015 65000000 		.4byte	.LASF105
 2582 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2583 001d 00000000 		.4byte	0
 2584 0021 00000000 		.4byte	.Ldebug_line0
 2585 0025 02       		.uleb128 0x2
 2586 0026 41040000 		.4byte	.LASF0
 2587 002a 02       		.byte	0x2
 2588 002b 1B       		.byte	0x1b
 2589 002c 30000000 		.4byte	0x30
 2590 0030 03       		.uleb128 0x3
 2591 0031 01       		.byte	0x1
 2592 0032 06       		.byte	0x6
 2593 0033 B3030000 		.4byte	.LASF2
 2594 0037 02       		.uleb128 0x2
 2595 0038 28070000 		.4byte	.LASF1
 2596 003c 02       		.byte	0x2
 2597 003d 1D       		.byte	0x1d
 2598 003e 42000000 		.4byte	0x42
 2599 0042 03       		.uleb128 0x3
 2600 0043 01       		.byte	0x1
 2601 0044 08       		.byte	0x8
 2602 0045 8C030000 		.4byte	.LASF3
 2603 0049 03       		.uleb128 0x3
 2604 004a 02       		.byte	0x2
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 61


 2605 004b 05       		.byte	0x5
 2606 004c B3000000 		.4byte	.LASF4
 2607 0050 02       		.uleb128 0x2
 2608 0051 DF010000 		.4byte	.LASF5
 2609 0055 02       		.byte	0x2
 2610 0056 2B       		.byte	0x2b
 2611 0057 5B000000 		.4byte	0x5b
 2612 005b 03       		.uleb128 0x3
 2613 005c 02       		.byte	0x2
 2614 005d 07       		.byte	0x7
 2615 005e 1B040000 		.4byte	.LASF6
 2616 0062 03       		.uleb128 0x3
 2617 0063 04       		.byte	0x4
 2618 0064 05       		.byte	0x5
 2619 0065 DB020000 		.4byte	.LASF7
 2620 0069 02       		.uleb128 0x2
 2621 006a 75050000 		.4byte	.LASF8
 2622 006e 02       		.byte	0x2
 2623 006f 41       		.byte	0x41
 2624 0070 74000000 		.4byte	0x74
 2625 0074 03       		.uleb128 0x3
 2626 0075 04       		.byte	0x4
 2627 0076 07       		.byte	0x7
 2628 0077 2A050000 		.4byte	.LASF9
 2629 007b 03       		.uleb128 0x3
 2630 007c 08       		.byte	0x8
 2631 007d 05       		.byte	0x5
 2632 007e AE020000 		.4byte	.LASF10
 2633 0082 03       		.uleb128 0x3
 2634 0083 08       		.byte	0x8
 2635 0084 07       		.byte	0x7
 2636 0085 BF030000 		.4byte	.LASF11
 2637 0089 04       		.uleb128 0x4
 2638 008a 04       		.byte	0x4
 2639 008b 05       		.byte	0x5
 2640 008c 696E7400 		.ascii	"int\000"
 2641 0090 03       		.uleb128 0x3
 2642 0091 04       		.byte	0x4
 2643 0092 07       		.byte	0x7
 2644 0093 D6030000 		.4byte	.LASF12
 2645 0097 02       		.uleb128 0x2
 2646 0098 56000000 		.4byte	.LASF13
 2647 009c 03       		.byte	0x3
 2648 009d 14       		.byte	0x14
 2649 009e 25000000 		.4byte	0x25
 2650 00a2 02       		.uleb128 0x2
 2651 00a3 19020000 		.4byte	.LASF14
 2652 00a7 03       		.byte	0x3
 2653 00a8 18       		.byte	0x18
 2654 00a9 37000000 		.4byte	0x37
 2655 00ad 02       		.uleb128 0x2
 2656 00ae 5E040000 		.4byte	.LASF15
 2657 00b2 03       		.byte	0x3
 2658 00b3 24       		.byte	0x24
 2659 00b4 50000000 		.4byte	0x50
 2660 00b8 02       		.uleb128 0x2
 2661 00b9 D2040000 		.4byte	.LASF16
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 62


 2662 00bd 03       		.byte	0x3
 2663 00be 30       		.byte	0x30
 2664 00bf 69000000 		.4byte	0x69
 2665 00c3 03       		.uleb128 0x3
 2666 00c4 04       		.byte	0x4
 2667 00c5 04       		.byte	0x4
 2668 00c6 A3020000 		.4byte	.LASF17
 2669 00ca 03       		.uleb128 0x3
 2670 00cb 08       		.byte	0x8
 2671 00cc 04       		.byte	0x4
 2672 00cd 6D060000 		.4byte	.LASF18
 2673 00d1 03       		.uleb128 0x3
 2674 00d2 01       		.byte	0x1
 2675 00d3 08       		.byte	0x8
 2676 00d4 59040000 		.4byte	.LASF19
 2677 00d8 03       		.uleb128 0x3
 2678 00d9 08       		.byte	0x8
 2679 00da 04       		.byte	0x4
 2680 00db 55030000 		.4byte	.LASF20
 2681 00df 03       		.uleb128 0x3
 2682 00e0 04       		.byte	0x4
 2683 00e1 07       		.byte	0x7
 2684 00e2 DB000000 		.4byte	.LASF21
 2685 00e6 05       		.uleb128 0x5
 2686 00e7 04       		.byte	0x4
 2687 00e8 EC000000 		.4byte	0xec
 2688 00ec 06       		.uleb128 0x6
 2689 00ed D1000000 		.4byte	0xd1
 2690 00f1 07       		.uleb128 0x7
 2691 00f2 64       		.byte	0x64
 2692 00f3 04       		.byte	0x4
 2693 00f4 1B       		.byte	0x1b
 2694 00f5 35010000 		.4byte	0x135
 2695 00f9 08       		.uleb128 0x8
 2696 00fa 72656400 		.ascii	"red\000"
 2697 00fe 04       		.byte	0x4
 2698 00ff 1D       		.byte	0x1d
 2699 0100 35010000 		.4byte	0x135
 2700 0104 00       		.byte	0
 2701 0105 08       		.uleb128 0x8
 2702 0106 495200   		.ascii	"IR\000"
 2703 0109 04       		.byte	0x4
 2704 010a 1E       		.byte	0x1e
 2705 010b 35010000 		.4byte	0x135
 2706 010f 20       		.byte	0x20
 2707 0110 09       		.uleb128 0x9
 2708 0111 1B030000 		.4byte	.LASF22
 2709 0115 04       		.byte	0x4
 2710 0116 1F       		.byte	0x1f
 2711 0117 35010000 		.4byte	0x135
 2712 011b 40       		.byte	0x40
 2713 011c 09       		.uleb128 0x9
 2714 011d 14020000 		.4byte	.LASF23
 2715 0121 04       		.byte	0x4
 2716 0122 20       		.byte	0x20
 2717 0123 A2000000 		.4byte	0xa2
 2718 0127 60       		.byte	0x60
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 63


 2719 0128 09       		.uleb128 0x9
 2720 0129 61030000 		.4byte	.LASF24
 2721 012d 04       		.byte	0x4
 2722 012e 21       		.byte	0x21
 2723 012f A2000000 		.4byte	0xa2
 2724 0133 61       		.byte	0x61
 2725 0134 00       		.byte	0
 2726 0135 0A       		.uleb128 0xa
 2727 0136 B8000000 		.4byte	0xb8
 2728 013a 45010000 		.4byte	0x145
 2729 013e 0B       		.uleb128 0xb
 2730 013f DF000000 		.4byte	0xdf
 2731 0143 07       		.byte	0x7
 2732 0144 00       		.byte	0
 2733 0145 02       		.uleb128 0x2
 2734 0146 3C050000 		.4byte	.LASF25
 2735 014a 04       		.byte	0x4
 2736 014b 22       		.byte	0x22
 2737 014c F1000000 		.4byte	0xf1
 2738 0150 0C       		.uleb128 0xc
 2739 0151 4A040000 		.4byte	.LASF26
 2740 0155 01       		.byte	0x1
 2741 0156 B6       		.byte	0xb6
 2742 0157 A2000000 		.4byte	0xa2
 2743 015b 00000000 		.4byte	.LFB1
 2744 015f 12000000 		.4byte	.LFE1-.LFB1
 2745 0163 01       		.uleb128 0x1
 2746 0164 9C       		.byte	0x9c
 2747 0165 0C       		.uleb128 0xc
 2748 0166 9A030000 		.4byte	.LASF27
 2749 016a 01       		.byte	0x1
 2750 016b BD       		.byte	0xbd
 2751 016c A2000000 		.4byte	0xa2
 2752 0170 00000000 		.4byte	.LFB2
 2753 0174 1A000000 		.4byte	.LFE2-.LFB2
 2754 0178 01       		.uleb128 0x1
 2755 0179 9C       		.byte	0x9c
 2756 017a 0D       		.uleb128 0xd
 2757 017b 19000000 		.4byte	.LASF30
 2758 017f 01       		.byte	0x1
 2759 0180 CC       		.byte	0xcc
 2760 0181 A2000000 		.4byte	0xa2
 2761 0185 00000000 		.4byte	.LFB3
 2762 0189 2E000000 		.4byte	.LFE3-.LFB3
 2763 018d 01       		.uleb128 0x1
 2764 018e 9C       		.byte	0x9c
 2765 018f BE010000 		.4byte	0x1be
 2766 0193 0E       		.uleb128 0xe
 2767 0194 74060000 		.4byte	.LASF32
 2768 0198 01       		.byte	0x1
 2769 0199 CC       		.byte	0xcc
 2770 019a BE010000 		.4byte	0x1be
 2771 019e 02       		.uleb128 0x2
 2772 019f 91       		.byte	0x91
 2773 01a0 6C       		.sleb128 -20
 2774 01a1 0F       		.uleb128 0xf
 2775 01a2 A9020000 		.4byte	.LASF28
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 64


 2776 01a6 01       		.byte	0x1
 2777 01a7 CF       		.byte	0xcf
 2778 01a8 A2000000 		.4byte	0xa2
 2779 01ac 02       		.uleb128 0x2
 2780 01ad 91       		.byte	0x91
 2781 01ae 76       		.sleb128 -10
 2782 01af 0F       		.uleb128 0xf
 2783 01b0 67060000 		.4byte	.LASF29
 2784 01b4 01       		.byte	0x1
 2785 01b5 D0       		.byte	0xd0
 2786 01b6 A2000000 		.4byte	0xa2
 2787 01ba 02       		.uleb128 0x2
 2788 01bb 91       		.byte	0x91
 2789 01bc 77       		.sleb128 -9
 2790 01bd 00       		.byte	0
 2791 01be 05       		.uleb128 0x5
 2792 01bf 04       		.byte	0x4
 2793 01c0 A2000000 		.4byte	0xa2
 2794 01c4 0D       		.uleb128 0xd
 2795 01c5 9D040000 		.4byte	.LASF31
 2796 01c9 01       		.byte	0x1
 2797 01ca D6       		.byte	0xd6
 2798 01cb A2000000 		.4byte	0xa2
 2799 01cf 00000000 		.4byte	.LFB4
 2800 01d3 2E000000 		.4byte	.LFE4-.LFB4
 2801 01d7 01       		.uleb128 0x1
 2802 01d8 9C       		.byte	0x9c
 2803 01d9 08020000 		.4byte	0x208
 2804 01dd 0E       		.uleb128 0xe
 2805 01de 74060000 		.4byte	.LASF32
 2806 01e2 01       		.byte	0x1
 2807 01e3 D6       		.byte	0xd6
 2808 01e4 BE010000 		.4byte	0x1be
 2809 01e8 02       		.uleb128 0x2
 2810 01e9 91       		.byte	0x91
 2811 01ea 6C       		.sleb128 -20
 2812 01eb 0F       		.uleb128 0xf
 2813 01ec A9020000 		.4byte	.LASF28
 2814 01f0 01       		.byte	0x1
 2815 01f1 D9       		.byte	0xd9
 2816 01f2 A2000000 		.4byte	0xa2
 2817 01f6 02       		.uleb128 0x2
 2818 01f7 91       		.byte	0x91
 2819 01f8 76       		.sleb128 -10
 2820 01f9 0F       		.uleb128 0xf
 2821 01fa 67060000 		.4byte	.LASF29
 2822 01fe 01       		.byte	0x1
 2823 01ff DA       		.byte	0xda
 2824 0200 A2000000 		.4byte	0xa2
 2825 0204 02       		.uleb128 0x2
 2826 0205 91       		.byte	0x91
 2827 0206 77       		.sleb128 -9
 2828 0207 00       		.byte	0
 2829 0208 0D       		.uleb128 0xd
 2830 0209 BE060000 		.4byte	.LASF33
 2831 020d 01       		.byte	0x1
 2832 020e DE       		.byte	0xde
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 65


 2833 020f A2000000 		.4byte	0xa2
 2834 0213 00000000 		.4byte	.LFB5
 2835 0217 2E000000 		.4byte	.LFE5-.LFB5
 2836 021b 01       		.uleb128 0x1
 2837 021c 9C       		.byte	0x9c
 2838 021d 4C020000 		.4byte	0x24c
 2839 0221 0E       		.uleb128 0xe
 2840 0222 74060000 		.4byte	.LASF32
 2841 0226 01       		.byte	0x1
 2842 0227 DE       		.byte	0xde
 2843 0228 BE010000 		.4byte	0x1be
 2844 022c 02       		.uleb128 0x2
 2845 022d 91       		.byte	0x91
 2846 022e 6C       		.sleb128 -20
 2847 022f 0F       		.uleb128 0xf
 2848 0230 A9020000 		.4byte	.LASF28
 2849 0234 01       		.byte	0x1
 2850 0235 E1       		.byte	0xe1
 2851 0236 A2000000 		.4byte	0xa2
 2852 023a 02       		.uleb128 0x2
 2853 023b 91       		.byte	0x91
 2854 023c 76       		.sleb128 -10
 2855 023d 0F       		.uleb128 0xf
 2856 023e 67060000 		.4byte	.LASF29
 2857 0242 01       		.byte	0x1
 2858 0243 E2       		.byte	0xe2
 2859 0244 A2000000 		.4byte	0xa2
 2860 0248 02       		.uleb128 0x2
 2861 0249 91       		.byte	0x91
 2862 024a 77       		.sleb128 -9
 2863 024b 00       		.byte	0
 2864 024c 0D       		.uleb128 0xd
 2865 024d A2060000 		.4byte	.LASF34
 2866 0251 01       		.byte	0x1
 2867 0252 E6       		.byte	0xe6
 2868 0253 A2000000 		.4byte	0xa2
 2869 0257 00000000 		.4byte	.LFB6
 2870 025b 2E000000 		.4byte	.LFE6-.LFB6
 2871 025f 01       		.uleb128 0x1
 2872 0260 9C       		.byte	0x9c
 2873 0261 90020000 		.4byte	0x290
 2874 0265 0E       		.uleb128 0xe
 2875 0266 74060000 		.4byte	.LASF32
 2876 026a 01       		.byte	0x1
 2877 026b E6       		.byte	0xe6
 2878 026c BE010000 		.4byte	0x1be
 2879 0270 02       		.uleb128 0x2
 2880 0271 91       		.byte	0x91
 2881 0272 6C       		.sleb128 -20
 2882 0273 0F       		.uleb128 0xf
 2883 0274 A9020000 		.4byte	.LASF28
 2884 0278 01       		.byte	0x1
 2885 0279 E9       		.byte	0xe9
 2886 027a A2000000 		.4byte	0xa2
 2887 027e 02       		.uleb128 0x2
 2888 027f 91       		.byte	0x91
 2889 0280 76       		.sleb128 -10
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 66


 2890 0281 0F       		.uleb128 0xf
 2891 0282 67060000 		.4byte	.LASF29
 2892 0286 01       		.byte	0x1
 2893 0287 EA       		.byte	0xea
 2894 0288 A2000000 		.4byte	0xa2
 2895 028c 02       		.uleb128 0x2
 2896 028d 91       		.byte	0x91
 2897 028e 77       		.sleb128 -9
 2898 028f 00       		.byte	0
 2899 0290 0D       		.uleb128 0xd
 2900 0291 75020000 		.4byte	.LASF35
 2901 0295 01       		.byte	0x1
 2902 0296 EE       		.byte	0xee
 2903 0297 A2000000 		.4byte	0xa2
 2904 029b 00000000 		.4byte	.LFB7
 2905 029f 2E000000 		.4byte	.LFE7-.LFB7
 2906 02a3 01       		.uleb128 0x1
 2907 02a4 9C       		.byte	0x9c
 2908 02a5 D4020000 		.4byte	0x2d4
 2909 02a9 0E       		.uleb128 0xe
 2910 02aa 74060000 		.4byte	.LASF32
 2911 02ae 01       		.byte	0x1
 2912 02af EE       		.byte	0xee
 2913 02b0 BE010000 		.4byte	0x1be
 2914 02b4 02       		.uleb128 0x2
 2915 02b5 91       		.byte	0x91
 2916 02b6 6C       		.sleb128 -20
 2917 02b7 0F       		.uleb128 0xf
 2918 02b8 A9020000 		.4byte	.LASF28
 2919 02bc 01       		.byte	0x1
 2920 02bd F1       		.byte	0xf1
 2921 02be A2000000 		.4byte	0xa2
 2922 02c2 02       		.uleb128 0x2
 2923 02c3 91       		.byte	0x91
 2924 02c4 76       		.sleb128 -10
 2925 02c5 0F       		.uleb128 0xf
 2926 02c6 67060000 		.4byte	.LASF29
 2927 02ca 01       		.byte	0x1
 2928 02cb F2       		.byte	0xf2
 2929 02cc A2000000 		.4byte	0xa2
 2930 02d0 02       		.uleb128 0x2
 2931 02d1 91       		.byte	0x91
 2932 02d2 77       		.sleb128 -9
 2933 02d3 00       		.byte	0
 2934 02d4 0C       		.uleb128 0xc
 2935 02d5 B1010000 		.4byte	.LASF36
 2936 02d9 01       		.byte	0x1
 2937 02da F8       		.byte	0xf8
 2938 02db A2000000 		.4byte	0xa2
 2939 02df 00000000 		.4byte	.LFB8
 2940 02e3 14000000 		.4byte	.LFE8-.LFB8
 2941 02e7 01       		.uleb128 0x1
 2942 02e8 9C       		.byte	0x9c
 2943 02e9 0C       		.uleb128 0xc
 2944 02ea 32070000 		.4byte	.LASF37
 2945 02ee 01       		.byte	0x1
 2946 02ef FC       		.byte	0xfc
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 67


 2947 02f0 A2000000 		.4byte	0xa2
 2948 02f4 00000000 		.4byte	.LFB9
 2949 02f8 14000000 		.4byte	.LFE9-.LFB9
 2950 02fc 01       		.uleb128 0x1
 2951 02fd 9C       		.byte	0x9c
 2952 02fe 10       		.uleb128 0x10
 2953 02ff 0C050000 		.4byte	.LASF38
 2954 0303 01       		.byte	0x1
 2955 0304 0001     		.2byte	0x100
 2956 0306 A2000000 		.4byte	0xa2
 2957 030a 00000000 		.4byte	.LFB10
 2958 030e 14000000 		.4byte	.LFE10-.LFB10
 2959 0312 01       		.uleb128 0x1
 2960 0313 9C       		.byte	0x9c
 2961 0314 10       		.uleb128 0x10
 2962 0315 2A060000 		.4byte	.LASF39
 2963 0319 01       		.byte	0x1
 2964 031a 0501     		.2byte	0x105
 2965 031c A2000000 		.4byte	0xa2
 2966 0320 00000000 		.4byte	.LFB11
 2967 0324 14000000 		.4byte	.LFE11-.LFB11
 2968 0328 01       		.uleb128 0x1
 2969 0329 9C       		.byte	0x9c
 2970 032a 10       		.uleb128 0x10
 2971 032b 39000000 		.4byte	.LASF40
 2972 032f 01       		.byte	0x1
 2973 0330 0B01     		.2byte	0x10b
 2974 0332 A2000000 		.4byte	0xa2
 2975 0336 00000000 		.4byte	.LFB12
 2976 033a 14000000 		.4byte	.LFE12-.LFB12
 2977 033e 01       		.uleb128 0x1
 2978 033f 9C       		.byte	0x9c
 2979 0340 10       		.uleb128 0x10
 2980 0341 E4020000 		.4byte	.LASF41
 2981 0345 01       		.byte	0x1
 2982 0346 1001     		.2byte	0x110
 2983 0348 A2000000 		.4byte	0xa2
 2984 034c 00000000 		.4byte	.LFB13
 2985 0350 14000000 		.4byte	.LFE13-.LFB13
 2986 0354 01       		.uleb128 0x1
 2987 0355 9C       		.byte	0x9c
 2988 0356 10       		.uleb128 0x10
 2989 0357 EF030000 		.4byte	.LASF42
 2990 035b 01       		.byte	0x1
 2991 035c 1501     		.2byte	0x115
 2992 035e A2000000 		.4byte	0xa2
 2993 0362 00000000 		.4byte	.LFB14
 2994 0366 14000000 		.4byte	.LFE14-.LFB14
 2995 036a 01       		.uleb128 0x1
 2996 036b 9C       		.byte	0x9c
 2997 036c 10       		.uleb128 0x10
 2998 036d 66030000 		.4byte	.LASF43
 2999 0371 01       		.byte	0x1
 3000 0372 1A01     		.2byte	0x11a
 3001 0374 A2000000 		.4byte	0xa2
 3002 0378 00000000 		.4byte	.LFB15
 3003 037c 14000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 68


 3004 0380 01       		.uleb128 0x1
 3005 0381 9C       		.byte	0x9c
 3006 0382 11       		.uleb128 0x11
 3007 0383 EF010000 		.4byte	.LASF44
 3008 0387 01       		.byte	0x1
 3009 0388 2301     		.2byte	0x123
 3010 038a A2000000 		.4byte	0xa2
 3011 038e 00000000 		.4byte	.LFB16
 3012 0392 1A000000 		.4byte	.LFE16-.LFB16
 3013 0396 01       		.uleb128 0x1
 3014 0397 9C       		.byte	0x9c
 3015 0398 AB030000 		.4byte	0x3ab
 3016 039c 12       		.uleb128 0x12
 3017 039d 777200   		.ascii	"wr\000"
 3018 03a0 01       		.byte	0x1
 3019 03a1 2301     		.2byte	0x123
 3020 03a3 BE010000 		.4byte	0x1be
 3021 03a7 02       		.uleb128 0x2
 3022 03a8 91       		.byte	0x91
 3023 03a9 74       		.sleb128 -12
 3024 03aa 00       		.byte	0
 3025 03ab 11       		.uleb128 0x11
 3026 03ac B7050000 		.4byte	.LASF45
 3027 03b0 01       		.byte	0x1
 3028 03b1 2901     		.2byte	0x129
 3029 03b3 A2000000 		.4byte	0xa2
 3030 03b7 00000000 		.4byte	.LFB17
 3031 03bb 1A000000 		.4byte	.LFE17-.LFB17
 3032 03bf 01       		.uleb128 0x1
 3033 03c0 9C       		.byte	0x9c
 3034 03c1 D4030000 		.4byte	0x3d4
 3035 03c5 12       		.uleb128 0x12
 3036 03c6 6F6300   		.ascii	"oc\000"
 3037 03c9 01       		.byte	0x1
 3038 03ca 2901     		.2byte	0x129
 3039 03cc BE010000 		.4byte	0x1be
 3040 03d0 02       		.uleb128 0x2
 3041 03d1 91       		.byte	0x91
 3042 03d2 74       		.sleb128 -12
 3043 03d3 00       		.byte	0
 3044 03d4 11       		.uleb128 0x11
 3045 03d5 0F070000 		.4byte	.LASF46
 3046 03d9 01       		.byte	0x1
 3047 03da 2F01     		.2byte	0x12f
 3048 03dc A2000000 		.4byte	0xa2
 3049 03e0 00000000 		.4byte	.LFB18
 3050 03e4 1A000000 		.4byte	.LFE18-.LFB18
 3051 03e8 01       		.uleb128 0x1
 3052 03e9 9C       		.byte	0x9c
 3053 03ea FD030000 		.4byte	0x3fd
 3054 03ee 12       		.uleb128 0x12
 3055 03ef 727200   		.ascii	"rr\000"
 3056 03f2 01       		.byte	0x1
 3057 03f3 2F01     		.2byte	0x12f
 3058 03f5 BE010000 		.4byte	0x1be
 3059 03f9 02       		.uleb128 0x2
 3060 03fa 91       		.byte	0x91
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 69


 3061 03fb 74       		.sleb128 -12
 3062 03fc 00       		.byte	0
 3063 03fd 11       		.uleb128 0x11
 3064 03fe 2E040000 		.4byte	.LASF47
 3065 0402 01       		.byte	0x1
 3066 0403 3501     		.2byte	0x135
 3067 0405 A2000000 		.4byte	0xa2
 3068 0409 00000000 		.4byte	.LFB19
 3069 040d C6000000 		.4byte	.LFE19-.LFB19
 3070 0411 01       		.uleb128 0x1
 3071 0412 9C       		.byte	0x9c
 3072 0413 6E040000 		.4byte	0x46e
 3073 0417 13       		.uleb128 0x13
 3074 0418 67060000 		.4byte	.LASF29
 3075 041c 01       		.byte	0x1
 3076 041d 3701     		.2byte	0x137
 3077 041f A2000000 		.4byte	0xa2
 3078 0423 02       		.uleb128 0x2
 3079 0424 91       		.byte	0x91
 3080 0425 5F       		.sleb128 -33
 3081 0426 14       		.uleb128 0x14
 3082 0427 2C000000 		.4byte	.LBB2
 3083 042b 8E000000 		.4byte	.LBE2-.LBB2
 3084 042f 13       		.uleb128 0x13
 3085 0430 77040000 		.4byte	.LASF48
 3086 0434 01       		.byte	0x1
 3087 0435 3E01     		.2byte	0x13e
 3088 0437 A2000000 		.4byte	0xa2
 3089 043b 02       		.uleb128 0x2
 3090 043c 91       		.byte	0x91
 3091 043d 53       		.sleb128 -45
 3092 043e 13       		.uleb128 0x13
 3093 043f D2010000 		.4byte	.LASF49
 3094 0443 01       		.byte	0x1
 3095 0444 4001     		.2byte	0x140
 3096 0446 A2000000 		.4byte	0xa2
 3097 044a 02       		.uleb128 0x2
 3098 044b 91       		.byte	0x91
 3099 044c 5D       		.sleb128 -35
 3100 044d 13       		.uleb128 0x13
 3101 044e 53050000 		.4byte	.LASF50
 3102 0452 01       		.byte	0x1
 3103 0453 4101     		.2byte	0x141
 3104 0455 A2000000 		.4byte	0xa2
 3105 0459 02       		.uleb128 0x2
 3106 045a 91       		.byte	0x91
 3107 045b 5E       		.sleb128 -34
 3108 045c 13       		.uleb128 0x13
 3109 045d 21030000 		.4byte	.LASF51
 3110 0461 01       		.byte	0x1
 3111 0462 4E01     		.2byte	0x14e
 3112 0464 6E040000 		.4byte	0x46e
 3113 0468 03       		.uleb128 0x3
 3114 0469 91       		.byte	0x91
 3115 046a 54       		.sleb128 -44
 3116 046b 06       		.byte	0x6
 3117 046c 00       		.byte	0
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 70


 3118 046d 00       		.byte	0
 3119 046e 0A       		.uleb128 0xa
 3120 046f A2000000 		.4byte	0xa2
 3121 0473 81040000 		.4byte	0x481
 3122 0477 15       		.uleb128 0x15
 3123 0478 DF000000 		.4byte	0xdf
 3124 047c 03       		.uleb128 0x3
 3125 047d 91       		.byte	0x91
 3126 047e 58       		.sleb128 -40
 3127 047f 06       		.byte	0x6
 3128 0480 00       		.byte	0
 3129 0481 11       		.uleb128 0x11
 3130 0482 4D070000 		.4byte	.LASF52
 3131 0486 01       		.byte	0x1
 3132 0487 5601     		.2byte	0x156
 3133 0489 A2000000 		.4byte	0xa2
 3134 048d 00000000 		.4byte	.LFB20
 3135 0491 46000000 		.4byte	.LFE20-.LFB20
 3136 0495 01       		.uleb128 0x1
 3137 0496 9C       		.byte	0x9c
 3138 0497 D8040000 		.4byte	0x4d8
 3139 049b 16       		.uleb128 0x16
 3140 049c 03070000 		.4byte	.LASF53
 3141 04a0 01       		.byte	0x1
 3142 04a1 5601     		.2byte	0x156
 3143 04a3 A2000000 		.4byte	0xa2
 3144 04a7 02       		.uleb128 0x2
 3145 04a8 91       		.byte	0x91
 3146 04a9 6F       		.sleb128 -17
 3147 04aa 16       		.uleb128 0x16
 3148 04ab 53050000 		.4byte	.LASF50
 3149 04af 01       		.byte	0x1
 3150 04b0 5601     		.2byte	0x156
 3151 04b2 A2000000 		.4byte	0xa2
 3152 04b6 02       		.uleb128 0x2
 3153 04b7 91       		.byte	0x91
 3154 04b8 6E       		.sleb128 -18
 3155 04b9 16       		.uleb128 0x16
 3156 04ba B1040000 		.4byte	.LASF54
 3157 04be 01       		.byte	0x1
 3158 04bf 5601     		.2byte	0x156
 3159 04c1 BE010000 		.4byte	0x1be
 3160 04c5 02       		.uleb128 0x2
 3161 04c6 91       		.byte	0x91
 3162 04c7 68       		.sleb128 -24
 3163 04c8 13       		.uleb128 0x13
 3164 04c9 C8020000 		.4byte	.LASF55
 3165 04cd 01       		.byte	0x1
 3166 04ce 5901     		.2byte	0x159
 3167 04d0 AD000000 		.4byte	0xad
 3168 04d4 02       		.uleb128 0x2
 3169 04d5 91       		.byte	0x91
 3170 04d6 76       		.sleb128 -10
 3171 04d7 00       		.byte	0
 3172 04d8 11       		.uleb128 0x11
 3173 04d9 8D060000 		.4byte	.LASF56
 3174 04dd 01       		.byte	0x1
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 71


 3175 04de 6501     		.2byte	0x165
 3176 04e0 A2000000 		.4byte	0xa2
 3177 04e4 00000000 		.4byte	.LFB21
 3178 04e8 3A010000 		.4byte	.LFE21-.LFB21
 3179 04ec 01       		.uleb128 0x1
 3180 04ed 9C       		.byte	0x9c
 3181 04ee 93050000 		.4byte	0x593
 3182 04f2 16       		.uleb128 0x16
 3183 04f3 03070000 		.4byte	.LASF53
 3184 04f7 01       		.byte	0x1
 3185 04f8 6501     		.2byte	0x165
 3186 04fa A2000000 		.4byte	0xa2
 3187 04fe 02       		.uleb128 0x2
 3188 04ff 91       		.byte	0x91
 3189 0500 5F       		.sleb128 -33
 3190 0501 16       		.uleb128 0x16
 3191 0502 53050000 		.4byte	.LASF50
 3192 0506 01       		.byte	0x1
 3193 0507 6501     		.2byte	0x165
 3194 0509 A2000000 		.4byte	0xa2
 3195 050d 02       		.uleb128 0x2
 3196 050e 91       		.byte	0x91
 3197 050f 5E       		.sleb128 -34
 3198 0510 16       		.uleb128 0x16
 3199 0511 B1040000 		.4byte	.LASF54
 3200 0515 01       		.byte	0x1
 3201 0516 6501     		.2byte	0x165
 3202 0518 93050000 		.4byte	0x593
 3203 051c 02       		.uleb128 0x2
 3204 051d 91       		.byte	0x91
 3205 051e 58       		.sleb128 -40
 3206 051f 13       		.uleb128 0x13
 3207 0520 C8020000 		.4byte	.LASF55
 3208 0524 01       		.byte	0x1
 3209 0525 6801     		.2byte	0x168
 3210 0527 AD000000 		.4byte	0xad
 3211 052b 02       		.uleb128 0x2
 3212 052c 91       		.byte	0x91
 3213 052d 76       		.sleb128 -10
 3214 052e 13       		.uleb128 0x13
 3215 052f 67060000 		.4byte	.LASF29
 3216 0533 01       		.byte	0x1
 3217 0534 6901     		.2byte	0x169
 3218 0536 A2000000 		.4byte	0xa2
 3219 053a 02       		.uleb128 0x2
 3220 053b 91       		.byte	0x91
 3221 053c 75       		.sleb128 -11
 3222 053d 13       		.uleb128 0x13
 3223 053e 35030000 		.4byte	.LASF57
 3224 0542 01       		.byte	0x1
 3225 0543 6D01     		.2byte	0x16d
 3226 0545 A2000000 		.4byte	0xa2
 3227 0549 02       		.uleb128 0x2
 3228 054a 91       		.byte	0x91
 3229 054b 74       		.sleb128 -12
 3230 054c 14       		.uleb128 0x14
 3231 054d 2C000000 		.4byte	.LBB3
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 72


 3232 0551 FC000000 		.4byte	.LBE3-.LBB3
 3233 0555 13       		.uleb128 0x13
 3234 0556 67070000 		.4byte	.LASF58
 3235 055a 01       		.byte	0x1
 3236 055b 7001     		.2byte	0x170
 3237 055d AD000000 		.4byte	0xad
 3238 0561 02       		.uleb128 0x2
 3239 0562 91       		.byte	0x91
 3240 0563 72       		.sleb128 -14
 3241 0564 13       		.uleb128 0x13
 3242 0565 A9020000 		.4byte	.LASF28
 3243 0569 01       		.byte	0x1
 3244 056a 7401     		.2byte	0x174
 3245 056c 99050000 		.4byte	0x599
 3246 0570 02       		.uleb128 0x2
 3247 0571 91       		.byte	0x91
 3248 0572 6C       		.sleb128 -20
 3249 0573 13       		.uleb128 0x13
 3250 0574 2E000000 		.4byte	.LASF59
 3251 0578 01       		.byte	0x1
 3252 0579 7501     		.2byte	0x175
 3253 057b A9050000 		.4byte	0x5a9
 3254 057f 02       		.uleb128 0x2
 3255 0580 91       		.byte	0x91
 3256 0581 68       		.sleb128 -24
 3257 0582 13       		.uleb128 0x13
 3258 0583 10000000 		.4byte	.LASF60
 3259 0587 01       		.byte	0x1
 3260 0588 7601     		.2byte	0x176
 3261 058a B8000000 		.4byte	0xb8
 3262 058e 02       		.uleb128 0x2
 3263 058f 91       		.byte	0x91
 3264 0590 64       		.sleb128 -28
 3265 0591 00       		.byte	0
 3266 0592 00       		.byte	0
 3267 0593 05       		.uleb128 0x5
 3268 0594 04       		.byte	0x4
 3269 0595 B8000000 		.4byte	0xb8
 3270 0599 0A       		.uleb128 0xa
 3271 059a A2000000 		.4byte	0xa2
 3272 059e A9050000 		.4byte	0x5a9
 3273 05a2 0B       		.uleb128 0xb
 3274 05a3 DF000000 		.4byte	0xdf
 3275 05a7 03       		.byte	0x3
 3276 05a8 00       		.byte	0
 3277 05a9 0A       		.uleb128 0xa
 3278 05aa A2000000 		.4byte	0xa2
 3279 05ae B9050000 		.4byte	0x5b9
 3280 05b2 0B       		.uleb128 0xb
 3281 05b3 DF000000 		.4byte	0xdf
 3282 05b7 02       		.byte	0x2
 3283 05b8 00       		.byte	0
 3284 05b9 11       		.uleb128 0x11
 3285 05ba 4B020000 		.4byte	.LASF61
 3286 05be 01       		.byte	0x1
 3287 05bf B301     		.2byte	0x1b3
 3288 05c1 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 73


 3289 05c5 00000000 		.4byte	.LFB22
 3290 05c9 C2010000 		.4byte	.LFE22-.LFB22
 3291 05cd 01       		.uleb128 0x1
 3292 05ce 9C       		.byte	0x9c
 3293 05cf 65060000 		.4byte	0x665
 3294 05d3 16       		.uleb128 0x16
 3295 05d4 03070000 		.4byte	.LASF53
 3296 05d8 01       		.byte	0x1
 3297 05d9 B301     		.2byte	0x1b3
 3298 05db A2000000 		.4byte	0xa2
 3299 05df 02       		.uleb128 0x2
 3300 05e0 91       		.byte	0x91
 3301 05e1 67       		.sleb128 -25
 3302 05e2 16       		.uleb128 0x16
 3303 05e3 53050000 		.4byte	.LASF50
 3304 05e7 01       		.byte	0x1
 3305 05e8 B301     		.2byte	0x1b3
 3306 05ea A2000000 		.4byte	0xa2
 3307 05ee 02       		.uleb128 0x2
 3308 05ef 91       		.byte	0x91
 3309 05f0 66       		.sleb128 -26
 3310 05f1 16       		.uleb128 0x16
 3311 05f2 B1040000 		.4byte	.LASF54
 3312 05f6 01       		.byte	0x1
 3313 05f7 B301     		.2byte	0x1b3
 3314 05f9 65060000 		.4byte	0x665
 3315 05fd 02       		.uleb128 0x2
 3316 05fe 91       		.byte	0x91
 3317 05ff 60       		.sleb128 -32
 3318 0600 13       		.uleb128 0x13
 3319 0601 C8020000 		.4byte	.LASF55
 3320 0605 01       		.byte	0x1
 3321 0606 B601     		.2byte	0x1b6
 3322 0608 AD000000 		.4byte	0xad
 3323 060c 02       		.uleb128 0x2
 3324 060d 91       		.byte	0x91
 3325 060e 76       		.sleb128 -10
 3326 060f 13       		.uleb128 0x13
 3327 0610 67060000 		.4byte	.LASF29
 3328 0614 01       		.byte	0x1
 3329 0615 B701     		.2byte	0x1b7
 3330 0617 A2000000 		.4byte	0xa2
 3331 061b 02       		.uleb128 0x2
 3332 061c 91       		.byte	0x91
 3333 061d 75       		.sleb128 -11
 3334 061e 13       		.uleb128 0x13
 3335 061f 67040000 		.4byte	.LASF62
 3336 0623 01       		.byte	0x1
 3337 0624 BA01     		.2byte	0x1ba
 3338 0626 A2000000 		.4byte	0xa2
 3339 062a 02       		.uleb128 0x2
 3340 062b 91       		.byte	0x91
 3341 062c 71       		.sleb128 -15
 3342 062d 14       		.uleb128 0x14
 3343 062e 5E000000 		.4byte	.LBB4
 3344 0632 4E010000 		.4byte	.LBE4-.LBB4
 3345 0636 13       		.uleb128 0x13
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 74


 3346 0637 67070000 		.4byte	.LASF58
 3347 063b 01       		.byte	0x1
 3348 063c C701     		.2byte	0x1c7
 3349 063e AD000000 		.4byte	0xad
 3350 0642 02       		.uleb128 0x2
 3351 0643 91       		.byte	0x91
 3352 0644 72       		.sleb128 -14
 3353 0645 13       		.uleb128 0x13
 3354 0646 A9020000 		.4byte	.LASF28
 3355 064a 01       		.byte	0x1
 3356 064b CE01     		.2byte	0x1ce
 3357 064d 99050000 		.4byte	0x599
 3358 0651 02       		.uleb128 0x2
 3359 0652 91       		.byte	0x91
 3360 0653 6C       		.sleb128 -20
 3361 0654 13       		.uleb128 0x13
 3362 0655 10000000 		.4byte	.LASF60
 3363 0659 01       		.byte	0x1
 3364 065a CF01     		.2byte	0x1cf
 3365 065c B8000000 		.4byte	0xb8
 3366 0660 02       		.uleb128 0x2
 3367 0661 91       		.byte	0x91
 3368 0662 68       		.sleb128 -24
 3369 0663 00       		.byte	0
 3370 0664 00       		.byte	0
 3371 0665 05       		.uleb128 0x5
 3372 0666 04       		.byte	0x4
 3373 0667 45010000 		.4byte	0x145
 3374 066b 11       		.uleb128 0x11
 3375 066c E9060000 		.4byte	.LASF63
 3376 0670 01       		.byte	0x1
 3377 0671 1602     		.2byte	0x216
 3378 0673 A2000000 		.4byte	0xa2
 3379 0677 00000000 		.4byte	.LFB23
 3380 067b 20000000 		.4byte	.LFE23-.LFB23
 3381 067f 01       		.uleb128 0x1
 3382 0680 9C       		.byte	0x9c
 3383 0681 95060000 		.4byte	0x695
 3384 0685 16       		.uleb128 0x16
 3385 0686 2D030000 		.4byte	.LASF64
 3386 068a 01       		.byte	0x1
 3387 068b 1602     		.2byte	0x216
 3388 068d A2000000 		.4byte	0xa2
 3389 0691 02       		.uleb128 0x2
 3390 0692 91       		.byte	0x91
 3391 0693 77       		.sleb128 -9
 3392 0694 00       		.byte	0
 3393 0695 10       		.uleb128 0x10
 3394 0696 B6040000 		.4byte	.LASF65
 3395 069a 01       		.byte	0x1
 3396 069b 1C02     		.2byte	0x21c
 3397 069d A2000000 		.4byte	0xa2
 3398 06a1 00000000 		.4byte	.LFB24
 3399 06a5 14000000 		.4byte	.LFE24-.LFB24
 3400 06a9 01       		.uleb128 0x1
 3401 06aa 9C       		.byte	0x9c
 3402 06ab 10       		.uleb128 0x10
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 75


 3403 06ac E9050000 		.4byte	.LASF66
 3404 06b0 01       		.byte	0x1
 3405 06b1 2202     		.2byte	0x222
 3406 06b3 A2000000 		.4byte	0xa2
 3407 06b7 00000000 		.4byte	.LFB25
 3408 06bb 14000000 		.4byte	.LFE25-.LFB25
 3409 06bf 01       		.uleb128 0x1
 3410 06c0 9C       		.byte	0x9c
 3411 06c1 11       		.uleb128 0x11
 3412 06c2 00030000 		.4byte	.LASF67
 3413 06c6 01       		.byte	0x1
 3414 06c7 2802     		.2byte	0x228
 3415 06c9 A2000000 		.4byte	0xa2
 3416 06cd 00000000 		.4byte	.LFB26
 3417 06d1 26000000 		.4byte	.LFE26-.LFB26
 3418 06d5 01       		.uleb128 0x1
 3419 06d6 9C       		.byte	0x9c
 3420 06d7 EB060000 		.4byte	0x6eb
 3421 06db 16       		.uleb128 0x16
 3422 06dc 2D030000 		.4byte	.LASF64
 3423 06e0 01       		.byte	0x1
 3424 06e1 2802     		.2byte	0x228
 3425 06e3 A2000000 		.4byte	0xa2
 3426 06e7 02       		.uleb128 0x2
 3427 06e8 91       		.byte	0x91
 3428 06e9 77       		.sleb128 -9
 3429 06ea 00       		.byte	0
 3430 06eb 10       		.uleb128 0x10
 3431 06ec FA000000 		.4byte	.LASF68
 3432 06f0 01       		.byte	0x1
 3433 06f1 3202     		.2byte	0x232
 3434 06f3 A2000000 		.4byte	0xa2
 3435 06f7 00000000 		.4byte	.LFB27
 3436 06fb 14000000 		.4byte	.LFE27-.LFB27
 3437 06ff 01       		.uleb128 0x1
 3438 0700 9C       		.byte	0x9c
 3439 0701 10       		.uleb128 0x10
 3440 0702 00000000 		.4byte	.LASF69
 3441 0706 01       		.byte	0x1
 3442 0707 3802     		.2byte	0x238
 3443 0709 A2000000 		.4byte	0xa2
 3444 070d 00000000 		.4byte	.LFB28
 3445 0711 14000000 		.4byte	.LFE28-.LFB28
 3446 0715 01       		.uleb128 0x1
 3447 0716 9C       		.byte	0x9c
 3448 0717 10       		.uleb128 0x10
 3449 0718 DA050000 		.4byte	.LASF70
 3450 071c 01       		.byte	0x1
 3451 071d 3E02     		.2byte	0x23e
 3452 071f A2000000 		.4byte	0xa2
 3453 0723 00000000 		.4byte	.LFB29
 3454 0727 14000000 		.4byte	.LFE29-.LFB29
 3455 072b 01       		.uleb128 0x1
 3456 072c 9C       		.byte	0x9c
 3457 072d 11       		.uleb128 0x11
 3458 072e 3A020000 		.4byte	.LASF71
 3459 0732 01       		.byte	0x1
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 76


 3460 0733 4402     		.2byte	0x244
 3461 0735 A2000000 		.4byte	0xa2
 3462 0739 00000000 		.4byte	.LFB30
 3463 073d 20000000 		.4byte	.LFE30-.LFB30
 3464 0741 01       		.uleb128 0x1
 3465 0742 9C       		.byte	0x9c
 3466 0743 57070000 		.4byte	0x757
 3467 0747 16       		.uleb128 0x16
 3468 0748 72040000 		.4byte	.LASF72
 3469 074c 01       		.byte	0x1
 3470 074d 4402     		.2byte	0x244
 3471 074f A2000000 		.4byte	0xa2
 3472 0753 02       		.uleb128 0x2
 3473 0754 91       		.byte	0x91
 3474 0755 77       		.sleb128 -9
 3475 0756 00       		.byte	0
 3476 0757 11       		.uleb128 0x11
 3477 0758 8A020000 		.4byte	.LASF73
 3478 075c 01       		.byte	0x1
 3479 075d 4D02     		.2byte	0x24d
 3480 075f A2000000 		.4byte	0xa2
 3481 0763 00000000 		.4byte	.LFB31
 3482 0767 20000000 		.4byte	.LFE31-.LFB31
 3483 076b 01       		.uleb128 0x1
 3484 076c 9C       		.byte	0x9c
 3485 076d 81070000 		.4byte	0x781
 3486 0771 16       		.uleb128 0x16
 3487 0772 D4050000 		.4byte	.LASF74
 3488 0776 01       		.byte	0x1
 3489 0777 4D02     		.2byte	0x24d
 3490 0779 A2000000 		.4byte	0xa2
 3491 077d 02       		.uleb128 0x2
 3492 077e 91       		.byte	0x91
 3493 077f 77       		.sleb128 -9
 3494 0780 00       		.byte	0
 3495 0781 11       		.uleb128 0x11
 3496 0782 82040000 		.4byte	.LASF75
 3497 0786 01       		.byte	0x1
 3498 0787 5302     		.2byte	0x253
 3499 0789 A2000000 		.4byte	0xa2
 3500 078d 00000000 		.4byte	.LFB32
 3501 0791 20000000 		.4byte	.LFE32-.LFB32
 3502 0795 01       		.uleb128 0x1
 3503 0796 9C       		.byte	0x9c
 3504 0797 AA070000 		.4byte	0x7aa
 3505 079b 12       		.uleb128 0x12
 3506 079c 737200   		.ascii	"sr\000"
 3507 079f 01       		.byte	0x1
 3508 07a0 5302     		.2byte	0x253
 3509 07a2 A2000000 		.4byte	0xa2
 3510 07a6 02       		.uleb128 0x2
 3511 07a7 91       		.byte	0x91
 3512 07a8 77       		.sleb128 -9
 3513 07a9 00       		.byte	0
 3514 07aa 11       		.uleb128 0x11
 3515 07ab DB040000 		.4byte	.LASF76
 3516 07af 01       		.byte	0x1
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 77


 3517 07b0 5902     		.2byte	0x259
 3518 07b2 A2000000 		.4byte	0xa2
 3519 07b6 00000000 		.4byte	.LFB33
 3520 07ba 20000000 		.4byte	.LFE33-.LFB33
 3521 07be 01       		.uleb128 0x1
 3522 07bf 9C       		.byte	0x9c
 3523 07c0 D3070000 		.4byte	0x7d3
 3524 07c4 12       		.uleb128 0x12
 3525 07c5 707700   		.ascii	"pw\000"
 3526 07c8 01       		.byte	0x1
 3527 07c9 5902     		.2byte	0x259
 3528 07cb A2000000 		.4byte	0xa2
 3529 07cf 02       		.uleb128 0x2
 3530 07d0 91       		.byte	0x91
 3531 07d1 77       		.sleb128 -9
 3532 07d2 00       		.byte	0
 3533 07d3 11       		.uleb128 0x11
 3534 07d4 BD000000 		.4byte	.LASF77
 3535 07d8 01       		.byte	0x1
 3536 07d9 5F02     		.2byte	0x25f
 3537 07db A2000000 		.4byte	0xa2
 3538 07df 00000000 		.4byte	.LFB34
 3539 07e3 64000000 		.4byte	.LFE34-.LFB34
 3540 07e7 01       		.uleb128 0x1
 3541 07e8 9C       		.byte	0x9c
 3542 07e9 29080000 		.4byte	0x829
 3543 07ed 16       		.uleb128 0x16
 3544 07ee BC020000 		.4byte	.LASF78
 3545 07f2 01       		.byte	0x1
 3546 07f3 5F02     		.2byte	0x25f
 3547 07f5 A2000000 		.4byte	0xa2
 3548 07f9 02       		.uleb128 0x2
 3549 07fa 91       		.byte	0x91
 3550 07fb 6F       		.sleb128 -17
 3551 07fc 12       		.uleb128 0x12
 3552 07fd 706100   		.ascii	"pa\000"
 3553 0800 01       		.byte	0x1
 3554 0801 5F02     		.2byte	0x25f
 3555 0803 A2000000 		.4byte	0xa2
 3556 0807 02       		.uleb128 0x2
 3557 0808 91       		.byte	0x91
 3558 0809 6E       		.sleb128 -18
 3559 080a 13       		.uleb128 0x13
 3560 080b 67060000 		.4byte	.LASF29
 3561 080f 01       		.byte	0x1
 3562 0810 6202     		.2byte	0x262
 3563 0812 A2000000 		.4byte	0xa2
 3564 0816 02       		.uleb128 0x2
 3565 0817 91       		.byte	0x91
 3566 0818 77       		.sleb128 -9
 3567 0819 13       		.uleb128 0x13
 3568 081a AE050000 		.4byte	.LASF79
 3569 081e 01       		.byte	0x1
 3570 081f 6302     		.2byte	0x263
 3571 0821 A2000000 		.4byte	0xa2
 3572 0825 02       		.uleb128 0x2
 3573 0826 91       		.byte	0x91
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 78


 3574 0827 76       		.sleb128 -10
 3575 0828 00       		.byte	0
 3576 0829 11       		.uleb128 0x11
 3577 082a 79060000 		.4byte	.LASF80
 3578 082e 01       		.byte	0x1
 3579 082f 7802     		.2byte	0x278
 3580 0831 A2000000 		.4byte	0xa2
 3581 0835 00000000 		.4byte	.LFB35
 3582 0839 82000000 		.4byte	.LFE35-.LFB35
 3583 083d 01       		.uleb128 0x1
 3584 083e 9C       		.byte	0x9c
 3585 083f 62080000 		.4byte	0x862
 3586 0843 16       		.uleb128 0x16
 3587 0844 0E040000 		.4byte	.LASF81
 3588 0848 01       		.byte	0x1
 3589 0849 7802     		.2byte	0x278
 3590 084b A2000000 		.4byte	0xa2
 3591 084f 02       		.uleb128 0x2
 3592 0850 91       		.byte	0x91
 3593 0851 77       		.sleb128 -9
 3594 0852 12       		.uleb128 0x12
 3595 0853 6C656400 		.ascii	"led\000"
 3596 0857 01       		.byte	0x1
 3597 0858 7802     		.2byte	0x278
 3598 085a A2000000 		.4byte	0xa2
 3599 085e 02       		.uleb128 0x2
 3600 085f 91       		.byte	0x91
 3601 0860 76       		.sleb128 -10
 3602 0861 00       		.byte	0
 3603 0862 11       		.uleb128 0x11
 3604 0863 F6040000 		.4byte	.LASF82
 3605 0867 01       		.byte	0x1
 3606 0868 8F02     		.2byte	0x28f
 3607 086a A2000000 		.4byte	0xa2
 3608 086e 00000000 		.4byte	.LFB36
 3609 0872 2E000000 		.4byte	.LFE36-.LFB36
 3610 0876 01       		.uleb128 0x1
 3611 0877 9C       		.byte	0x9c
 3612 0878 8C080000 		.4byte	0x88c
 3613 087c 13       		.uleb128 0x13
 3614 087d 67060000 		.4byte	.LASF29
 3615 0881 01       		.byte	0x1
 3616 0882 9102     		.2byte	0x291
 3617 0884 A2000000 		.4byte	0xa2
 3618 0888 02       		.uleb128 0x2
 3619 0889 91       		.byte	0x91
 3620 088a 77       		.sleb128 -9
 3621 088b 00       		.byte	0
 3622 088c 11       		.uleb128 0x11
 3623 088d 21020000 		.4byte	.LASF83
 3624 0891 01       		.byte	0x1
 3625 0892 9D02     		.2byte	0x29d
 3626 0894 A2000000 		.4byte	0xa2
 3627 0898 00000000 		.4byte	.LFB37
 3628 089c 8C000000 		.4byte	.LFE37-.LFB37
 3629 08a0 01       		.uleb128 0x1
 3630 08a1 9C       		.byte	0x9c
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 79


 3631 08a2 E3080000 		.4byte	0x8e3
 3632 08a6 16       		.uleb128 0x16
 3633 08a7 86050000 		.4byte	.LASF84
 3634 08ab 01       		.byte	0x1
 3635 08ac 9D02     		.2byte	0x29d
 3636 08ae E3080000 		.4byte	0x8e3
 3637 08b2 02       		.uleb128 0x2
 3638 08b3 91       		.byte	0x91
 3639 08b4 64       		.sleb128 -28
 3640 08b5 13       		.uleb128 0x13
 3641 08b6 5D000000 		.4byte	.LASF85
 3642 08ba 01       		.byte	0x1
 3643 08bb 9F02     		.2byte	0x29f
 3644 08bd A2000000 		.4byte	0xa2
 3645 08c1 02       		.uleb128 0x2
 3646 08c2 91       		.byte	0x91
 3647 08c3 6E       		.sleb128 -18
 3648 08c4 13       		.uleb128 0x13
 3649 08c5 EA010000 		.4byte	.LASF86
 3650 08c9 01       		.byte	0x1
 3651 08ca 9F02     		.2byte	0x29f
 3652 08cc A2000000 		.4byte	0xa2
 3653 08d0 02       		.uleb128 0x2
 3654 08d1 91       		.byte	0x91
 3655 08d2 6D       		.sleb128 -19
 3656 08d3 13       		.uleb128 0x13
 3657 08d4 67060000 		.4byte	.LASF29
 3658 08d8 01       		.byte	0x1
 3659 08d9 A002     		.2byte	0x2a0
 3660 08db A2000000 		.4byte	0xa2
 3661 08df 02       		.uleb128 0x2
 3662 08e0 91       		.byte	0x91
 3663 08e1 6F       		.sleb128 -17
 3664 08e2 00       		.byte	0
 3665 08e3 05       		.uleb128 0x5
 3666 08e4 04       		.byte	0x4
 3667 08e5 C3000000 		.4byte	0xc3
 3668 08e9 11       		.uleb128 0x11
 3669 08ea 92050000 		.4byte	.LASF87
 3670 08ee 01       		.byte	0x1
 3671 08ef AD02     		.2byte	0x2ad
 3672 08f1 A2000000 		.4byte	0xa2
 3673 08f5 00000000 		.4byte	.LFB38
 3674 08f9 3E000000 		.4byte	.LFE38-.LFB38
 3675 08fd 01       		.uleb128 0x1
 3676 08fe 9C       		.byte	0x9c
 3677 08ff 40090000 		.4byte	0x940
 3678 0903 16       		.uleb128 0x16
 3679 0904 5D000000 		.4byte	.LASF85
 3680 0908 01       		.byte	0x1
 3681 0909 AD02     		.2byte	0x2ad
 3682 090b 40090000 		.4byte	0x940
 3683 090f 02       		.uleb128 0x2
 3684 0910 91       		.byte	0x91
 3685 0911 6C       		.sleb128 -20
 3686 0912 16       		.uleb128 0x16
 3687 0913 EA010000 		.4byte	.LASF86
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 80


 3688 0917 01       		.byte	0x1
 3689 0918 AD02     		.2byte	0x2ad
 3690 091a BE010000 		.4byte	0x1be
 3691 091e 02       		.uleb128 0x2
 3692 091f 91       		.byte	0x91
 3693 0920 68       		.sleb128 -24
 3694 0921 13       		.uleb128 0x13
 3695 0922 A9020000 		.4byte	.LASF28
 3696 0926 01       		.byte	0x1
 3697 0927 AF02     		.2byte	0x2af
 3698 0929 A2000000 		.4byte	0xa2
 3699 092d 02       		.uleb128 0x2
 3700 092e 91       		.byte	0x91
 3701 092f 76       		.sleb128 -10
 3702 0930 13       		.uleb128 0x13
 3703 0931 67060000 		.4byte	.LASF29
 3704 0935 01       		.byte	0x1
 3705 0936 B002     		.2byte	0x2b0
 3706 0938 A2000000 		.4byte	0xa2
 3707 093c 02       		.uleb128 0x2
 3708 093d 91       		.byte	0x91
 3709 093e 77       		.sleb128 -9
 3710 093f 00       		.byte	0
 3711 0940 05       		.uleb128 0x5
 3712 0941 04       		.byte	0x4
 3713 0942 97000000 		.4byte	0x97
 3714 0946 10       		.uleb128 0x10
 3715 0947 06060000 		.4byte	.LASF88
 3716 094b 01       		.byte	0x1
 3717 094c BA02     		.2byte	0x2ba
 3718 094e A2000000 		.4byte	0xa2
 3719 0952 00000000 		.4byte	.LFB39
 3720 0956 12000000 		.4byte	.LFE39-.LFB39
 3721 095a 01       		.uleb128 0x1
 3722 095b 9C       		.byte	0x9c
 3723 095c 11       		.uleb128 0x11
 3724 095d D5060000 		.4byte	.LASF89
 3725 0961 01       		.byte	0x1
 3726 0962 C302     		.2byte	0x2c3
 3727 0964 A2000000 		.4byte	0xa2
 3728 0968 00000000 		.4byte	.LFB40
 3729 096c 1A000000 		.4byte	.LFE40-.LFB40
 3730 0970 01       		.uleb128 0x1
 3731 0971 9C       		.byte	0x9c
 3732 0972 86090000 		.4byte	0x986
 3733 0976 16       		.uleb128 0x16
 3734 0977 13040000 		.4byte	.LASF90
 3735 097b 01       		.byte	0x1
 3736 097c C302     		.2byte	0x2c3
 3737 097e BE010000 		.4byte	0x1be
 3738 0982 02       		.uleb128 0x2
 3739 0983 91       		.byte	0x91
 3740 0984 74       		.sleb128 -12
 3741 0985 00       		.byte	0
 3742 0986 11       		.uleb128 0x11
 3743 0987 5D020000 		.4byte	.LASF91
 3744 098b 01       		.byte	0x1
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 81


 3745 098c CA02     		.2byte	0x2ca
 3746 098e A2000000 		.4byte	0xa2
 3747 0992 00000000 		.4byte	.LFB41
 3748 0996 1A000000 		.4byte	.LFE41-.LFB41
 3749 099a 01       		.uleb128 0x1
 3750 099b 9C       		.byte	0x9c
 3751 099c B0090000 		.4byte	0x9b0
 3752 09a0 16       		.uleb128 0x16
 3753 09a1 E3030000 		.4byte	.LASF92
 3754 09a5 01       		.byte	0x1
 3755 09a6 CA02     		.2byte	0x2ca
 3756 09a8 BE010000 		.4byte	0x1be
 3757 09ac 02       		.uleb128 0x2
 3758 09ad 91       		.byte	0x91
 3759 09ae 74       		.sleb128 -12
 3760 09af 00       		.byte	0
 3761 09b0 11       		.uleb128 0x11
 3762 09b1 E4000000 		.4byte	.LASF93
 3763 09b5 01       		.byte	0x1
 3764 09b6 D302     		.2byte	0x2d3
 3765 09b8 A2000000 		.4byte	0xa2
 3766 09bc 00000000 		.4byte	.LFB42
 3767 09c0 3A000000 		.4byte	.LFE42-.LFB42
 3768 09c4 01       		.uleb128 0x1
 3769 09c5 9C       		.byte	0x9c
 3770 09c6 070A0000 		.4byte	0xa07
 3771 09ca 16       		.uleb128 0x16
 3772 09cb 83030000 		.4byte	.LASF94
 3773 09cf 01       		.byte	0x1
 3774 09d0 D302     		.2byte	0x2d3
 3775 09d2 A2000000 		.4byte	0xa2
 3776 09d6 02       		.uleb128 0x2
 3777 09d7 91       		.byte	0x91
 3778 09d8 6F       		.sleb128 -17
 3779 09d9 16       		.uleb128 0x16
 3780 09da 5D060000 		.4byte	.LASF95
 3781 09de 01       		.byte	0x1
 3782 09df D302     		.2byte	0x2d3
 3783 09e1 BE010000 		.4byte	0x1be
 3784 09e5 02       		.uleb128 0x2
 3785 09e6 91       		.byte	0x91
 3786 09e7 68       		.sleb128 -24
 3787 09e8 13       		.uleb128 0x13
 3788 09e9 67060000 		.4byte	.LASF29
 3789 09ed 01       		.byte	0x1
 3790 09ee D502     		.2byte	0x2d5
 3791 09f0 A2000000 		.4byte	0xa2
 3792 09f4 02       		.uleb128 0x2
 3793 09f5 91       		.byte	0x91
 3794 09f6 77       		.sleb128 -9
 3795 09f7 13       		.uleb128 0x13
 3796 09f8 AE050000 		.4byte	.LASF79
 3797 09fc 01       		.byte	0x1
 3798 09fd D602     		.2byte	0x2d6
 3799 09ff A2000000 		.4byte	0xa2
 3800 0a03 02       		.uleb128 0x2
 3801 0a04 91       		.byte	0x91
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 82


 3802 0a05 76       		.sleb128 -10
 3803 0a06 00       		.byte	0
 3804 0a07 11       		.uleb128 0x11
 3805 0a08 5F050000 		.4byte	.LASF96
 3806 0a0c 01       		.byte	0x1
 3807 0a0d E302     		.2byte	0x2e3
 3808 0a0f A2000000 		.4byte	0xa2
 3809 0a13 00000000 		.4byte	.LFB43
 3810 0a17 68000000 		.4byte	.LFE43-.LFB43
 3811 0a1b 01       		.uleb128 0x1
 3812 0a1c 9C       		.byte	0x9c
 3813 0a1d 660A0000 		.4byte	0xa66
 3814 0a21 16       		.uleb128 0x16
 3815 0a22 A9000000 		.4byte	.LASF97
 3816 0a26 01       		.byte	0x1
 3817 0a27 E302     		.2byte	0x2e3
 3818 0a29 710A0000 		.4byte	0xa71
 3819 0a2d 02       		.uleb128 0x2
 3820 0a2e 91       		.byte	0x91
 3821 0a2f 54       		.sleb128 -44
 3822 0a30 13       		.uleb128 0x13
 3823 0a31 4A050000 		.4byte	.LASF98
 3824 0a35 01       		.byte	0x1
 3825 0a36 E502     		.2byte	0x2e5
 3826 0a38 770A0000 		.4byte	0xa77
 3827 0a3c 02       		.uleb128 0x2
 3828 0a3d 91       		.byte	0x91
 3829 0a3e 58       		.sleb128 -40
 3830 0a3f 13       		.uleb128 0x13
 3831 0a40 67060000 		.4byte	.LASF29
 3832 0a44 01       		.byte	0x1
 3833 0a45 FB02     		.2byte	0x2fb
 3834 0a47 A2000000 		.4byte	0xa2
 3835 0a4b 02       		.uleb128 0x2
 3836 0a4c 91       		.byte	0x91
 3837 0a4d 6F       		.sleb128 -17
 3838 0a4e 14       		.uleb128 0x14
 3839 0a4f 26000000 		.4byte	.LBB5
 3840 0a53 34000000 		.4byte	.LBE5-.LBB5
 3841 0a57 17       		.uleb128 0x17
 3842 0a58 6900     		.ascii	"i\000"
 3843 0a5a 01       		.byte	0x1
 3844 0a5b FC02     		.2byte	0x2fc
 3845 0a5d A2000000 		.4byte	0xa2
 3846 0a61 02       		.uleb128 0x2
 3847 0a62 91       		.byte	0x91
 3848 0a63 6E       		.sleb128 -18
 3849 0a64 00       		.byte	0
 3850 0a65 00       		.byte	0
 3851 0a66 18       		.uleb128 0x18
 3852 0a67 710A0000 		.4byte	0xa71
 3853 0a6b 19       		.uleb128 0x19
 3854 0a6c E6000000 		.4byte	0xe6
 3855 0a70 00       		.byte	0
 3856 0a71 05       		.uleb128 0x5
 3857 0a72 04       		.byte	0x4
 3858 0a73 660A0000 		.4byte	0xa66
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 83


 3859 0a77 0A       		.uleb128 0xa
 3860 0a78 A2000000 		.4byte	0xa2
 3861 0a7c 870A0000 		.4byte	0xa87
 3862 0a80 0B       		.uleb128 0xb
 3863 0a81 DF000000 		.4byte	0xdf
 3864 0a85 15       		.byte	0x15
 3865 0a86 00       		.byte	0
 3866 0a87 11       		.uleb128 0x11
 3867 0a88 0C010000 		.4byte	.LASF99
 3868 0a8c 01       		.byte	0x1
 3869 0a8d 0503     		.2byte	0x305
 3870 0a8f A2000000 		.4byte	0xa2
 3871 0a93 00000000 		.4byte	.LFB44
 3872 0a97 4C000000 		.4byte	.LFE44-.LFB44
 3873 0a9b 01       		.uleb128 0x1
 3874 0a9c 9C       		.byte	0x9c
 3875 0a9d F70A0000 		.4byte	0xaf7
 3876 0aa1 16       		.uleb128 0x16
 3877 0aa2 A9000000 		.4byte	.LASF97
 3878 0aa6 01       		.byte	0x1
 3879 0aa7 0503     		.2byte	0x305
 3880 0aa9 710A0000 		.4byte	0xa71
 3881 0aad 02       		.uleb128 0x2
 3882 0aae 91       		.byte	0x91
 3883 0aaf 5C       		.sleb128 -36
 3884 0ab0 16       		.uleb128 0x16
 3885 0ab1 83030000 		.4byte	.LASF94
 3886 0ab5 01       		.byte	0x1
 3887 0ab6 0503     		.2byte	0x305
 3888 0ab8 A2000000 		.4byte	0xa2
 3889 0abc 02       		.uleb128 0x2
 3890 0abd 91       		.byte	0x91
 3891 0abe 5B       		.sleb128 -37
 3892 0abf 13       		.uleb128 0x13
 3893 0ac0 B8060000 		.4byte	.LASF100
 3894 0ac4 01       		.byte	0x1
 3895 0ac5 0703     		.2byte	0x307
 3896 0ac7 A2000000 		.4byte	0xa2
 3897 0acb 02       		.uleb128 0x2
 3898 0acc 91       		.byte	0x91
 3899 0acd 76       		.sleb128 -10
 3900 0ace 13       		.uleb128 0x13
 3901 0acf 67060000 		.4byte	.LASF29
 3902 0ad3 01       		.byte	0x1
 3903 0ad4 0803     		.2byte	0x308
 3904 0ad6 A2000000 		.4byte	0xa2
 3905 0ada 02       		.uleb128 0x2
 3906 0adb 91       		.byte	0x91
 3907 0adc 77       		.sleb128 -9
 3908 0add 14       		.uleb128 0x14
 3909 0ade 24000000 		.4byte	.LBB6
 3910 0ae2 18000000 		.4byte	.LBE6-.LBB6
 3911 0ae6 17       		.uleb128 0x17
 3912 0ae7 6D736700 		.ascii	"msg\000"
 3913 0aeb 01       		.byte	0x1
 3914 0aec 0B03     		.2byte	0x30b
 3915 0aee F70A0000 		.4byte	0xaf7
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 84


 3916 0af2 02       		.uleb128 0x2
 3917 0af3 91       		.byte	0x91
 3918 0af4 60       		.sleb128 -32
 3919 0af5 00       		.byte	0
 3920 0af6 00       		.byte	0
 3921 0af7 0A       		.uleb128 0xa
 3922 0af8 D1000000 		.4byte	0xd1
 3923 0afc 070B0000 		.4byte	0xb07
 3924 0b00 0B       		.uleb128 0xb
 3925 0b01 DF000000 		.4byte	0xdf
 3926 0b05 13       		.byte	0x13
 3927 0b06 00       		.byte	0
 3928 0b07 1A       		.uleb128 0x1a
 3929 0b08 46060000 		.4byte	.LASF106
 3930 0b0c 01       		.byte	0x1
 3931 0b0d 1303     		.2byte	0x313
 3932 0b0f A2000000 		.4byte	0xa2
 3933 0b13 00000000 		.4byte	.LFB45
 3934 0b17 34000000 		.4byte	.LFE45-.LFB45
 3935 0b1b 01       		.uleb128 0x1
 3936 0b1c 9C       		.byte	0x9c
 3937 0b1d 4F0B0000 		.4byte	0xb4f
 3938 0b21 16       		.uleb128 0x16
 3939 0b22 83030000 		.4byte	.LASF94
 3940 0b26 01       		.byte	0x1
 3941 0b27 1303     		.2byte	0x313
 3942 0b29 A2000000 		.4byte	0xa2
 3943 0b2d 02       		.uleb128 0x2
 3944 0b2e 91       		.byte	0x91
 3945 0b2f 6F       		.sleb128 -17
 3946 0b30 16       		.uleb128 0x16
 3947 0b31 AE050000 		.4byte	.LASF79
 3948 0b35 01       		.byte	0x1
 3949 0b36 1303     		.2byte	0x313
 3950 0b38 A2000000 		.4byte	0xa2
 3951 0b3c 02       		.uleb128 0x2
 3952 0b3d 91       		.byte	0x91
 3953 0b3e 6E       		.sleb128 -18
 3954 0b3f 13       		.uleb128 0x13
 3955 0b40 67060000 		.4byte	.LASF29
 3956 0b44 01       		.byte	0x1
 3957 0b45 1503     		.2byte	0x315
 3958 0b47 A2000000 		.4byte	0xa2
 3959 0b4b 02       		.uleb128 0x2
 3960 0b4c 91       		.byte	0x91
 3961 0b4d 77       		.sleb128 -9
 3962 0b4e 00       		.byte	0
 3963 0b4f 1B       		.uleb128 0x1b
 3964 0b50 44030000 		.4byte	.LASF107
 3965 0b54 01       		.byte	0x1
 3966 0b55 1E03     		.2byte	0x31e
 3967 0b57 A2000000 		.4byte	0xa2
 3968 0b5b 00000000 		.4byte	.LFB46
 3969 0b5f 54000000 		.4byte	.LFE46-.LFB46
 3970 0b63 01       		.uleb128 0x1
 3971 0b64 9C       		.byte	0x9c
 3972 0b65 16       		.uleb128 0x16
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 85


 3973 0b66 83030000 		.4byte	.LASF94
 3974 0b6a 01       		.byte	0x1
 3975 0b6b 1E03     		.2byte	0x31e
 3976 0b6d A2000000 		.4byte	0xa2
 3977 0b71 02       		.uleb128 0x2
 3978 0b72 91       		.byte	0x91
 3979 0b73 6F       		.sleb128 -17
 3980 0b74 16       		.uleb128 0x16
 3981 0b75 CD010000 		.4byte	.LASF101
 3982 0b79 01       		.byte	0x1
 3983 0b7a 1E03     		.2byte	0x31e
 3984 0b7c A2000000 		.4byte	0xa2
 3985 0b80 02       		.uleb128 0x2
 3986 0b81 91       		.byte	0x91
 3987 0b82 6E       		.sleb128 -18
 3988 0b83 16       		.uleb128 0x16
 3989 0b84 80050000 		.4byte	.LASF102
 3990 0b88 01       		.byte	0x1
 3991 0b89 1E03     		.2byte	0x31e
 3992 0b8b A2000000 		.4byte	0xa2
 3993 0b8f 02       		.uleb128 0x2
 3994 0b90 91       		.byte	0x91
 3995 0b91 6D       		.sleb128 -19
 3996 0b92 13       		.uleb128 0x13
 3997 0b93 AE050000 		.4byte	.LASF79
 3998 0b97 01       		.byte	0x1
 3999 0b98 2003     		.2byte	0x320
 4000 0b9a A2000000 		.4byte	0xa2
 4001 0b9e 02       		.uleb128 0x2
 4002 0b9f 91       		.byte	0x91
 4003 0ba0 76       		.sleb128 -10
 4004 0ba1 13       		.uleb128 0x13
 4005 0ba2 67060000 		.4byte	.LASF29
 4006 0ba6 01       		.byte	0x1
 4007 0ba7 2103     		.2byte	0x321
 4008 0ba9 A2000000 		.4byte	0xa2
 4009 0bad 02       		.uleb128 0x2
 4010 0bae 91       		.byte	0x91
 4011 0baf 77       		.sleb128 -9
 4012 0bb0 00       		.byte	0
 4013 0bb1 00       		.byte	0
 4014              		.section	.debug_abbrev,"",%progbits
 4015              	.Ldebug_abbrev0:
 4016 0000 01       		.uleb128 0x1
 4017 0001 11       		.uleb128 0x11
 4018 0002 01       		.byte	0x1
 4019 0003 25       		.uleb128 0x25
 4020 0004 0E       		.uleb128 0xe
 4021 0005 13       		.uleb128 0x13
 4022 0006 0B       		.uleb128 0xb
 4023 0007 03       		.uleb128 0x3
 4024 0008 0E       		.uleb128 0xe
 4025 0009 1B       		.uleb128 0x1b
 4026 000a 0E       		.uleb128 0xe
 4027 000b 55       		.uleb128 0x55
 4028 000c 17       		.uleb128 0x17
 4029 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 86


 4030 000e 01       		.uleb128 0x1
 4031 000f 10       		.uleb128 0x10
 4032 0010 17       		.uleb128 0x17
 4033 0011 00       		.byte	0
 4034 0012 00       		.byte	0
 4035 0013 02       		.uleb128 0x2
 4036 0014 16       		.uleb128 0x16
 4037 0015 00       		.byte	0
 4038 0016 03       		.uleb128 0x3
 4039 0017 0E       		.uleb128 0xe
 4040 0018 3A       		.uleb128 0x3a
 4041 0019 0B       		.uleb128 0xb
 4042 001a 3B       		.uleb128 0x3b
 4043 001b 0B       		.uleb128 0xb
 4044 001c 49       		.uleb128 0x49
 4045 001d 13       		.uleb128 0x13
 4046 001e 00       		.byte	0
 4047 001f 00       		.byte	0
 4048 0020 03       		.uleb128 0x3
 4049 0021 24       		.uleb128 0x24
 4050 0022 00       		.byte	0
 4051 0023 0B       		.uleb128 0xb
 4052 0024 0B       		.uleb128 0xb
 4053 0025 3E       		.uleb128 0x3e
 4054 0026 0B       		.uleb128 0xb
 4055 0027 03       		.uleb128 0x3
 4056 0028 0E       		.uleb128 0xe
 4057 0029 00       		.byte	0
 4058 002a 00       		.byte	0
 4059 002b 04       		.uleb128 0x4
 4060 002c 24       		.uleb128 0x24
 4061 002d 00       		.byte	0
 4062 002e 0B       		.uleb128 0xb
 4063 002f 0B       		.uleb128 0xb
 4064 0030 3E       		.uleb128 0x3e
 4065 0031 0B       		.uleb128 0xb
 4066 0032 03       		.uleb128 0x3
 4067 0033 08       		.uleb128 0x8
 4068 0034 00       		.byte	0
 4069 0035 00       		.byte	0
 4070 0036 05       		.uleb128 0x5
 4071 0037 0F       		.uleb128 0xf
 4072 0038 00       		.byte	0
 4073 0039 0B       		.uleb128 0xb
 4074 003a 0B       		.uleb128 0xb
 4075 003b 49       		.uleb128 0x49
 4076 003c 13       		.uleb128 0x13
 4077 003d 00       		.byte	0
 4078 003e 00       		.byte	0
 4079 003f 06       		.uleb128 0x6
 4080 0040 26       		.uleb128 0x26
 4081 0041 00       		.byte	0
 4082 0042 49       		.uleb128 0x49
 4083 0043 13       		.uleb128 0x13
 4084 0044 00       		.byte	0
 4085 0045 00       		.byte	0
 4086 0046 07       		.uleb128 0x7
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 87


 4087 0047 13       		.uleb128 0x13
 4088 0048 01       		.byte	0x1
 4089 0049 0B       		.uleb128 0xb
 4090 004a 0B       		.uleb128 0xb
 4091 004b 3A       		.uleb128 0x3a
 4092 004c 0B       		.uleb128 0xb
 4093 004d 3B       		.uleb128 0x3b
 4094 004e 0B       		.uleb128 0xb
 4095 004f 01       		.uleb128 0x1
 4096 0050 13       		.uleb128 0x13
 4097 0051 00       		.byte	0
 4098 0052 00       		.byte	0
 4099 0053 08       		.uleb128 0x8
 4100 0054 0D       		.uleb128 0xd
 4101 0055 00       		.byte	0
 4102 0056 03       		.uleb128 0x3
 4103 0057 08       		.uleb128 0x8
 4104 0058 3A       		.uleb128 0x3a
 4105 0059 0B       		.uleb128 0xb
 4106 005a 3B       		.uleb128 0x3b
 4107 005b 0B       		.uleb128 0xb
 4108 005c 49       		.uleb128 0x49
 4109 005d 13       		.uleb128 0x13
 4110 005e 38       		.uleb128 0x38
 4111 005f 0B       		.uleb128 0xb
 4112 0060 00       		.byte	0
 4113 0061 00       		.byte	0
 4114 0062 09       		.uleb128 0x9
 4115 0063 0D       		.uleb128 0xd
 4116 0064 00       		.byte	0
 4117 0065 03       		.uleb128 0x3
 4118 0066 0E       		.uleb128 0xe
 4119 0067 3A       		.uleb128 0x3a
 4120 0068 0B       		.uleb128 0xb
 4121 0069 3B       		.uleb128 0x3b
 4122 006a 0B       		.uleb128 0xb
 4123 006b 49       		.uleb128 0x49
 4124 006c 13       		.uleb128 0x13
 4125 006d 38       		.uleb128 0x38
 4126 006e 0B       		.uleb128 0xb
 4127 006f 00       		.byte	0
 4128 0070 00       		.byte	0
 4129 0071 0A       		.uleb128 0xa
 4130 0072 01       		.uleb128 0x1
 4131 0073 01       		.byte	0x1
 4132 0074 49       		.uleb128 0x49
 4133 0075 13       		.uleb128 0x13
 4134 0076 01       		.uleb128 0x1
 4135 0077 13       		.uleb128 0x13
 4136 0078 00       		.byte	0
 4137 0079 00       		.byte	0
 4138 007a 0B       		.uleb128 0xb
 4139 007b 21       		.uleb128 0x21
 4140 007c 00       		.byte	0
 4141 007d 49       		.uleb128 0x49
 4142 007e 13       		.uleb128 0x13
 4143 007f 2F       		.uleb128 0x2f
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 88


 4144 0080 0B       		.uleb128 0xb
 4145 0081 00       		.byte	0
 4146 0082 00       		.byte	0
 4147 0083 0C       		.uleb128 0xc
 4148 0084 2E       		.uleb128 0x2e
 4149 0085 00       		.byte	0
 4150 0086 3F       		.uleb128 0x3f
 4151 0087 19       		.uleb128 0x19
 4152 0088 03       		.uleb128 0x3
 4153 0089 0E       		.uleb128 0xe
 4154 008a 3A       		.uleb128 0x3a
 4155 008b 0B       		.uleb128 0xb
 4156 008c 3B       		.uleb128 0x3b
 4157 008d 0B       		.uleb128 0xb
 4158 008e 27       		.uleb128 0x27
 4159 008f 19       		.uleb128 0x19
 4160 0090 49       		.uleb128 0x49
 4161 0091 13       		.uleb128 0x13
 4162 0092 11       		.uleb128 0x11
 4163 0093 01       		.uleb128 0x1
 4164 0094 12       		.uleb128 0x12
 4165 0095 06       		.uleb128 0x6
 4166 0096 40       		.uleb128 0x40
 4167 0097 18       		.uleb128 0x18
 4168 0098 9642     		.uleb128 0x2116
 4169 009a 19       		.uleb128 0x19
 4170 009b 00       		.byte	0
 4171 009c 00       		.byte	0
 4172 009d 0D       		.uleb128 0xd
 4173 009e 2E       		.uleb128 0x2e
 4174 009f 01       		.byte	0x1
 4175 00a0 3F       		.uleb128 0x3f
 4176 00a1 19       		.uleb128 0x19
 4177 00a2 03       		.uleb128 0x3
 4178 00a3 0E       		.uleb128 0xe
 4179 00a4 3A       		.uleb128 0x3a
 4180 00a5 0B       		.uleb128 0xb
 4181 00a6 3B       		.uleb128 0x3b
 4182 00a7 0B       		.uleb128 0xb
 4183 00a8 27       		.uleb128 0x27
 4184 00a9 19       		.uleb128 0x19
 4185 00aa 49       		.uleb128 0x49
 4186 00ab 13       		.uleb128 0x13
 4187 00ac 11       		.uleb128 0x11
 4188 00ad 01       		.uleb128 0x1
 4189 00ae 12       		.uleb128 0x12
 4190 00af 06       		.uleb128 0x6
 4191 00b0 40       		.uleb128 0x40
 4192 00b1 18       		.uleb128 0x18
 4193 00b2 9642     		.uleb128 0x2116
 4194 00b4 19       		.uleb128 0x19
 4195 00b5 01       		.uleb128 0x1
 4196 00b6 13       		.uleb128 0x13
 4197 00b7 00       		.byte	0
 4198 00b8 00       		.byte	0
 4199 00b9 0E       		.uleb128 0xe
 4200 00ba 05       		.uleb128 0x5
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 89


 4201 00bb 00       		.byte	0
 4202 00bc 03       		.uleb128 0x3
 4203 00bd 0E       		.uleb128 0xe
 4204 00be 3A       		.uleb128 0x3a
 4205 00bf 0B       		.uleb128 0xb
 4206 00c0 3B       		.uleb128 0x3b
 4207 00c1 0B       		.uleb128 0xb
 4208 00c2 49       		.uleb128 0x49
 4209 00c3 13       		.uleb128 0x13
 4210 00c4 02       		.uleb128 0x2
 4211 00c5 18       		.uleb128 0x18
 4212 00c6 00       		.byte	0
 4213 00c7 00       		.byte	0
 4214 00c8 0F       		.uleb128 0xf
 4215 00c9 34       		.uleb128 0x34
 4216 00ca 00       		.byte	0
 4217 00cb 03       		.uleb128 0x3
 4218 00cc 0E       		.uleb128 0xe
 4219 00cd 3A       		.uleb128 0x3a
 4220 00ce 0B       		.uleb128 0xb
 4221 00cf 3B       		.uleb128 0x3b
 4222 00d0 0B       		.uleb128 0xb
 4223 00d1 49       		.uleb128 0x49
 4224 00d2 13       		.uleb128 0x13
 4225 00d3 02       		.uleb128 0x2
 4226 00d4 18       		.uleb128 0x18
 4227 00d5 00       		.byte	0
 4228 00d6 00       		.byte	0
 4229 00d7 10       		.uleb128 0x10
 4230 00d8 2E       		.uleb128 0x2e
 4231 00d9 00       		.byte	0
 4232 00da 3F       		.uleb128 0x3f
 4233 00db 19       		.uleb128 0x19
 4234 00dc 03       		.uleb128 0x3
 4235 00dd 0E       		.uleb128 0xe
 4236 00de 3A       		.uleb128 0x3a
 4237 00df 0B       		.uleb128 0xb
 4238 00e0 3B       		.uleb128 0x3b
 4239 00e1 05       		.uleb128 0x5
 4240 00e2 27       		.uleb128 0x27
 4241 00e3 19       		.uleb128 0x19
 4242 00e4 49       		.uleb128 0x49
 4243 00e5 13       		.uleb128 0x13
 4244 00e6 11       		.uleb128 0x11
 4245 00e7 01       		.uleb128 0x1
 4246 00e8 12       		.uleb128 0x12
 4247 00e9 06       		.uleb128 0x6
 4248 00ea 40       		.uleb128 0x40
 4249 00eb 18       		.uleb128 0x18
 4250 00ec 9642     		.uleb128 0x2116
 4251 00ee 19       		.uleb128 0x19
 4252 00ef 00       		.byte	0
 4253 00f0 00       		.byte	0
 4254 00f1 11       		.uleb128 0x11
 4255 00f2 2E       		.uleb128 0x2e
 4256 00f3 01       		.byte	0x1
 4257 00f4 3F       		.uleb128 0x3f
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 90


 4258 00f5 19       		.uleb128 0x19
 4259 00f6 03       		.uleb128 0x3
 4260 00f7 0E       		.uleb128 0xe
 4261 00f8 3A       		.uleb128 0x3a
 4262 00f9 0B       		.uleb128 0xb
 4263 00fa 3B       		.uleb128 0x3b
 4264 00fb 05       		.uleb128 0x5
 4265 00fc 27       		.uleb128 0x27
 4266 00fd 19       		.uleb128 0x19
 4267 00fe 49       		.uleb128 0x49
 4268 00ff 13       		.uleb128 0x13
 4269 0100 11       		.uleb128 0x11
 4270 0101 01       		.uleb128 0x1
 4271 0102 12       		.uleb128 0x12
 4272 0103 06       		.uleb128 0x6
 4273 0104 40       		.uleb128 0x40
 4274 0105 18       		.uleb128 0x18
 4275 0106 9642     		.uleb128 0x2116
 4276 0108 19       		.uleb128 0x19
 4277 0109 01       		.uleb128 0x1
 4278 010a 13       		.uleb128 0x13
 4279 010b 00       		.byte	0
 4280 010c 00       		.byte	0
 4281 010d 12       		.uleb128 0x12
 4282 010e 05       		.uleb128 0x5
 4283 010f 00       		.byte	0
 4284 0110 03       		.uleb128 0x3
 4285 0111 08       		.uleb128 0x8
 4286 0112 3A       		.uleb128 0x3a
 4287 0113 0B       		.uleb128 0xb
 4288 0114 3B       		.uleb128 0x3b
 4289 0115 05       		.uleb128 0x5
 4290 0116 49       		.uleb128 0x49
 4291 0117 13       		.uleb128 0x13
 4292 0118 02       		.uleb128 0x2
 4293 0119 18       		.uleb128 0x18
 4294 011a 00       		.byte	0
 4295 011b 00       		.byte	0
 4296 011c 13       		.uleb128 0x13
 4297 011d 34       		.uleb128 0x34
 4298 011e 00       		.byte	0
 4299 011f 03       		.uleb128 0x3
 4300 0120 0E       		.uleb128 0xe
 4301 0121 3A       		.uleb128 0x3a
 4302 0122 0B       		.uleb128 0xb
 4303 0123 3B       		.uleb128 0x3b
 4304 0124 05       		.uleb128 0x5
 4305 0125 49       		.uleb128 0x49
 4306 0126 13       		.uleb128 0x13
 4307 0127 02       		.uleb128 0x2
 4308 0128 18       		.uleb128 0x18
 4309 0129 00       		.byte	0
 4310 012a 00       		.byte	0
 4311 012b 14       		.uleb128 0x14
 4312 012c 0B       		.uleb128 0xb
 4313 012d 01       		.byte	0x1
 4314 012e 11       		.uleb128 0x11
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 91


 4315 012f 01       		.uleb128 0x1
 4316 0130 12       		.uleb128 0x12
 4317 0131 06       		.uleb128 0x6
 4318 0132 00       		.byte	0
 4319 0133 00       		.byte	0
 4320 0134 15       		.uleb128 0x15
 4321 0135 21       		.uleb128 0x21
 4322 0136 00       		.byte	0
 4323 0137 49       		.uleb128 0x49
 4324 0138 13       		.uleb128 0x13
 4325 0139 2F       		.uleb128 0x2f
 4326 013a 18       		.uleb128 0x18
 4327 013b 00       		.byte	0
 4328 013c 00       		.byte	0
 4329 013d 16       		.uleb128 0x16
 4330 013e 05       		.uleb128 0x5
 4331 013f 00       		.byte	0
 4332 0140 03       		.uleb128 0x3
 4333 0141 0E       		.uleb128 0xe
 4334 0142 3A       		.uleb128 0x3a
 4335 0143 0B       		.uleb128 0xb
 4336 0144 3B       		.uleb128 0x3b
 4337 0145 05       		.uleb128 0x5
 4338 0146 49       		.uleb128 0x49
 4339 0147 13       		.uleb128 0x13
 4340 0148 02       		.uleb128 0x2
 4341 0149 18       		.uleb128 0x18
 4342 014a 00       		.byte	0
 4343 014b 00       		.byte	0
 4344 014c 17       		.uleb128 0x17
 4345 014d 34       		.uleb128 0x34
 4346 014e 00       		.byte	0
 4347 014f 03       		.uleb128 0x3
 4348 0150 08       		.uleb128 0x8
 4349 0151 3A       		.uleb128 0x3a
 4350 0152 0B       		.uleb128 0xb
 4351 0153 3B       		.uleb128 0x3b
 4352 0154 05       		.uleb128 0x5
 4353 0155 49       		.uleb128 0x49
 4354 0156 13       		.uleb128 0x13
 4355 0157 02       		.uleb128 0x2
 4356 0158 18       		.uleb128 0x18
 4357 0159 00       		.byte	0
 4358 015a 00       		.byte	0
 4359 015b 18       		.uleb128 0x18
 4360 015c 15       		.uleb128 0x15
 4361 015d 01       		.byte	0x1
 4362 015e 27       		.uleb128 0x27
 4363 015f 19       		.uleb128 0x19
 4364 0160 01       		.uleb128 0x1
 4365 0161 13       		.uleb128 0x13
 4366 0162 00       		.byte	0
 4367 0163 00       		.byte	0
 4368 0164 19       		.uleb128 0x19
 4369 0165 05       		.uleb128 0x5
 4370 0166 00       		.byte	0
 4371 0167 49       		.uleb128 0x49
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 92


 4372 0168 13       		.uleb128 0x13
 4373 0169 00       		.byte	0
 4374 016a 00       		.byte	0
 4375 016b 1A       		.uleb128 0x1a
 4376 016c 2E       		.uleb128 0x2e
 4377 016d 01       		.byte	0x1
 4378 016e 03       		.uleb128 0x3
 4379 016f 0E       		.uleb128 0xe
 4380 0170 3A       		.uleb128 0x3a
 4381 0171 0B       		.uleb128 0xb
 4382 0172 3B       		.uleb128 0x3b
 4383 0173 05       		.uleb128 0x5
 4384 0174 27       		.uleb128 0x27
 4385 0175 19       		.uleb128 0x19
 4386 0176 49       		.uleb128 0x49
 4387 0177 13       		.uleb128 0x13
 4388 0178 11       		.uleb128 0x11
 4389 0179 01       		.uleb128 0x1
 4390 017a 12       		.uleb128 0x12
 4391 017b 06       		.uleb128 0x6
 4392 017c 40       		.uleb128 0x40
 4393 017d 18       		.uleb128 0x18
 4394 017e 9642     		.uleb128 0x2116
 4395 0180 19       		.uleb128 0x19
 4396 0181 01       		.uleb128 0x1
 4397 0182 13       		.uleb128 0x13
 4398 0183 00       		.byte	0
 4399 0184 00       		.byte	0
 4400 0185 1B       		.uleb128 0x1b
 4401 0186 2E       		.uleb128 0x2e
 4402 0187 01       		.byte	0x1
 4403 0188 03       		.uleb128 0x3
 4404 0189 0E       		.uleb128 0xe
 4405 018a 3A       		.uleb128 0x3a
 4406 018b 0B       		.uleb128 0xb
 4407 018c 3B       		.uleb128 0x3b
 4408 018d 05       		.uleb128 0x5
 4409 018e 27       		.uleb128 0x27
 4410 018f 19       		.uleb128 0x19
 4411 0190 49       		.uleb128 0x49
 4412 0191 13       		.uleb128 0x13
 4413 0192 11       		.uleb128 0x11
 4414 0193 01       		.uleb128 0x1
 4415 0194 12       		.uleb128 0x12
 4416 0195 06       		.uleb128 0x6
 4417 0196 40       		.uleb128 0x40
 4418 0197 18       		.uleb128 0x18
 4419 0198 9642     		.uleb128 0x2116
 4420 019a 19       		.uleb128 0x19
 4421 019b 00       		.byte	0
 4422 019c 00       		.byte	0
 4423 019d 00       		.byte	0
 4424              		.section	.debug_aranges,"",%progbits
 4425 0000 84010000 		.4byte	0x184
 4426 0004 0200     		.2byte	0x2
 4427 0006 00000000 		.4byte	.Ldebug_info0
 4428 000a 04       		.byte	0x4
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 93


 4429 000b 00       		.byte	0
 4430 000c 0000     		.2byte	0
 4431 000e 0000     		.2byte	0
 4432 0010 00000000 		.4byte	.LFB1
 4433 0014 12000000 		.4byte	.LFE1-.LFB1
 4434 0018 00000000 		.4byte	.LFB2
 4435 001c 1A000000 		.4byte	.LFE2-.LFB2
 4436 0020 00000000 		.4byte	.LFB3
 4437 0024 2E000000 		.4byte	.LFE3-.LFB3
 4438 0028 00000000 		.4byte	.LFB4
 4439 002c 2E000000 		.4byte	.LFE4-.LFB4
 4440 0030 00000000 		.4byte	.LFB5
 4441 0034 2E000000 		.4byte	.LFE5-.LFB5
 4442 0038 00000000 		.4byte	.LFB6
 4443 003c 2E000000 		.4byte	.LFE6-.LFB6
 4444 0040 00000000 		.4byte	.LFB7
 4445 0044 2E000000 		.4byte	.LFE7-.LFB7
 4446 0048 00000000 		.4byte	.LFB8
 4447 004c 14000000 		.4byte	.LFE8-.LFB8
 4448 0050 00000000 		.4byte	.LFB9
 4449 0054 14000000 		.4byte	.LFE9-.LFB9
 4450 0058 00000000 		.4byte	.LFB10
 4451 005c 14000000 		.4byte	.LFE10-.LFB10
 4452 0060 00000000 		.4byte	.LFB11
 4453 0064 14000000 		.4byte	.LFE11-.LFB11
 4454 0068 00000000 		.4byte	.LFB12
 4455 006c 14000000 		.4byte	.LFE12-.LFB12
 4456 0070 00000000 		.4byte	.LFB13
 4457 0074 14000000 		.4byte	.LFE13-.LFB13
 4458 0078 00000000 		.4byte	.LFB14
 4459 007c 14000000 		.4byte	.LFE14-.LFB14
 4460 0080 00000000 		.4byte	.LFB15
 4461 0084 14000000 		.4byte	.LFE15-.LFB15
 4462 0088 00000000 		.4byte	.LFB16
 4463 008c 1A000000 		.4byte	.LFE16-.LFB16
 4464 0090 00000000 		.4byte	.LFB17
 4465 0094 1A000000 		.4byte	.LFE17-.LFB17
 4466 0098 00000000 		.4byte	.LFB18
 4467 009c 1A000000 		.4byte	.LFE18-.LFB18
 4468 00a0 00000000 		.4byte	.LFB19
 4469 00a4 C6000000 		.4byte	.LFE19-.LFB19
 4470 00a8 00000000 		.4byte	.LFB20
 4471 00ac 46000000 		.4byte	.LFE20-.LFB20
 4472 00b0 00000000 		.4byte	.LFB21
 4473 00b4 3A010000 		.4byte	.LFE21-.LFB21
 4474 00b8 00000000 		.4byte	.LFB22
 4475 00bc C2010000 		.4byte	.LFE22-.LFB22
 4476 00c0 00000000 		.4byte	.LFB23
 4477 00c4 20000000 		.4byte	.LFE23-.LFB23
 4478 00c8 00000000 		.4byte	.LFB24
 4479 00cc 14000000 		.4byte	.LFE24-.LFB24
 4480 00d0 00000000 		.4byte	.LFB25
 4481 00d4 14000000 		.4byte	.LFE25-.LFB25
 4482 00d8 00000000 		.4byte	.LFB26
 4483 00dc 26000000 		.4byte	.LFE26-.LFB26
 4484 00e0 00000000 		.4byte	.LFB27
 4485 00e4 14000000 		.4byte	.LFE27-.LFB27
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 94


 4486 00e8 00000000 		.4byte	.LFB28
 4487 00ec 14000000 		.4byte	.LFE28-.LFB28
 4488 00f0 00000000 		.4byte	.LFB29
 4489 00f4 14000000 		.4byte	.LFE29-.LFB29
 4490 00f8 00000000 		.4byte	.LFB30
 4491 00fc 20000000 		.4byte	.LFE30-.LFB30
 4492 0100 00000000 		.4byte	.LFB31
 4493 0104 20000000 		.4byte	.LFE31-.LFB31
 4494 0108 00000000 		.4byte	.LFB32
 4495 010c 20000000 		.4byte	.LFE32-.LFB32
 4496 0110 00000000 		.4byte	.LFB33
 4497 0114 20000000 		.4byte	.LFE33-.LFB33
 4498 0118 00000000 		.4byte	.LFB34
 4499 011c 64000000 		.4byte	.LFE34-.LFB34
 4500 0120 00000000 		.4byte	.LFB35
 4501 0124 82000000 		.4byte	.LFE35-.LFB35
 4502 0128 00000000 		.4byte	.LFB36
 4503 012c 2E000000 		.4byte	.LFE36-.LFB36
 4504 0130 00000000 		.4byte	.LFB37
 4505 0134 8C000000 		.4byte	.LFE37-.LFB37
 4506 0138 00000000 		.4byte	.LFB38
 4507 013c 3E000000 		.4byte	.LFE38-.LFB38
 4508 0140 00000000 		.4byte	.LFB39
 4509 0144 12000000 		.4byte	.LFE39-.LFB39
 4510 0148 00000000 		.4byte	.LFB40
 4511 014c 1A000000 		.4byte	.LFE40-.LFB40
 4512 0150 00000000 		.4byte	.LFB41
 4513 0154 1A000000 		.4byte	.LFE41-.LFB41
 4514 0158 00000000 		.4byte	.LFB42
 4515 015c 3A000000 		.4byte	.LFE42-.LFB42
 4516 0160 00000000 		.4byte	.LFB43
 4517 0164 68000000 		.4byte	.LFE43-.LFB43
 4518 0168 00000000 		.4byte	.LFB44
 4519 016c 4C000000 		.4byte	.LFE44-.LFB44
 4520 0170 00000000 		.4byte	.LFB45
 4521 0174 34000000 		.4byte	.LFE45-.LFB45
 4522 0178 00000000 		.4byte	.LFB46
 4523 017c 54000000 		.4byte	.LFE46-.LFB46
 4524 0180 00000000 		.4byte	0
 4525 0184 00000000 		.4byte	0
 4526              		.section	.debug_ranges,"",%progbits
 4527              	.Ldebug_ranges0:
 4528 0000 00000000 		.4byte	.LFB1
 4529 0004 12000000 		.4byte	.LFE1
 4530 0008 00000000 		.4byte	.LFB2
 4531 000c 1A000000 		.4byte	.LFE2
 4532 0010 00000000 		.4byte	.LFB3
 4533 0014 2E000000 		.4byte	.LFE3
 4534 0018 00000000 		.4byte	.LFB4
 4535 001c 2E000000 		.4byte	.LFE4
 4536 0020 00000000 		.4byte	.LFB5
 4537 0024 2E000000 		.4byte	.LFE5
 4538 0028 00000000 		.4byte	.LFB6
 4539 002c 2E000000 		.4byte	.LFE6
 4540 0030 00000000 		.4byte	.LFB7
 4541 0034 2E000000 		.4byte	.LFE7
 4542 0038 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 95


 4543 003c 14000000 		.4byte	.LFE8
 4544 0040 00000000 		.4byte	.LFB9
 4545 0044 14000000 		.4byte	.LFE9
 4546 0048 00000000 		.4byte	.LFB10
 4547 004c 14000000 		.4byte	.LFE10
 4548 0050 00000000 		.4byte	.LFB11
 4549 0054 14000000 		.4byte	.LFE11
 4550 0058 00000000 		.4byte	.LFB12
 4551 005c 14000000 		.4byte	.LFE12
 4552 0060 00000000 		.4byte	.LFB13
 4553 0064 14000000 		.4byte	.LFE13
 4554 0068 00000000 		.4byte	.LFB14
 4555 006c 14000000 		.4byte	.LFE14
 4556 0070 00000000 		.4byte	.LFB15
 4557 0074 14000000 		.4byte	.LFE15
 4558 0078 00000000 		.4byte	.LFB16
 4559 007c 1A000000 		.4byte	.LFE16
 4560 0080 00000000 		.4byte	.LFB17
 4561 0084 1A000000 		.4byte	.LFE17
 4562 0088 00000000 		.4byte	.LFB18
 4563 008c 1A000000 		.4byte	.LFE18
 4564 0090 00000000 		.4byte	.LFB19
 4565 0094 C6000000 		.4byte	.LFE19
 4566 0098 00000000 		.4byte	.LFB20
 4567 009c 46000000 		.4byte	.LFE20
 4568 00a0 00000000 		.4byte	.LFB21
 4569 00a4 3A010000 		.4byte	.LFE21
 4570 00a8 00000000 		.4byte	.LFB22
 4571 00ac C2010000 		.4byte	.LFE22
 4572 00b0 00000000 		.4byte	.LFB23
 4573 00b4 20000000 		.4byte	.LFE23
 4574 00b8 00000000 		.4byte	.LFB24
 4575 00bc 14000000 		.4byte	.LFE24
 4576 00c0 00000000 		.4byte	.LFB25
 4577 00c4 14000000 		.4byte	.LFE25
 4578 00c8 00000000 		.4byte	.LFB26
 4579 00cc 26000000 		.4byte	.LFE26
 4580 00d0 00000000 		.4byte	.LFB27
 4581 00d4 14000000 		.4byte	.LFE27
 4582 00d8 00000000 		.4byte	.LFB28
 4583 00dc 14000000 		.4byte	.LFE28
 4584 00e0 00000000 		.4byte	.LFB29
 4585 00e4 14000000 		.4byte	.LFE29
 4586 00e8 00000000 		.4byte	.LFB30
 4587 00ec 20000000 		.4byte	.LFE30
 4588 00f0 00000000 		.4byte	.LFB31
 4589 00f4 20000000 		.4byte	.LFE31
 4590 00f8 00000000 		.4byte	.LFB32
 4591 00fc 20000000 		.4byte	.LFE32
 4592 0100 00000000 		.4byte	.LFB33
 4593 0104 20000000 		.4byte	.LFE33
 4594 0108 00000000 		.4byte	.LFB34
 4595 010c 64000000 		.4byte	.LFE34
 4596 0110 00000000 		.4byte	.LFB35
 4597 0114 82000000 		.4byte	.LFE35
 4598 0118 00000000 		.4byte	.LFB36
 4599 011c 2E000000 		.4byte	.LFE36
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 96


 4600 0120 00000000 		.4byte	.LFB37
 4601 0124 8C000000 		.4byte	.LFE37
 4602 0128 00000000 		.4byte	.LFB38
 4603 012c 3E000000 		.4byte	.LFE38
 4604 0130 00000000 		.4byte	.LFB39
 4605 0134 12000000 		.4byte	.LFE39
 4606 0138 00000000 		.4byte	.LFB40
 4607 013c 1A000000 		.4byte	.LFE40
 4608 0140 00000000 		.4byte	.LFB41
 4609 0144 1A000000 		.4byte	.LFE41
 4610 0148 00000000 		.4byte	.LFB42
 4611 014c 3A000000 		.4byte	.LFE42
 4612 0150 00000000 		.4byte	.LFB43
 4613 0154 68000000 		.4byte	.LFE43
 4614 0158 00000000 		.4byte	.LFB44
 4615 015c 4C000000 		.4byte	.LFE44
 4616 0160 00000000 		.4byte	.LFB45
 4617 0164 34000000 		.4byte	.LFE45
 4618 0168 00000000 		.4byte	.LFB46
 4619 016c 54000000 		.4byte	.LFE46
 4620 0170 00000000 		.4byte	0
 4621 0174 00000000 		.4byte	0
 4622              		.section	.debug_line,"",%progbits
 4623              	.Ldebug_line0:
 4624 0000 24050000 		.section	.debug_str,"MS",%progbits,1
 4624      02002C01 
 4624      00000201 
 4624      FB0E0D00 
 4624      01010101 
 4625              	.LASF69:
 4626 0000 4D415833 		.ascii	"MAX30101_WakeUp\000"
 4626      30313031 
 4626      5F57616B 
 4626      65557000 
 4627              	.LASF60:
 4628 0010 74656D70 		.ascii	"tempLong\000"
 4628      4C6F6E67 
 4628      00
 4629              	.LASF30:
 4630 0019 4D415833 		.ascii	"MAX30101_IsFIFOAFull\000"
 4630      30313031 
 4630      5F497346 
 4630      49464F41 
 4630      46756C6C 
 4631              	.LASF59:
 4632 002e 74656D70 		.ascii	"temp_bytes\000"
 4632      5F627974 
 4632      657300
 4633              	.LASF40:
 4634 0039 4D415833 		.ascii	"MAX30101_DisableFIFOAFullInt\000"
 4634      30313031 
 4634      5F446973 
 4634      61626C65 
 4634      4649464F 
 4635              	.LASF13:
 4636 0056 696E7438 		.ascii	"int8_t\000"
 4636      5F7400
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 97


 4637              	.LASF85:
 4638 005d 696E7465 		.ascii	"integer\000"
 4638      67657200 
 4639              	.LASF105:
 4640 0065 443A5C50 		.ascii	"D:\\Polimi\\LAB\\PROJECT\\Pulseoximeter\\Project_LT"
 4640      6F6C696D 
 4640      695C4C41 
 4640      425C5052 
 4640      4F4A4543 
 4641 0093 4542535C 		.ascii	"EBS\\Saturimetro.cydsn\000"
 4641      53617475 
 4641      72696D65 
 4641      74726F2E 
 4641      63796473 
 4642              	.LASF97:
 4643 00a9 7072696E 		.ascii	"print_fun\000"
 4643      745F6675 
 4643      6E00
 4644              	.LASF4:
 4645 00b3 73686F72 		.ascii	"short int\000"
 4645      7420696E 
 4645      7400
 4646              	.LASF77:
 4647 00bd 4D415833 		.ascii	"MAX30101_SetLEDPulseAmplitude\000"
 4647      30313031 
 4647      5F536574 
 4647      4C454450 
 4647      756C7365 
 4648              	.LASF21:
 4649 00db 73697A65 		.ascii	"sizetype\000"
 4649      74797065 
 4649      00
 4650              	.LASF93:
 4651 00e4 4D415833 		.ascii	"MAX30101_ReadRegister\000"
 4651      30313031 
 4651      5F526561 
 4651      64526567 
 4651      69737465 
 4652              	.LASF68:
 4653 00fa 4D415833 		.ascii	"MAX30101_Shutdown\000"
 4653      30313031 
 4653      5F536875 
 4653      74646F77 
 4653      6E00
 4654              	.LASF99:
 4655 010c 4D415833 		.ascii	"MAX30101_PrintRegister\000"
 4655      30313031 
 4655      5F507269 
 4655      6E745265 
 4655      67697374 
 4656              	.LASF103:
 4657 0123 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4657      43313120 
 4657      352E342E 
 4657      31203230 
 4657      31363036 
 4658 0156 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 98


 4658      20726576 
 4658      6973696F 
 4658      6E203233 
 4658      37373135 
 4659 0189 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4659      66756E63 
 4659      74696F6E 
 4659      2D736563 
 4659      74696F6E 
 4660              	.LASF36:
 4661 01b1 4D415833 		.ascii	"MAX30101_EnableFIFOAFullInt\000"
 4661      30313031 
 4661      5F456E61 
 4661      626C6546 
 4661      49464F41 
 4662              	.LASF101:
 4663 01cd 6D61736B 		.ascii	"mask\000"
 4663      00
 4664              	.LASF49:
 4665 01d2 63757272 		.ascii	"current_mode\000"
 4665      656E745F 
 4665      6D6F6465 
 4665      00
 4666              	.LASF5:
 4667 01df 5F5F7569 		.ascii	"__uint16_t\000"
 4667      6E743136 
 4667      5F7400
 4668              	.LASF86:
 4669 01ea 66726163 		.ascii	"frac\000"
 4669      00
 4670              	.LASF44:
 4671 01ef 4D415833 		.ascii	"MAX30101_ReadWritePointer\000"
 4671      30313031 
 4671      5F526561 
 4671      64577269 
 4671      7465506F 
 4672              	.LASF104:
 4673 0209 4D415833 		.ascii	"MAX30101.c\000"
 4673      30313031 
 4673      2E6300
 4674              	.LASF23:
 4675 0214 68656164 		.ascii	"head\000"
 4675      00
 4676              	.LASF14:
 4677 0219 75696E74 		.ascii	"uint8_t\000"
 4677      385F7400 
 4678              	.LASF83:
 4679 0221 4D415833 		.ascii	"MAX30101_ReadTemperature\000"
 4679      30313031 
 4679      5F526561 
 4679      6454656D 
 4679      70657261 
 4680              	.LASF71:
 4681 023a 4D415833 		.ascii	"MAX30101_SetMode\000"
 4681      30313031 
 4681      5F536574 
 4681      4D6F6465 
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 99


 4681      00
 4682              	.LASF61:
 4683 024b 4D415833 		.ascii	"MAX30101_ReadFIFO\000"
 4683      30313031 
 4683      5F526561 
 4683      64464946 
 4683      4F00
 4684              	.LASF91:
 4685 025d 4D415833 		.ascii	"MAX30101_ReadRevisionID\000"
 4685      30313031 
 4685      5F526561 
 4685      64526576 
 4685      6973696F 
 4686              	.LASF35:
 4687 0275 4D415833 		.ascii	"MAX30101_IsTempReady\000"
 4687      30313031 
 4687      5F497354 
 4687      656D7052 
 4687      65616479 
 4688              	.LASF73:
 4689 028a 4D415833 		.ascii	"MAX30101_SetSpO2ADCRange\000"
 4689      30313031 
 4689      5F536574 
 4689      53704F32 
 4689      41444352 
 4690              	.LASF17:
 4691 02a3 666C6F61 		.ascii	"float\000"
 4691      7400
 4692              	.LASF28:
 4693 02a9 74656D70 		.ascii	"temp\000"
 4693      00
 4694              	.LASF10:
 4695 02ae 6C6F6E67 		.ascii	"long long int\000"
 4695      206C6F6E 
 4695      6720696E 
 4695      7400
 4696              	.LASF78:
 4697 02bc 6C65645F 		.ascii	"led_channel\000"
 4697      6368616E 
 4697      6E656C00 
 4698              	.LASF55:
 4699 02c8 62797465 		.ascii	"bytes_left_ro_read\000"
 4699      735F6C65 
 4699      66745F72 
 4699      6F5F7265 
 4699      616400
 4700              	.LASF7:
 4701 02db 6C6F6E67 		.ascii	"long int\000"
 4701      20696E74 
 4701      00
 4702              	.LASF41:
 4703 02e4 4D415833 		.ascii	"MAX30101_DisablePPGReadyInt\000"
 4703      30313031 
 4703      5F446973 
 4703      61626C65 
 4703      50504752 
 4704              	.LASF67:
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 100


 4705 0300 4D415833 		.ascii	"MAX30101_SetFIFOAlmostFull\000"
 4705      30313031 
 4705      5F536574 
 4705      4649464F 
 4705      416C6D6F 
 4706              	.LASF22:
 4707 031b 67726565 		.ascii	"green\000"
 4707      6E00
 4708              	.LASF51:
 4709 0321 6669666F 		.ascii	"fifo_values\000"
 4709      5F76616C 
 4709      75657300 
 4710              	.LASF64:
 4711 032d 73616D70 		.ascii	"samples\000"
 4711      6C657300 
 4712              	.LASF57:
 4713 0335 73616D70 		.ascii	"sample_counter\000"
 4713      6C655F63 
 4713      6F756E74 
 4713      657200
 4714              	.LASF107:
 4715 0344 4D415833 		.ascii	"MAX30101_BitMask\000"
 4715      30313031 
 4715      5F426974 
 4715      4D61736B 
 4715      00
 4716              	.LASF20:
 4717 0355 6C6F6E67 		.ascii	"long double\000"
 4717      20646F75 
 4717      626C6500 
 4718              	.LASF24:
 4719 0361 7461696C 		.ascii	"tail\000"
 4719      00
 4720              	.LASF43:
 4721 0366 4D415833 		.ascii	"MAX30101_DisableTempReadyInt\000"
 4721      30313031 
 4721      5F446973 
 4721      61626C65 
 4721      54656D70 
 4722              	.LASF94:
 4723 0383 7265675F 		.ascii	"reg_addr\000"
 4723      61646472 
 4723      00
 4724              	.LASF3:
 4725 038c 756E7369 		.ascii	"unsigned char\000"
 4725      676E6564 
 4725      20636861 
 4725      7200
 4726              	.LASF27:
 4727 039a 4D415833 		.ascii	"MAX30101_IsDevicePresent\000"
 4727      30313031 
 4727      5F497344 
 4727      65766963 
 4727      65507265 
 4728              	.LASF2:
 4729 03b3 7369676E 		.ascii	"signed char\000"
 4729      65642063 
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 101


 4729      68617200 
 4730              	.LASF11:
 4731 03bf 6C6F6E67 		.ascii	"long long unsigned int\000"
 4731      206C6F6E 
 4731      6720756E 
 4731      7369676E 
 4731      65642069 
 4732              	.LASF12:
 4733 03d6 756E7369 		.ascii	"unsigned int\000"
 4733      676E6564 
 4733      20696E74 
 4733      00
 4734              	.LASF92:
 4735 03e3 72657669 		.ascii	"revision_id\000"
 4735      73696F6E 
 4735      5F696400 
 4736              	.LASF42:
 4737 03ef 4D415833 		.ascii	"MAX30101_DisableALCOverflowInt\000"
 4737      30313031 
 4737      5F446973 
 4737      61626C65 
 4737      414C434F 
 4738              	.LASF81:
 4739 040e 736C6F74 		.ascii	"slot\000"
 4739      00
 4740              	.LASF90:
 4741 0413 70617274 		.ascii	"part_id\000"
 4741      5F696400 
 4742              	.LASF6:
 4743 041b 73686F72 		.ascii	"short unsigned int\000"
 4743      7420756E 
 4743      7369676E 
 4743      65642069 
 4743      6E7400
 4744              	.LASF47:
 4745 042e 4D415833 		.ascii	"MAX30101_ClearFIFO\000"
 4745      30313031 
 4745      5F436C65 
 4745      61724649 
 4745      464F00
 4746              	.LASF0:
 4747 0441 5F5F696E 		.ascii	"__int8_t\000"
 4747      74385F74 
 4747      00
 4748              	.LASF26:
 4749 044a 4D415833 		.ascii	"MAX30101_Start\000"
 4749      30313031 
 4749      5F537461 
 4749      727400
 4750              	.LASF19:
 4751 0459 63686172 		.ascii	"char\000"
 4751      00
 4752              	.LASF15:
 4753 045e 75696E74 		.ascii	"uint16_t\000"
 4753      31365F74 
 4753      00
 4754              	.LASF62:
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 102


 4755 0467 7265736F 		.ascii	"resolution\000"
 4755      6C757469 
 4755      6F6E00
 4756              	.LASF72:
 4757 0472 6D6F6465 		.ascii	"mode\000"
 4757      00
 4758              	.LASF48:
 4759 0477 74656D70 		.ascii	"temp_value\000"
 4759      5F76616C 
 4759      756500
 4760              	.LASF75:
 4761 0482 4D415833 		.ascii	"MAX30101_SetSpO2SampleRate\000"
 4761      30313031 
 4761      5F536574 
 4761      53704F32 
 4761      53616D70 
 4762              	.LASF31:
 4763 049d 4D415833 		.ascii	"MAX30101_IsPPGReady\000"
 4763      30313031 
 4763      5F497350 
 4763      50475265 
 4763      61647900 
 4764              	.LASF54:
 4765 04b1 64617461 		.ascii	"data\000"
 4765      00
 4766              	.LASF65:
 4767 04b6 4D415833 		.ascii	"MAX30101_EnableFIFORollover\000"
 4767      30313031 
 4767      5F456E61 
 4767      626C6546 
 4767      49464F52 
 4768              	.LASF16:
 4769 04d2 75696E74 		.ascii	"uint32_t\000"
 4769      33325F74 
 4769      00
 4770              	.LASF76:
 4771 04db 4D415833 		.ascii	"MAX30101_SetSpO2PulseWidth\000"
 4771      30313031 
 4771      5F536574 
 4771      53704F32 
 4771      50756C73 
 4772              	.LASF82:
 4773 04f6 4D415833 		.ascii	"MAX30101_DisableSlots\000"
 4773      30313031 
 4773      5F446973 
 4773      61626C65 
 4773      536C6F74 
 4774              	.LASF38:
 4775 050c 4D415833 		.ascii	"MAX30101_EnableALCOverflowInt\000"
 4775      30313031 
 4775      5F456E61 
 4775      626C6541 
 4775      4C434F76 
 4776              	.LASF9:
 4777 052a 6C6F6E67 		.ascii	"long unsigned int\000"
 4777      20756E73 
 4777      69676E65 
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 103


 4777      6420696E 
 4777      7400
 4778              	.LASF25:
 4779 053c 4D415833 		.ascii	"MAX30101_Data\000"
 4779      30313031 
 4779      5F446174 
 4779      6100
 4780              	.LASF98:
 4781 054a 7265675F 		.ascii	"reg_list\000"
 4781      6C697374 
 4781      00
 4782              	.LASF50:
 4783 0553 61637469 		.ascii	"active_leds\000"
 4783      76655F6C 
 4783      65647300 
 4784              	.LASF96:
 4785 055f 4D415833 		.ascii	"MAX30101_LogRegisters\000"
 4785      30313031 
 4785      5F4C6F67 
 4785      52656769 
 4785      73746572 
 4786              	.LASF8:
 4787 0575 5F5F7569 		.ascii	"__uint32_t\000"
 4787      6E743332 
 4787      5F7400
 4788              	.LASF102:
 4789 0580 7468696E 		.ascii	"thing\000"
 4789      6700
 4790              	.LASF84:
 4791 0586 74656D70 		.ascii	"temperature\000"
 4791      65726174 
 4791      75726500 
 4792              	.LASF87:
 4793 0592 4D415833 		.ascii	"MAX30101_ReadRawTemperature\000"
 4793      30313031 
 4793      5F526561 
 4793      64526177 
 4793      54656D70 
 4794              	.LASF79:
 4795 05ae 7265675F 		.ascii	"reg_data\000"
 4795      64617461 
 4795      00
 4796              	.LASF45:
 4797 05b7 4D415833 		.ascii	"MAX30101_ReadOverflowCounter\000"
 4797      30313031 
 4797      5F526561 
 4797      644F7665 
 4797      72666C6F 
 4798              	.LASF74:
 4799 05d4 72616E67 		.ascii	"range\000"
 4799      6500
 4800              	.LASF70:
 4801 05da 4D415833 		.ascii	"MAX30101_Reset\000"
 4801      30313031 
 4801      5F526573 
 4801      657400
 4802              	.LASF66:
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 104


 4803 05e9 4D415833 		.ascii	"MAX30101_DisableFIFORollover\000"
 4803      30313031 
 4803      5F446973 
 4803      61626C65 
 4803      4649464F 
 4804              	.LASF88:
 4805 0606 4D415833 		.ascii	"MAX30101_StartTemperatureConversion\000"
 4805      30313031 
 4805      5F537461 
 4805      72745465 
 4805      6D706572 
 4806              	.LASF39:
 4807 062a 4D415833 		.ascii	"MAX30101_EnableTempReadyInt\000"
 4807      30313031 
 4807      5F456E61 
 4807      626C6554 
 4807      656D7052 
 4808              	.LASF106:
 4809 0646 4D415833 		.ascii	"MAX30101_WriteRegister\000"
 4809      30313031 
 4809      5F577269 
 4809      74655265 
 4809      67697374 
 4810              	.LASF95:
 4811 065d 7265675F 		.ascii	"reg_value\000"
 4811      76616C75 
 4811      6500
 4812              	.LASF29:
 4813 0667 6572726F 		.ascii	"error\000"
 4813      7200
 4814              	.LASF18:
 4815 066d 646F7562 		.ascii	"double\000"
 4815      6C6500
 4816              	.LASF32:
 4817 0674 666C6167 		.ascii	"flag\000"
 4817      00
 4818              	.LASF80:
 4819 0679 4D415833 		.ascii	"MAX30101_EnableSlot\000"
 4819      30313031 
 4819      5F456E61 
 4819      626C6553 
 4819      6C6F7400 
 4820              	.LASF56:
 4821 068d 4D415833 		.ascii	"MAX30101_ReadRawFIFO\000"
 4821      30313031 
 4821      5F526561 
 4821      64526177 
 4821      4649464F 
 4822              	.LASF34:
 4823 06a2 4D415833 		.ascii	"MAX30101_IsPowerReady\000"
 4823      30313031 
 4823      5F497350 
 4823      6F776572 
 4823      52656164 
 4824              	.LASF100:
 4825 06b8 76616C75 		.ascii	"value\000"
 4825      6500
ARM GAS  C:\Users\FRANCE~1\AppData\Local\Temp\ccoLBrQf.s 			page 105


 4826              	.LASF33:
 4827 06be 4D415833 		.ascii	"MAX30101_IsALCOverflow\000"
 4827      30313031 
 4827      5F497341 
 4827      4C434F76 
 4827      6572666C 
 4828              	.LASF89:
 4829 06d5 4D415833 		.ascii	"MAX30101_ReadPartID\000"
 4829      30313031 
 4829      5F526561 
 4829      64506172 
 4829      74494400 
 4830              	.LASF63:
 4831 06e9 4D415833 		.ascii	"MAX30101_SetSampleAverage\000"
 4831      30313031 
 4831      5F536574 
 4831      53616D70 
 4831      6C654176 
 4832              	.LASF53:
 4833 0703 6E756D5F 		.ascii	"num_samples\000"
 4833      73616D70 
 4833      6C657300 
 4834              	.LASF46:
 4835 070f 4D415833 		.ascii	"MAX30101_ReadReadPointer\000"
 4835      30313031 
 4835      5F526561 
 4835      64526561 
 4835      64506F69 
 4836              	.LASF1:
 4837 0728 5F5F7569 		.ascii	"__uint8_t\000"
 4837      6E74385F 
 4837      7400
 4838              	.LASF37:
 4839 0732 4D415833 		.ascii	"MAX30101_EnablePPGReadyInt\000"
 4839      30313031 
 4839      5F456E61 
 4839      626C6550 
 4839      50475265 
 4840              	.LASF52:
 4841 074d 4D415833 		.ascii	"MAX30101_ReadRawFIFOBytes\000"
 4841      30313031 
 4841      5F526561 
 4841      64526177 
 4841      4649464F 
 4842              	.LASF58:
 4843 0767 62797465 		.ascii	"bytes_to_get\000"
 4843      735F746F 
 4843      5F676574 
 4843      00
 4844              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
