ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SpO2.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	an_x:
  22 0000 00000000 		.space	800
  22      00000000 
  22      00000000 
  22      00000000 
  22      00000000 
  23              		.align	2
  24              	an_y:
  25 0320 00000000 		.space	800
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.section	.text.maxim_heart_rate_and_oxygen_saturation,"ax",%progbits
  27              		.align	2
  28              		.global	maxim_heart_rate_and_oxygen_saturation
  29              		.thumb
  30              		.thumb_func
  31              		.type	maxim_heart_rate_and_oxygen_saturation, %function
  32              	maxim_heart_rate_and_oxygen_saturation:
  33              	.LFB63:
  34              		.file 1 "SpO2.c"
   1:SpO2.c        **** /* ========================================
   2:SpO2.c        ****  *
   3:SpO2.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:SpO2.c        ****  * All Rights Reserved
   5:SpO2.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:SpO2.c        ****  *
   7:SpO2.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:SpO2.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:SpO2.c        ****  *
  10:SpO2.c        ****  * ========================================
  11:SpO2.c        **** */
  12:SpO2.c        **** 
  13:SpO2.c        **** #include "SpO2.h"
  14:SpO2.c        **** #include "project.h"
  15:SpO2.c        **** #include <stdbool.h>
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 2


  16:SpO2.c        **** 
  17:SpO2.c        **** void maxim_heart_rate_and_oxygen_saturation(uint32_t *pun_ir_buffer, int32_t n_buffer_length, uint3
  18:SpO2.c        **** 
  19:SpO2.c        **** /**
  20:SpO2.c        **** * \brief        Calculate the heart rate and SpO2 level
  21:SpO2.c        **** * \par          Details
  22:SpO2.c        **** *               By detecting  peaks of PPG cycle and corresponding AC/DC of red/infra-red signal, t
  23:SpO2.c        **** *               Since this algorithm is aiming for Arm M0/M3. formaula for SPO2 did not achieve the
  24:SpO2.c        **** *               Thus, accurate SPO2 is precalculated and save longo uch_spo2_table[] per each an_ra
  25:SpO2.c        **** *
  26:SpO2.c        **** * \param[in]    *pun_ir_buffer           - IR sensor data buffer
  27:SpO2.c        **** * \param[in]    n_buffer_length      - sensor data buffer length
  28:SpO2.c        **** * \param[in]    *pun_red_buffer          - Red sensor data buffer
  29:SpO2.c        **** * \param[out]    *pn_spo2                - Calculated SpO2 value
  30:SpO2.c        **** * \param[out]    *pch_spo2_valid         - 1 if the calculated SpO2 value is valid
  31:SpO2.c        **** * \param[out]    *pn_heart_rate          - Calculated heart rate value
  32:SpO2.c        **** * \param[out]    *pch_hr_valid           - 1 if the calculated heart rate value is valid
  33:SpO2.c        **** *
  34:SpO2.c        **** * \retval       None
  35:SpO2.c        **** */
  36:SpO2.c        **** {
  35              		.loc 1 36 0
  36              		.cfi_startproc
  37              		@ args = 12, pretend = 0, frame = 168
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 AEB0     		sub	sp, sp, #184
  44              		.cfi_def_cfa_offset 192
  45 0004 04AF     		add	r7, sp, #16
  46              		.cfi_def_cfa 7, 176
  47 0006 F860     		str	r0, [r7, #12]
  48 0008 B960     		str	r1, [r7, #8]
  49 000a 7A60     		str	r2, [r7, #4]
  50 000c 3B60     		str	r3, [r7]
  37:SpO2.c        ****   uint32_t un_ir_mean;
  38:SpO2.c        ****   int32_t k, n_i_ratio_count;
  39:SpO2.c        ****   int32_t i, n_exact_ir_valley_locs_count, n_middle_idx;
  40:SpO2.c        ****   int32_t n_th1, n_npks;   
  41:SpO2.c        ****   int32_t an_ir_valley_locs[15] ;
  42:SpO2.c        ****   int32_t n_peak_interval_sum;
  43:SpO2.c        ****   
  44:SpO2.c        ****   int32_t n_y_ac, n_x_ac;
  45:SpO2.c        ****   int32_t n_spo2_calc; 
  46:SpO2.c        ****   int32_t n_y_dc_max, n_x_dc_max; 
  47:SpO2.c        ****   int32_t n_y_dc_max_idx = 0;
  51              		.loc 1 47 0
  52 000e 0023     		movs	r3, #0
  53 0010 C7F88430 		str	r3, [r7, #132]
  48:SpO2.c        ****   int32_t n_x_dc_max_idx = 0; 
  54              		.loc 1 48 0
  55 0014 0023     		movs	r3, #0
  56 0016 C7F88030 		str	r3, [r7, #128]
  49:SpO2.c        ****   int32_t an_ratio[5], n_ratio_average; 
  50:SpO2.c        ****   int32_t n_nume, n_denom ;
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 3


  51:SpO2.c        **** 
  52:SpO2.c        ****   // calculates DC mean and subtract DC from ir
  53:SpO2.c        ****   un_ir_mean =0; 
  57              		.loc 1 53 0
  58 001a 0023     		movs	r3, #0
  59 001c C7F8A430 		str	r3, [r7, #164]
  54:SpO2.c        ****   for (k=0 ; k<n_buffer_length ; k++ ) un_ir_mean += pun_ir_buffer[k] ;
  60              		.loc 1 54 0
  61 0020 0023     		movs	r3, #0
  62 0022 C7F8A030 		str	r3, [r7, #160]
  63 0026 0FE0     		b	.L2
  64              	.L3:
  65              		.loc 1 54 0 is_stmt 0 discriminator 3
  66 0028 D7F8A030 		ldr	r3, [r7, #160]
  67 002c 9B00     		lsls	r3, r3, #2
  68 002e FA68     		ldr	r2, [r7, #12]
  69 0030 1344     		add	r3, r3, r2
  70 0032 1B68     		ldr	r3, [r3]
  71 0034 D7F8A420 		ldr	r2, [r7, #164]
  72 0038 1344     		add	r3, r3, r2
  73 003a C7F8A430 		str	r3, [r7, #164]
  74 003e D7F8A030 		ldr	r3, [r7, #160]
  75 0042 0133     		adds	r3, r3, #1
  76 0044 C7F8A030 		str	r3, [r7, #160]
  77              	.L2:
  78              		.loc 1 54 0 discriminator 1
  79 0048 D7F8A020 		ldr	r2, [r7, #160]
  80 004c BB68     		ldr	r3, [r7, #8]
  81 004e 9A42     		cmp	r2, r3
  82 0050 EADB     		blt	.L3
  55:SpO2.c        ****   un_ir_mean =un_ir_mean/n_buffer_length ;
  83              		.loc 1 55 0 is_stmt 1
  84 0052 BB68     		ldr	r3, [r7, #8]
  85 0054 D7F8A420 		ldr	r2, [r7, #164]
  86 0058 B2FBF3F3 		udiv	r3, r2, r3
  87 005c C7F8A430 		str	r3, [r7, #164]
  56:SpO2.c        ****     
  57:SpO2.c        ****   // remove DC and invert signal so that we can use peak detector as valley detector
  58:SpO2.c        ****   for (k=0 ; k<n_buffer_length ; k++ )  
  88              		.loc 1 58 0
  89 0060 0023     		movs	r3, #0
  90 0062 C7F8A030 		str	r3, [r7, #160]
  91 0066 13E0     		b	.L4
  92              	.L5:
  59:SpO2.c        ****     an_x[k] = -1*(pun_ir_buffer[k] - un_ir_mean) ; 
  93              		.loc 1 59 0 discriminator 3
  94 0068 D7F8A030 		ldr	r3, [r7, #160]
  95 006c 9B00     		lsls	r3, r3, #2
  96 006e FA68     		ldr	r2, [r7, #12]
  97 0070 1344     		add	r3, r3, r2
  98 0072 1B68     		ldr	r3, [r3]
  99 0074 D7F8A420 		ldr	r2, [r7, #164]
 100 0078 D31A     		subs	r3, r2, r3
 101 007a 1946     		mov	r1, r3
 102 007c B74A     		ldr	r2, .L38
 103 007e D7F8A030 		ldr	r3, [r7, #160]
 104 0082 42F82310 		str	r1, [r2, r3, lsl #2]
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 4


  58:SpO2.c        ****     an_x[k] = -1*(pun_ir_buffer[k] - un_ir_mean) ; 
 105              		.loc 1 58 0 discriminator 3
 106 0086 D7F8A030 		ldr	r3, [r7, #160]
 107 008a 0133     		adds	r3, r3, #1
 108 008c C7F8A030 		str	r3, [r7, #160]
 109              	.L4:
  58:SpO2.c        ****     an_x[k] = -1*(pun_ir_buffer[k] - un_ir_mean) ; 
 110              		.loc 1 58 0 is_stmt 0 discriminator 1
 111 0090 D7F8A020 		ldr	r2, [r7, #160]
 112 0094 BB68     		ldr	r3, [r7, #8]
 113 0096 9A42     		cmp	r2, r3
 114 0098 E6DB     		blt	.L5
  60:SpO2.c        ****     
  61:SpO2.c        ****   // 4 pt Moving Average
  62:SpO2.c        ****   for(k=0; k< BUFFER_SIZE-MA4_SIZE; k++){
 115              		.loc 1 62 0 is_stmt 1
 116 009a 0023     		movs	r3, #0
 117 009c C7F8A030 		str	r3, [r7, #160]
 118 00a0 28E0     		b	.L6
 119              	.L8:
  63:SpO2.c        ****     an_x[k]=( an_x[k]+an_x[k+1]+ an_x[k+2]+ an_x[k+3])/(int)4;        
 120              		.loc 1 63 0 discriminator 3
 121 00a2 AE4A     		ldr	r2, .L38
 122 00a4 D7F8A030 		ldr	r3, [r7, #160]
 123 00a8 52F82320 		ldr	r2, [r2, r3, lsl #2]
 124 00ac D7F8A030 		ldr	r3, [r7, #160]
 125 00b0 0133     		adds	r3, r3, #1
 126 00b2 AA49     		ldr	r1, .L38
 127 00b4 51F82330 		ldr	r3, [r1, r3, lsl #2]
 128 00b8 1A44     		add	r2, r2, r3
 129 00ba D7F8A030 		ldr	r3, [r7, #160]
 130 00be 0233     		adds	r3, r3, #2
 131 00c0 A649     		ldr	r1, .L38
 132 00c2 51F82330 		ldr	r3, [r1, r3, lsl #2]
 133 00c6 1A44     		add	r2, r2, r3
 134 00c8 D7F8A030 		ldr	r3, [r7, #160]
 135 00cc 0333     		adds	r3, r3, #3
 136 00ce A349     		ldr	r1, .L38
 137 00d0 51F82330 		ldr	r3, [r1, r3, lsl #2]
 138 00d4 1344     		add	r3, r3, r2
 139 00d6 002B     		cmp	r3, #0
 140 00d8 00DA     		bge	.L7
 141 00da 0333     		adds	r3, r3, #3
 142              	.L7:
 143 00dc 9B10     		asrs	r3, r3, #2
 144 00de 1946     		mov	r1, r3
 145 00e0 9E4A     		ldr	r2, .L38
 146 00e2 D7F8A030 		ldr	r3, [r7, #160]
 147 00e6 42F82310 		str	r1, [r2, r3, lsl #2]
  62:SpO2.c        ****     an_x[k]=( an_x[k]+an_x[k+1]+ an_x[k+2]+ an_x[k+3])/(int)4;        
 148              		.loc 1 62 0 discriminator 3
 149 00ea D7F8A030 		ldr	r3, [r7, #160]
 150 00ee 0133     		adds	r3, r3, #1
 151 00f0 C7F8A030 		str	r3, [r7, #160]
 152              	.L6:
  62:SpO2.c        ****     an_x[k]=( an_x[k]+an_x[k+1]+ an_x[k+2]+ an_x[k+3])/(int)4;        
 153              		.loc 1 62 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 5


 154 00f4 D7F8A030 		ldr	r3, [r7, #160]
 155 00f8 C32B     		cmp	r3, #195
 156 00fa D2DD     		ble	.L8
  64:SpO2.c        ****   }
  65:SpO2.c        ****   // calculate threshold  
  66:SpO2.c        ****   n_th1=0; 
 157              		.loc 1 66 0 is_stmt 1
 158 00fc 0023     		movs	r3, #0
 159 00fe C7F89430 		str	r3, [r7, #148]
  67:SpO2.c        ****   for ( k=0 ; k<BUFFER_SIZE ;k++){
 160              		.loc 1 67 0
 161 0102 0023     		movs	r3, #0
 162 0104 C7F8A030 		str	r3, [r7, #160]
 163 0108 0EE0     		b	.L9
 164              	.L10:
  68:SpO2.c        ****     n_th1 +=  an_x[k];
 165              		.loc 1 68 0 discriminator 3
 166 010a 944A     		ldr	r2, .L38
 167 010c D7F8A030 		ldr	r3, [r7, #160]
 168 0110 52F82330 		ldr	r3, [r2, r3, lsl #2]
 169 0114 D7F89420 		ldr	r2, [r7, #148]
 170 0118 1344     		add	r3, r3, r2
 171 011a C7F89430 		str	r3, [r7, #148]
  67:SpO2.c        ****   for ( k=0 ; k<BUFFER_SIZE ;k++){
 172              		.loc 1 67 0 discriminator 3
 173 011e D7F8A030 		ldr	r3, [r7, #160]
 174 0122 0133     		adds	r3, r3, #1
 175 0124 C7F8A030 		str	r3, [r7, #160]
 176              	.L9:
  67:SpO2.c        ****   for ( k=0 ; k<BUFFER_SIZE ;k++){
 177              		.loc 1 67 0 is_stmt 0 discriminator 1
 178 0128 D7F8A030 		ldr	r3, [r7, #160]
 179 012c C72B     		cmp	r3, #199
 180 012e ECDD     		ble	.L10
  69:SpO2.c        ****   }
  70:SpO2.c        ****   n_th1=  n_th1/ ( BUFFER_SIZE);
 181              		.loc 1 70 0 is_stmt 1
 182 0130 D7F89430 		ldr	r3, [r7, #148]
 183 0134 8A4A     		ldr	r2, .L38+4
 184 0136 82FB0312 		smull	r1, r2, r2, r3
 185 013a 9211     		asrs	r2, r2, #6
 186 013c DB17     		asrs	r3, r3, #31
 187 013e D31A     		subs	r3, r2, r3
 188 0140 C7F89430 		str	r3, [r7, #148]
  71:SpO2.c        ****   if( n_th1<30) n_th1=30; // min allowed
 189              		.loc 1 71 0
 190 0144 D7F89430 		ldr	r3, [r7, #148]
 191 0148 1D2B     		cmp	r3, #29
 192 014a 02DC     		bgt	.L11
 193              		.loc 1 71 0 is_stmt 0 discriminator 1
 194 014c 1E23     		movs	r3, #30
 195 014e C7F89430 		str	r3, [r7, #148]
 196              	.L11:
  72:SpO2.c        ****   if( n_th1>60) n_th1=60; // max allowed
 197              		.loc 1 72 0 is_stmt 1
 198 0152 D7F89430 		ldr	r3, [r7, #148]
 199 0156 3C2B     		cmp	r3, #60
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 6


 200 0158 02DD     		ble	.L12
 201              		.loc 1 72 0 is_stmt 0 discriminator 1
 202 015a 3C23     		movs	r3, #60
 203 015c C7F89430 		str	r3, [r7, #148]
 204              	.L12:
  73:SpO2.c        **** 
  74:SpO2.c        ****   for ( k=0 ; k<15;k++) an_ir_valley_locs[k]=0;
 205              		.loc 1 74 0 is_stmt 1
 206 0160 0023     		movs	r3, #0
 207 0162 C7F8A030 		str	r3, [r7, #160]
 208 0166 0DE0     		b	.L13
 209              	.L14:
 210              		.loc 1 74 0 is_stmt 0 discriminator 3
 211 0168 D7F8A030 		ldr	r3, [r7, #160]
 212 016c 9B00     		lsls	r3, r3, #2
 213 016e 07F1A802 		add	r2, r7, #168
 214 0172 1344     		add	r3, r3, r2
 215 0174 0022     		movs	r2, #0
 216 0176 43F8842C 		str	r2, [r3, #-132]
 217 017a D7F8A030 		ldr	r3, [r7, #160]
 218 017e 0133     		adds	r3, r3, #1
 219 0180 C7F8A030 		str	r3, [r7, #160]
 220              	.L13:
 221              		.loc 1 74 0 discriminator 1
 222 0184 D7F8A030 		ldr	r3, [r7, #160]
 223 0188 0E2B     		cmp	r3, #14
 224 018a EDDD     		ble	.L14
  75:SpO2.c        ****   // since we flipped signal, we use peak detector as valley detector
  76:SpO2.c        ****   maxim_find_peaks( an_ir_valley_locs, &n_npks, an_x, BUFFER_SIZE, n_th1, 4, 15 );//peak_height, pe
 225              		.loc 1 76 0 is_stmt 1
 226 018c 07F16001 		add	r1, r7, #96
 227 0190 07F12400 		add	r0, r7, #36
 228 0194 0F23     		movs	r3, #15
 229 0196 0293     		str	r3, [sp, #8]
 230 0198 0423     		movs	r3, #4
 231 019a 0193     		str	r3, [sp, #4]
 232 019c D7F89430 		ldr	r3, [r7, #148]
 233 01a0 0093     		str	r3, [sp]
 234 01a2 C823     		movs	r3, #200
 235 01a4 6D4A     		ldr	r2, .L38
 236 01a6 FFF7FEFF 		bl	maxim_find_peaks
  77:SpO2.c        ****   n_peak_interval_sum =0;
 237              		.loc 1 77 0
 238 01aa 0023     		movs	r3, #0
 239 01ac C7F89030 		str	r3, [r7, #144]
  78:SpO2.c        ****   if (n_npks>=2){
 240              		.loc 1 78 0
 241 01b0 3B6E     		ldr	r3, [r7, #96]
 242 01b2 012B     		cmp	r3, #1
 243 01b4 3ADD     		ble	.L15
  79:SpO2.c        ****     for (k=1; k<n_npks; k++) n_peak_interval_sum += (an_ir_valley_locs[k] -an_ir_valley_locs[k -1] 
 244              		.loc 1 79 0
 245 01b6 0123     		movs	r3, #1
 246 01b8 C7F8A030 		str	r3, [r7, #160]
 247 01bc 1BE0     		b	.L16
 248              	.L17:
 249              		.loc 1 79 0 is_stmt 0 discriminator 3
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 7


 250 01be D7F8A030 		ldr	r3, [r7, #160]
 251 01c2 9B00     		lsls	r3, r3, #2
 252 01c4 07F1A802 		add	r2, r7, #168
 253 01c8 1344     		add	r3, r3, r2
 254 01ca 53F8842C 		ldr	r2, [r3, #-132]
 255 01ce D7F8A030 		ldr	r3, [r7, #160]
 256 01d2 013B     		subs	r3, r3, #1
 257 01d4 9B00     		lsls	r3, r3, #2
 258 01d6 07F1A801 		add	r1, r7, #168
 259 01da 0B44     		add	r3, r3, r1
 260 01dc 53F8843C 		ldr	r3, [r3, #-132]
 261 01e0 D31A     		subs	r3, r2, r3
 262 01e2 D7F89020 		ldr	r2, [r7, #144]
 263 01e6 1344     		add	r3, r3, r2
 264 01e8 C7F89030 		str	r3, [r7, #144]
 265 01ec D7F8A030 		ldr	r3, [r7, #160]
 266 01f0 0133     		adds	r3, r3, #1
 267 01f2 C7F8A030 		str	r3, [r7, #160]
 268              	.L16:
 269              		.loc 1 79 0 discriminator 1
 270 01f6 3B6E     		ldr	r3, [r7, #96]
 271 01f8 D7F8A020 		ldr	r2, [r7, #160]
 272 01fc 9A42     		cmp	r2, r3
 273 01fe DEDB     		blt	.L17
  80:SpO2.c        ****     n_peak_interval_sum =n_peak_interval_sum/(n_npks-1);
 274              		.loc 1 80 0 is_stmt 1
 275 0200 3B6E     		ldr	r3, [r7, #96]
 276 0202 013B     		subs	r3, r3, #1
 277 0204 D7F89020 		ldr	r2, [r7, #144]
 278 0208 92FBF3F3 		sdiv	r3, r2, r3
 279 020c C7F89030 		str	r3, [r7, #144]
  81:SpO2.c        ****     *pn_heart_rate =(int32_t)( (FreqS*60)/ n_peak_interval_sum );
 280              		.loc 1 81 0
 281 0210 40F6B832 		movw	r2, #3000
 282 0214 D7F89030 		ldr	r3, [r7, #144]
 283 0218 92FBF3F2 		sdiv	r2, r2, r3
 284 021c D7F8B430 		ldr	r3, [r7, #180]
 285 0220 1A60     		str	r2, [r3]
  82:SpO2.c        ****     *pch_hr_valid  = 1;
 286              		.loc 1 82 0
 287 0222 D7F8B830 		ldr	r3, [r7, #184]
 288 0226 0122     		movs	r2, #1
 289 0228 1A70     		strb	r2, [r3]
 290 022a 07E0     		b	.L18
 291              	.L15:
  83:SpO2.c        ****   }
  84:SpO2.c        ****   else  { 
  85:SpO2.c        ****     *pn_heart_rate = -999; // unable to calculate because # of peaks are too small
 292              		.loc 1 85 0
 293 022c D7F8B430 		ldr	r3, [r7, #180]
 294 0230 4C4A     		ldr	r2, .L38+8
 295 0232 1A60     		str	r2, [r3]
  86:SpO2.c        ****     *pch_hr_valid  = 0;
 296              		.loc 1 86 0
 297 0234 D7F8B830 		ldr	r3, [r7, #184]
 298 0238 0022     		movs	r2, #0
 299 023a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 8


 300              	.L18:
  87:SpO2.c        ****   }
  88:SpO2.c        **** 
  89:SpO2.c        ****   //  load raw value again for SPO2 calculation : RED(=y) and IR(=X)
  90:SpO2.c        ****   for (k=0 ; k<n_buffer_length ; k++ )  {
 301              		.loc 1 90 0
 302 023c 0023     		movs	r3, #0
 303 023e C7F8A030 		str	r3, [r7, #160]
 304 0242 1CE0     		b	.L19
 305              	.L20:
  91:SpO2.c        ****       an_x[k] =  pun_ir_buffer[k] ; 
 306              		.loc 1 91 0 discriminator 3
 307 0244 D7F8A030 		ldr	r3, [r7, #160]
 308 0248 9B00     		lsls	r3, r3, #2
 309 024a FA68     		ldr	r2, [r7, #12]
 310 024c 1344     		add	r3, r3, r2
 311 024e 1B68     		ldr	r3, [r3]
 312 0250 1946     		mov	r1, r3
 313 0252 424A     		ldr	r2, .L38
 314 0254 D7F8A030 		ldr	r3, [r7, #160]
 315 0258 42F82310 		str	r1, [r2, r3, lsl #2]
  92:SpO2.c        ****       an_y[k] =  pun_red_buffer[k] ; 
 316              		.loc 1 92 0 discriminator 3
 317 025c D7F8A030 		ldr	r3, [r7, #160]
 318 0260 9B00     		lsls	r3, r3, #2
 319 0262 7A68     		ldr	r2, [r7, #4]
 320 0264 1344     		add	r3, r3, r2
 321 0266 1B68     		ldr	r3, [r3]
 322 0268 1946     		mov	r1, r3
 323 026a 3F4A     		ldr	r2, .L38+12
 324 026c D7F8A030 		ldr	r3, [r7, #160]
 325 0270 42F82310 		str	r1, [r2, r3, lsl #2]
  90:SpO2.c        ****       an_x[k] =  pun_ir_buffer[k] ; 
 326              		.loc 1 90 0 discriminator 3
 327 0274 D7F8A030 		ldr	r3, [r7, #160]
 328 0278 0133     		adds	r3, r3, #1
 329 027a C7F8A030 		str	r3, [r7, #160]
 330              	.L19:
  90:SpO2.c        ****       an_x[k] =  pun_ir_buffer[k] ; 
 331              		.loc 1 90 0 is_stmt 0 discriminator 1
 332 027e D7F8A020 		ldr	r2, [r7, #160]
 333 0282 BB68     		ldr	r3, [r7, #8]
 334 0284 9A42     		cmp	r2, r3
 335 0286 DDDB     		blt	.L20
  93:SpO2.c        ****   }
  94:SpO2.c        **** 
  95:SpO2.c        ****   // find precise min near an_ir_valley_locs
  96:SpO2.c        ****   n_exact_ir_valley_locs_count =n_npks; 
 336              		.loc 1 96 0 is_stmt 1
 337 0288 3B6E     		ldr	r3, [r7, #96]
 338 028a BB67     		str	r3, [r7, #120]
  97:SpO2.c        ****   
  98:SpO2.c        ****   //using exact_ir_valley_locs , find ir-red DC andir-red AC for SPO2 calibration an_ratio
  99:SpO2.c        ****   //finding AC/DC maximum of raw
 100:SpO2.c        **** 
 101:SpO2.c        ****   n_ratio_average =0; 
 339              		.loc 1 101 0
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 9


 340 028c 0023     		movs	r3, #0
 341 028e FB67     		str	r3, [r7, #124]
 102:SpO2.c        ****   n_i_ratio_count = 0; 
 342              		.loc 1 102 0
 343 0290 0023     		movs	r3, #0
 344 0292 C7F89C30 		str	r3, [r7, #156]
 103:SpO2.c        ****   for(k=0; k< 5; k++) an_ratio[k]=0;
 345              		.loc 1 103 0
 346 0296 0023     		movs	r3, #0
 347 0298 C7F8A030 		str	r3, [r7, #160]
 348 029c 0DE0     		b	.L21
 349              	.L22:
 350              		.loc 1 103 0 is_stmt 0 discriminator 3
 351 029e D7F8A030 		ldr	r3, [r7, #160]
 352 02a2 9B00     		lsls	r3, r3, #2
 353 02a4 07F1A802 		add	r2, r7, #168
 354 02a8 1344     		add	r3, r3, r2
 355 02aa 0022     		movs	r2, #0
 356 02ac 43F8982C 		str	r2, [r3, #-152]
 357 02b0 D7F8A030 		ldr	r3, [r7, #160]
 358 02b4 0133     		adds	r3, r3, #1
 359 02b6 C7F8A030 		str	r3, [r7, #160]
 360              	.L21:
 361              		.loc 1 103 0 discriminator 1
 362 02ba D7F8A030 		ldr	r3, [r7, #160]
 363 02be 042B     		cmp	r3, #4
 364 02c0 EDDD     		ble	.L22
 104:SpO2.c        ****   for (k=0; k< n_exact_ir_valley_locs_count; k++){
 365              		.loc 1 104 0 is_stmt 1
 366 02c2 0023     		movs	r3, #0
 367 02c4 C7F8A030 		str	r3, [r7, #160]
 368 02c8 16E0     		b	.L23
 369              	.L26:
 105:SpO2.c        ****     if (an_ir_valley_locs[k] > BUFFER_SIZE ){
 370              		.loc 1 105 0
 371 02ca D7F8A030 		ldr	r3, [r7, #160]
 372 02ce 9B00     		lsls	r3, r3, #2
 373 02d0 07F1A802 		add	r2, r7, #168
 374 02d4 1344     		add	r3, r3, r2
 375 02d6 53F8843C 		ldr	r3, [r3, #-132]
 376 02da C82B     		cmp	r3, #200
 377 02dc 07DD     		ble	.L24
 106:SpO2.c        ****       *pn_spo2 =  -999 ; // do not use SPO2 since valley loc is out of range
 378              		.loc 1 106 0
 379 02de 3B68     		ldr	r3, [r7]
 380 02e0 204A     		ldr	r2, .L38+8
 381 02e2 1A60     		str	r2, [r3]
 107:SpO2.c        ****       *pch_spo2_valid  = 0; 
 382              		.loc 1 107 0
 383 02e4 D7F8B030 		ldr	r3, [r7, #176]
 384 02e8 0022     		movs	r2, #0
 385 02ea 1A70     		strb	r2, [r3]
 386 02ec 92E1     		b	.L1
 387              	.L24:
 104:SpO2.c        ****     if (an_ir_valley_locs[k] > BUFFER_SIZE ){
 388              		.loc 1 104 0 discriminator 2
 389 02ee D7F8A030 		ldr	r3, [r7, #160]
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 10


 390 02f2 0133     		adds	r3, r3, #1
 391 02f4 C7F8A030 		str	r3, [r7, #160]
 392              	.L23:
 104:SpO2.c        ****     if (an_ir_valley_locs[k] > BUFFER_SIZE ){
 393              		.loc 1 104 0 is_stmt 0 discriminator 1
 394 02f8 D7F8A020 		ldr	r2, [r7, #160]
 395 02fc BB6F     		ldr	r3, [r7, #120]
 396 02fe 9A42     		cmp	r2, r3
 397 0300 E3DB     		blt	.L26
 108:SpO2.c        ****       return;
 109:SpO2.c        ****     }
 110:SpO2.c        ****   }
 111:SpO2.c        ****   // find max between two valley locations 
 112:SpO2.c        ****   // and use an_ratio betwen AC compoent of Ir & Red and DC compoent of Ir & Red for SPO2 
 113:SpO2.c        ****   for (k=0; k< n_exact_ir_valley_locs_count-1; k++){
 398              		.loc 1 113 0 is_stmt 1
 399 0302 0023     		movs	r3, #0
 400 0304 C7F8A030 		str	r3, [r7, #160]
 401 0308 3BE1     		b	.L27
 402              	.L33:
 114:SpO2.c        ****     n_y_dc_max= -16777216 ; 
 403              		.loc 1 114 0
 404 030a 4FF07F43 		mov	r3, #-16777216
 405 030e C7F88C30 		str	r3, [r7, #140]
 115:SpO2.c        ****     n_x_dc_max= -16777216; 
 406              		.loc 1 115 0
 407 0312 4FF07F43 		mov	r3, #-16777216
 408 0316 C7F88830 		str	r3, [r7, #136]
 116:SpO2.c        ****     if (an_ir_valley_locs[k+1]-an_ir_valley_locs[k] >3){
 409              		.loc 1 116 0
 410 031a D7F8A030 		ldr	r3, [r7, #160]
 411 031e 0133     		adds	r3, r3, #1
 412 0320 9B00     		lsls	r3, r3, #2
 413 0322 07F1A802 		add	r2, r7, #168
 414 0326 1344     		add	r3, r3, r2
 415 0328 53F8842C 		ldr	r2, [r3, #-132]
 416 032c D7F8A030 		ldr	r3, [r7, #160]
 417 0330 9B00     		lsls	r3, r3, #2
 418 0332 07F1A801 		add	r1, r7, #168
 419 0336 0B44     		add	r3, r3, r1
 420 0338 53F8843C 		ldr	r3, [r3, #-132]
 421 033c D31A     		subs	r3, r2, r3
 422 033e 032B     		cmp	r3, #3
 423 0340 40F31A81 		ble	.L28
 117:SpO2.c        ****         for (i=an_ir_valley_locs[k]; i< an_ir_valley_locs[k+1]; i++){
 424              		.loc 1 117 0
 425 0344 D7F8A030 		ldr	r3, [r7, #160]
 426 0348 9B00     		lsls	r3, r3, #2
 427 034a 07F1A802 		add	r2, r7, #168
 428 034e 1344     		add	r3, r3, r2
 429 0350 53F8843C 		ldr	r3, [r3, #-132]
 430 0354 C7F89830 		str	r3, [r7, #152]
 431 0358 35E0     		b	.L29
 432              	.L39:
 433 035a 00BF     		.align	2
 434              	.L38:
 435 035c 00000000 		.word	an_x
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 11


 436 0360 1F85EB51 		.word	1374389535
 437 0364 19FCFFFF 		.word	-999
 438 0368 20030000 		.word	an_y
 439              	.L32:
 118:SpO2.c        ****           if (an_x[i]> n_x_dc_max) {n_x_dc_max =an_x[i]; n_x_dc_max_idx=i;}
 440              		.loc 1 118 0
 441 036c AB4A     		ldr	r2, .L40
 442 036e D7F89830 		ldr	r3, [r7, #152]
 443 0372 52F82320 		ldr	r2, [r2, r3, lsl #2]
 444 0376 D7F88830 		ldr	r3, [r7, #136]
 445 037a 9A42     		cmp	r2, r3
 446 037c 0ADD     		ble	.L30
 447              		.loc 1 118 0 is_stmt 0 discriminator 1
 448 037e A74A     		ldr	r2, .L40
 449 0380 D7F89830 		ldr	r3, [r7, #152]
 450 0384 52F82330 		ldr	r3, [r2, r3, lsl #2]
 451 0388 C7F88830 		str	r3, [r7, #136]
 452 038c D7F89830 		ldr	r3, [r7, #152]
 453 0390 C7F88030 		str	r3, [r7, #128]
 454              	.L30:
 119:SpO2.c        ****           if (an_y[i]> n_y_dc_max) {n_y_dc_max =an_y[i]; n_y_dc_max_idx=i;}
 455              		.loc 1 119 0 is_stmt 1
 456 0394 A24A     		ldr	r2, .L40+4
 457 0396 D7F89830 		ldr	r3, [r7, #152]
 458 039a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 459 039e D7F88C30 		ldr	r3, [r7, #140]
 460 03a2 9A42     		cmp	r2, r3
 461 03a4 0ADD     		ble	.L31
 462              		.loc 1 119 0 is_stmt 0 discriminator 1
 463 03a6 9E4A     		ldr	r2, .L40+4
 464 03a8 D7F89830 		ldr	r3, [r7, #152]
 465 03ac 52F82330 		ldr	r3, [r2, r3, lsl #2]
 466 03b0 C7F88C30 		str	r3, [r7, #140]
 467 03b4 D7F89830 		ldr	r3, [r7, #152]
 468 03b8 C7F88430 		str	r3, [r7, #132]
 469              	.L31:
 117:SpO2.c        ****         for (i=an_ir_valley_locs[k]; i< an_ir_valley_locs[k+1]; i++){
 470              		.loc 1 117 0 is_stmt 1 discriminator 2
 471 03bc D7F89830 		ldr	r3, [r7, #152]
 472 03c0 0133     		adds	r3, r3, #1
 473 03c2 C7F89830 		str	r3, [r7, #152]
 474              	.L29:
 117:SpO2.c        ****         for (i=an_ir_valley_locs[k]; i< an_ir_valley_locs[k+1]; i++){
 475              		.loc 1 117 0 is_stmt 0 discriminator 1
 476 03c6 D7F8A030 		ldr	r3, [r7, #160]
 477 03ca 0133     		adds	r3, r3, #1
 478 03cc 9B00     		lsls	r3, r3, #2
 479 03ce 07F1A802 		add	r2, r7, #168
 480 03d2 1344     		add	r3, r3, r2
 481 03d4 53F8842C 		ldr	r2, [r3, #-132]
 482 03d8 D7F89830 		ldr	r3, [r7, #152]
 483 03dc 9A42     		cmp	r2, r3
 484 03de C5DC     		bgt	.L32
 120:SpO2.c        ****       }
 121:SpO2.c        ****       n_y_ac= (an_y[an_ir_valley_locs[k+1]] - an_y[an_ir_valley_locs[k] ] )*(n_y_dc_max_idx -an_ir_
 485              		.loc 1 121 0 is_stmt 1
 486 03e0 D7F8A030 		ldr	r3, [r7, #160]
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 12


 487 03e4 0133     		adds	r3, r3, #1
 488 03e6 9B00     		lsls	r3, r3, #2
 489 03e8 07F1A802 		add	r2, r7, #168
 490 03ec 1344     		add	r3, r3, r2
 491 03ee 53F8843C 		ldr	r3, [r3, #-132]
 492 03f2 8B4A     		ldr	r2, .L40+4
 493 03f4 52F82320 		ldr	r2, [r2, r3, lsl #2]
 494 03f8 D7F8A030 		ldr	r3, [r7, #160]
 495 03fc 9B00     		lsls	r3, r3, #2
 496 03fe 07F1A801 		add	r1, r7, #168
 497 0402 0B44     		add	r3, r3, r1
 498 0404 53F8843C 		ldr	r3, [r3, #-132]
 499 0408 8549     		ldr	r1, .L40+4
 500 040a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 501 040e D21A     		subs	r2, r2, r3
 502 0410 D7F8A030 		ldr	r3, [r7, #160]
 503 0414 9B00     		lsls	r3, r3, #2
 504 0416 07F1A801 		add	r1, r7, #168
 505 041a 0B44     		add	r3, r3, r1
 506 041c 53F8843C 		ldr	r3, [r3, #-132]
 507 0420 D7F88410 		ldr	r1, [r7, #132]
 508 0424 CB1A     		subs	r3, r1, r3
 509 0426 03FB02F3 		mul	r3, r3, r2
 510 042a 7B67     		str	r3, [r7, #116]
 122:SpO2.c        ****       n_y_ac=  an_y[an_ir_valley_locs[k]] + n_y_ac/ (an_ir_valley_locs[k+1] - an_ir_valley_locs[k])
 511              		.loc 1 122 0
 512 042c D7F8A030 		ldr	r3, [r7, #160]
 513 0430 9B00     		lsls	r3, r3, #2
 514 0432 07F1A802 		add	r2, r7, #168
 515 0436 1344     		add	r3, r3, r2
 516 0438 53F8843C 		ldr	r3, [r3, #-132]
 517 043c 784A     		ldr	r2, .L40+4
 518 043e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 519 0442 D7F8A030 		ldr	r3, [r7, #160]
 520 0446 0133     		adds	r3, r3, #1
 521 0448 9B00     		lsls	r3, r3, #2
 522 044a 07F1A801 		add	r1, r7, #168
 523 044e 0B44     		add	r3, r3, r1
 524 0450 53F8841C 		ldr	r1, [r3, #-132]
 525 0454 D7F8A030 		ldr	r3, [r7, #160]
 526 0458 9B00     		lsls	r3, r3, #2
 527 045a 07F1A800 		add	r0, r7, #168
 528 045e 0344     		add	r3, r3, r0
 529 0460 53F8843C 		ldr	r3, [r3, #-132]
 530 0464 CB1A     		subs	r3, r1, r3
 531 0466 796F     		ldr	r1, [r7, #116]
 532 0468 91FBF3F3 		sdiv	r3, r1, r3
 533 046c 1344     		add	r3, r3, r2
 534 046e 7B67     		str	r3, [r7, #116]
 123:SpO2.c        ****       n_y_ac=  an_y[n_y_dc_max_idx] - n_y_ac;    // subracting linear DC compoenents from raw 
 535              		.loc 1 123 0
 536 0470 6B4A     		ldr	r2, .L40+4
 537 0472 D7F88430 		ldr	r3, [r7, #132]
 538 0476 52F82320 		ldr	r2, [r2, r3, lsl #2]
 539 047a 7B6F     		ldr	r3, [r7, #116]
 540 047c D31A     		subs	r3, r2, r3
 541 047e 7B67     		str	r3, [r7, #116]
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 13


 124:SpO2.c        ****       n_x_ac= (an_x[an_ir_valley_locs[k+1]] - an_x[an_ir_valley_locs[k] ] )*(n_x_dc_max_idx -an_ir_
 542              		.loc 1 124 0
 543 0480 D7F8A030 		ldr	r3, [r7, #160]
 544 0484 0133     		adds	r3, r3, #1
 545 0486 9B00     		lsls	r3, r3, #2
 546 0488 07F1A802 		add	r2, r7, #168
 547 048c 1344     		add	r3, r3, r2
 548 048e 53F8843C 		ldr	r3, [r3, #-132]
 549 0492 624A     		ldr	r2, .L40
 550 0494 52F82320 		ldr	r2, [r2, r3, lsl #2]
 551 0498 D7F8A030 		ldr	r3, [r7, #160]
 552 049c 9B00     		lsls	r3, r3, #2
 553 049e 07F1A801 		add	r1, r7, #168
 554 04a2 0B44     		add	r3, r3, r1
 555 04a4 53F8843C 		ldr	r3, [r3, #-132]
 556 04a8 5C49     		ldr	r1, .L40
 557 04aa 51F82330 		ldr	r3, [r1, r3, lsl #2]
 558 04ae D21A     		subs	r2, r2, r3
 559 04b0 D7F8A030 		ldr	r3, [r7, #160]
 560 04b4 9B00     		lsls	r3, r3, #2
 561 04b6 07F1A801 		add	r1, r7, #168
 562 04ba 0B44     		add	r3, r3, r1
 563 04bc 53F8843C 		ldr	r3, [r3, #-132]
 564 04c0 D7F88010 		ldr	r1, [r7, #128]
 565 04c4 CB1A     		subs	r3, r1, r3
 566 04c6 03FB02F3 		mul	r3, r3, r2
 567 04ca 3B67     		str	r3, [r7, #112]
 125:SpO2.c        ****       n_x_ac=  an_x[an_ir_valley_locs[k]] + n_x_ac/ (an_ir_valley_locs[k+1] - an_ir_valley_locs[k])
 568              		.loc 1 125 0
 569 04cc D7F8A030 		ldr	r3, [r7, #160]
 570 04d0 9B00     		lsls	r3, r3, #2
 571 04d2 07F1A802 		add	r2, r7, #168
 572 04d6 1344     		add	r3, r3, r2
 573 04d8 53F8843C 		ldr	r3, [r3, #-132]
 574 04dc 4F4A     		ldr	r2, .L40
 575 04de 52F82320 		ldr	r2, [r2, r3, lsl #2]
 576 04e2 D7F8A030 		ldr	r3, [r7, #160]
 577 04e6 0133     		adds	r3, r3, #1
 578 04e8 9B00     		lsls	r3, r3, #2
 579 04ea 07F1A801 		add	r1, r7, #168
 580 04ee 0B44     		add	r3, r3, r1
 581 04f0 53F8841C 		ldr	r1, [r3, #-132]
 582 04f4 D7F8A030 		ldr	r3, [r7, #160]
 583 04f8 9B00     		lsls	r3, r3, #2
 584 04fa 07F1A800 		add	r0, r7, #168
 585 04fe 0344     		add	r3, r3, r0
 586 0500 53F8843C 		ldr	r3, [r3, #-132]
 587 0504 CB1A     		subs	r3, r1, r3
 588 0506 396F     		ldr	r1, [r7, #112]
 589 0508 91FBF3F3 		sdiv	r3, r1, r3
 590 050c 1344     		add	r3, r3, r2
 591 050e 3B67     		str	r3, [r7, #112]
 126:SpO2.c        ****       n_x_ac=  an_x[n_y_dc_max_idx] - n_x_ac;      // subracting linear DC compoenents from raw 
 592              		.loc 1 126 0
 593 0510 424A     		ldr	r2, .L40
 594 0512 D7F88430 		ldr	r3, [r7, #132]
 595 0516 52F82320 		ldr	r2, [r2, r3, lsl #2]
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 14


 596 051a 3B6F     		ldr	r3, [r7, #112]
 597 051c D31A     		subs	r3, r2, r3
 598 051e 3B67     		str	r3, [r7, #112]
 127:SpO2.c        ****       n_nume=( n_y_ac *n_x_dc_max)>>7 ; //prepare X100 to preserve floating value
 599              		.loc 1 127 0
 600 0520 7B6F     		ldr	r3, [r7, #116]
 601 0522 D7F88820 		ldr	r2, [r7, #136]
 602 0526 02FB03F3 		mul	r3, r2, r3
 603 052a DB11     		asrs	r3, r3, #7
 604 052c FB66     		str	r3, [r7, #108]
 128:SpO2.c        ****       n_denom= ( n_x_ac *n_y_dc_max)>>7;
 605              		.loc 1 128 0
 606 052e 3B6F     		ldr	r3, [r7, #112]
 607 0530 D7F88C20 		ldr	r2, [r7, #140]
 608 0534 02FB03F3 		mul	r3, r2, r3
 609 0538 DB11     		asrs	r3, r3, #7
 610 053a BB66     		str	r3, [r7, #104]
 129:SpO2.c        ****       if (n_denom>0  && n_i_ratio_count <5 &&  n_nume != 0)
 611              		.loc 1 129 0
 612 053c BB6E     		ldr	r3, [r7, #104]
 613 053e 002B     		cmp	r3, #0
 614 0540 1ADD     		ble	.L28
 615              		.loc 1 129 0 is_stmt 0 discriminator 1
 616 0542 D7F89C30 		ldr	r3, [r7, #156]
 617 0546 042B     		cmp	r3, #4
 618 0548 16DC     		bgt	.L28
 619              		.loc 1 129 0 discriminator 2
 620 054a FB6E     		ldr	r3, [r7, #108]
 621 054c 002B     		cmp	r3, #0
 622 054e 13D0     		beq	.L28
 130:SpO2.c        ****       {   
 131:SpO2.c        ****         an_ratio[n_i_ratio_count]= (n_nume*100)/n_denom ; //formular is ( n_y_ac *n_x_dc_max) / ( n
 623              		.loc 1 131 0 is_stmt 1
 624 0550 FB6E     		ldr	r3, [r7, #108]
 625 0552 6422     		movs	r2, #100
 626 0554 02FB03F2 		mul	r2, r2, r3
 627 0558 BB6E     		ldr	r3, [r7, #104]
 628 055a 92FBF3F2 		sdiv	r2, r2, r3
 629 055e D7F89C30 		ldr	r3, [r7, #156]
 630 0562 9B00     		lsls	r3, r3, #2
 631 0564 07F1A801 		add	r1, r7, #168
 632 0568 0B44     		add	r3, r3, r1
 633 056a 43F8982C 		str	r2, [r3, #-152]
 132:SpO2.c        ****         n_i_ratio_count++;
 634              		.loc 1 132 0
 635 056e D7F89C30 		ldr	r3, [r7, #156]
 636 0572 0133     		adds	r3, r3, #1
 637 0574 C7F89C30 		str	r3, [r7, #156]
 638              	.L28:
 113:SpO2.c        ****     n_y_dc_max= -16777216 ; 
 639              		.loc 1 113 0 discriminator 2
 640 0578 D7F8A030 		ldr	r3, [r7, #160]
 641 057c 0133     		adds	r3, r3, #1
 642 057e C7F8A030 		str	r3, [r7, #160]
 643              	.L27:
 113:SpO2.c        ****     n_y_dc_max= -16777216 ; 
 644              		.loc 1 113 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 15


 645 0582 BB6F     		ldr	r3, [r7, #120]
 646 0584 5A1E     		subs	r2, r3, #1
 647 0586 D7F8A030 		ldr	r3, [r7, #160]
 648 058a 9A42     		cmp	r2, r3
 649 058c 3FF7BDAE 		bgt	.L33
 133:SpO2.c        ****       }
 134:SpO2.c        ****     }
 135:SpO2.c        ****   }
 136:SpO2.c        ****   // choose median value since PPG signal may varies from beat to beat
 137:SpO2.c        ****   maxim_sort_ascend(an_ratio, n_i_ratio_count);
 650              		.loc 1 137 0 is_stmt 1
 651 0590 07F11003 		add	r3, r7, #16
 652 0594 D7F89C10 		ldr	r1, [r7, #156]
 653 0598 1846     		mov	r0, r3
 654 059a FFF7FEFF 		bl	maxim_sort_ascend
 138:SpO2.c        ****   n_middle_idx= n_i_ratio_count/2;
 655              		.loc 1 138 0
 656 059e D7F89C30 		ldr	r3, [r7, #156]
 657 05a2 DA0F     		lsrs	r2, r3, #31
 658 05a4 1344     		add	r3, r3, r2
 659 05a6 5B10     		asrs	r3, r3, #1
 660 05a8 7B66     		str	r3, [r7, #100]
 139:SpO2.c        **** 
 140:SpO2.c        ****   if (n_middle_idx >1)
 661              		.loc 1 140 0
 662 05aa 7B6E     		ldr	r3, [r7, #100]
 663 05ac 012B     		cmp	r3, #1
 664 05ae 14DD     		ble	.L34
 141:SpO2.c        ****     n_ratio_average =( an_ratio[n_middle_idx-1] +an_ratio[n_middle_idx])/2; // use median
 665              		.loc 1 141 0
 666 05b0 7B6E     		ldr	r3, [r7, #100]
 667 05b2 013B     		subs	r3, r3, #1
 668 05b4 9B00     		lsls	r3, r3, #2
 669 05b6 07F1A802 		add	r2, r7, #168
 670 05ba 1344     		add	r3, r3, r2
 671 05bc 53F8982C 		ldr	r2, [r3, #-152]
 672 05c0 7B6E     		ldr	r3, [r7, #100]
 673 05c2 9B00     		lsls	r3, r3, #2
 674 05c4 07F1A801 		add	r1, r7, #168
 675 05c8 0B44     		add	r3, r3, r1
 676 05ca 53F8983C 		ldr	r3, [r3, #-152]
 677 05ce 1344     		add	r3, r3, r2
 678 05d0 DA0F     		lsrs	r2, r3, #31
 679 05d2 1344     		add	r3, r3, r2
 680 05d4 5B10     		asrs	r3, r3, #1
 681 05d6 FB67     		str	r3, [r7, #124]
 682 05d8 07E0     		b	.L35
 683              	.L34:
 142:SpO2.c        ****   else
 143:SpO2.c        ****     n_ratio_average = an_ratio[n_middle_idx ];
 684              		.loc 1 143 0
 685 05da 7B6E     		ldr	r3, [r7, #100]
 686 05dc 9B00     		lsls	r3, r3, #2
 687 05de 07F1A802 		add	r2, r7, #168
 688 05e2 1344     		add	r3, r3, r2
 689 05e4 53F8983C 		ldr	r3, [r3, #-152]
 690 05e8 FB67     		str	r3, [r7, #124]
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 16


 691              	.L35:
 144:SpO2.c        **** 
 145:SpO2.c        ****   if( n_ratio_average>2 && n_ratio_average <101){
 692              		.loc 1 145 0
 693 05ea FB6F     		ldr	r3, [r7, #124]
 694 05ec 022B     		cmp	r3, #2
 695 05ee 0ADD     		ble	.L36
 696              		.loc 1 145 0 is_stmt 0 discriminator 1
 697 05f0 FB6F     		ldr	r3, [r7, #124]
 698 05f2 642B     		cmp	r3, #100
 699 05f4 07DC     		bgt	.L36
 146:SpO2.c        ****     //n_spo2_calc= uch_spo2_table[n_ratio_average] ;
 147:SpO2.c        ****     *pn_spo2 = n_ratio_average ;
 700              		.loc 1 147 0 is_stmt 1
 701 05f6 3B68     		ldr	r3, [r7]
 702 05f8 FA6F     		ldr	r2, [r7, #124]
 703 05fa 1A60     		str	r2, [r3]
 148:SpO2.c        ****     *pch_spo2_valid  = 1;//  float_SPO2 =  -45.060*n_ratio_average* n_ratio_average/10000 + 30.354 
 704              		.loc 1 148 0
 705 05fc D7F8B030 		ldr	r3, [r7, #176]
 706 0600 0122     		movs	r2, #1
 707 0602 1A70     		strb	r2, [r3]
 708 0604 06E0     		b	.L1
 709              	.L36:
 149:SpO2.c        ****   }
 150:SpO2.c        ****   else{
 151:SpO2.c        ****     *pn_spo2 =  -999 ; // do not use SPO2 since signal an_ratio is out of range
 710              		.loc 1 151 0
 711 0606 3B68     		ldr	r3, [r7]
 712 0608 064A     		ldr	r2, .L40+8
 713 060a 1A60     		str	r2, [r3]
 152:SpO2.c        ****     *pch_spo2_valid  = 0; 
 714              		.loc 1 152 0
 715 060c D7F8B030 		ldr	r3, [r7, #176]
 716 0610 0022     		movs	r2, #0
 717 0612 1A70     		strb	r2, [r3]
 718              	.L1:
 153:SpO2.c        ****   }
 154:SpO2.c        **** }
 719              		.loc 1 154 0
 720 0614 A837     		adds	r7, r7, #168
 721              		.cfi_def_cfa_offset 8
 722 0616 BD46     		mov	sp, r7
 723              		.cfi_def_cfa_register 13
 724              		@ sp needed
 725 0618 80BD     		pop	{r7, pc}
 726              	.L41:
 727 061a 00BF     		.align	2
 728              	.L40:
 729 061c 00000000 		.word	an_x
 730 0620 20030000 		.word	an_y
 731 0624 19FCFFFF 		.word	-999
 732              		.cfi_endproc
 733              	.LFE63:
 734              		.size	maxim_heart_rate_and_oxygen_saturation, .-maxim_heart_rate_and_oxygen_saturation
 735              		.section	.text.maxim_find_peaks,"ax",%progbits
 736              		.align	2
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 17


 737              		.global	maxim_find_peaks
 738              		.thumb
 739              		.thumb_func
 740              		.type	maxim_find_peaks, %function
 741              	maxim_find_peaks:
 742              	.LFB64:
 155:SpO2.c        **** 
 156:SpO2.c        **** 
 157:SpO2.c        **** void maxim_find_peaks( int32_t *pn_locs, int32_t *n_npks,  int32_t  *pn_x, int32_t n_size, int32_t 
 158:SpO2.c        **** /**
 159:SpO2.c        **** * \brief        Find peaks
 160:SpO2.c        **** * \par          Details
 161:SpO2.c        **** *               Find at most MAX_NUM peaks above MIN_HEIGHT separated by at least MIN_DISTANCE
 162:SpO2.c        **** *
 163:SpO2.c        **** * \retval       None
 164:SpO2.c        **** */
 165:SpO2.c        **** {
 743              		.loc 1 165 0
 744              		.cfi_startproc
 745              		@ args = 12, pretend = 0, frame = 16
 746              		@ frame_needed = 1, uses_anonymous_args = 0
 747 0000 80B5     		push	{r7, lr}
 748              		.cfi_def_cfa_offset 8
 749              		.cfi_offset 7, -8
 750              		.cfi_offset 14, -4
 751 0002 86B0     		sub	sp, sp, #24
 752              		.cfi_def_cfa_offset 32
 753 0004 02AF     		add	r7, sp, #8
 754              		.cfi_def_cfa 7, 24
 755 0006 F860     		str	r0, [r7, #12]
 756 0008 B960     		str	r1, [r7, #8]
 757 000a 7A60     		str	r2, [r7, #4]
 758 000c 3B60     		str	r3, [r7]
 166:SpO2.c        ****   maxim_peaks_above_min_height( pn_locs, n_npks, pn_x, n_size, n_min_height );
 759              		.loc 1 166 0
 760 000e BB69     		ldr	r3, [r7, #24]
 761 0010 0093     		str	r3, [sp]
 762 0012 3B68     		ldr	r3, [r7]
 763 0014 7A68     		ldr	r2, [r7, #4]
 764 0016 B968     		ldr	r1, [r7, #8]
 765 0018 F868     		ldr	r0, [r7, #12]
 766 001a FFF7FEFF 		bl	maxim_peaks_above_min_height
 167:SpO2.c        ****   maxim_remove_close_peaks( pn_locs, n_npks, pn_x, n_min_distance );
 767              		.loc 1 167 0
 768 001e FB69     		ldr	r3, [r7, #28]
 769 0020 7A68     		ldr	r2, [r7, #4]
 770 0022 B968     		ldr	r1, [r7, #8]
 771 0024 F868     		ldr	r0, [r7, #12]
 772 0026 FFF7FEFF 		bl	maxim_remove_close_peaks
 168:SpO2.c        ****   *n_npks = min( *n_npks, n_max_num );
 773              		.loc 1 168 0
 774 002a BB68     		ldr	r3, [r7, #8]
 775 002c 1A68     		ldr	r2, [r3]
 776 002e 3B6A     		ldr	r3, [r7, #32]
 777 0030 9A42     		cmp	r2, r3
 778 0032 A8BF     		it	ge
 779 0034 1A46     		movge	r2, r3
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 18


 780 0036 BB68     		ldr	r3, [r7, #8]
 781 0038 1A60     		str	r2, [r3]
 169:SpO2.c        **** }
 782              		.loc 1 169 0
 783 003a 00BF     		nop
 784 003c 1037     		adds	r7, r7, #16
 785              		.cfi_def_cfa_offset 8
 786 003e BD46     		mov	sp, r7
 787              		.cfi_def_cfa_register 13
 788              		@ sp needed
 789 0040 80BD     		pop	{r7, pc}
 790              		.cfi_endproc
 791              	.LFE64:
 792              		.size	maxim_find_peaks, .-maxim_find_peaks
 793 0042 00BF     		.section	.text.maxim_peaks_above_min_height,"ax",%progbits
 794              		.align	2
 795              		.global	maxim_peaks_above_min_height
 796              		.thumb
 797              		.thumb_func
 798              		.type	maxim_peaks_above_min_height, %function
 799              	maxim_peaks_above_min_height:
 800              	.LFB65:
 170:SpO2.c        **** 
 171:SpO2.c        **** void maxim_peaks_above_min_height( int32_t *pn_locs, int32_t *n_npks,  int32_t  *pn_x, int32_t n_si
 172:SpO2.c        **** /**
 173:SpO2.c        **** * \brief        Find peaks above n_min_height
 174:SpO2.c        **** * \par          Details
 175:SpO2.c        **** *               Find all peaks above MIN_HEIGHT
 176:SpO2.c        **** *
 177:SpO2.c        **** * \retval       None
 178:SpO2.c        **** */
 179:SpO2.c        **** {
 801              		.loc 1 179 0
 802              		.cfi_startproc
 803              		@ args = 4, pretend = 0, frame = 24
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806 0000 80B4     		push	{r7}
 807              		.cfi_def_cfa_offset 4
 808              		.cfi_offset 7, -4
 809 0002 87B0     		sub	sp, sp, #28
 810              		.cfi_def_cfa_offset 32
 811 0004 00AF     		add	r7, sp, #0
 812              		.cfi_def_cfa_register 7
 813 0006 F860     		str	r0, [r7, #12]
 814 0008 B960     		str	r1, [r7, #8]
 815 000a 7A60     		str	r2, [r7, #4]
 816 000c 3B60     		str	r3, [r7]
 180:SpO2.c        ****   int32_t i = 1, n_width;
 817              		.loc 1 180 0
 818 000e 0123     		movs	r3, #1
 819 0010 7B61     		str	r3, [r7, #20]
 181:SpO2.c        ****   *n_npks = 0;
 820              		.loc 1 181 0
 821 0012 BB68     		ldr	r3, [r7, #8]
 822 0014 0022     		movs	r2, #0
 823 0016 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 19


 182:SpO2.c        ****   
 183:SpO2.c        ****   while (i < n_size-1){
 824              		.loc 1 183 0
 825 0018 5AE0     		b	.L44
 826              	.L51:
 184:SpO2.c        ****     if (pn_x[i] > n_min_height && pn_x[i] > pn_x[i-1]){      // find left edge of potential peaks
 827              		.loc 1 184 0
 828 001a 7B69     		ldr	r3, [r7, #20]
 829 001c 9B00     		lsls	r3, r3, #2
 830 001e 7A68     		ldr	r2, [r7, #4]
 831 0020 1344     		add	r3, r3, r2
 832 0022 1A68     		ldr	r2, [r3]
 833 0024 3B6A     		ldr	r3, [r7, #32]
 834 0026 9A42     		cmp	r2, r3
 835 0028 4FDD     		ble	.L45
 836              		.loc 1 184 0 is_stmt 0 discriminator 1
 837 002a 7B69     		ldr	r3, [r7, #20]
 838 002c 9B00     		lsls	r3, r3, #2
 839 002e 7A68     		ldr	r2, [r7, #4]
 840 0030 1344     		add	r3, r3, r2
 841 0032 1A68     		ldr	r2, [r3]
 842 0034 7B69     		ldr	r3, [r7, #20]
 843 0036 03F18043 		add	r3, r3, #1073741824
 844 003a 013B     		subs	r3, r3, #1
 845 003c 9B00     		lsls	r3, r3, #2
 846 003e 7968     		ldr	r1, [r7, #4]
 847 0040 0B44     		add	r3, r3, r1
 848 0042 1B68     		ldr	r3, [r3]
 849 0044 9A42     		cmp	r2, r3
 850 0046 40DD     		ble	.L45
 185:SpO2.c        ****       n_width = 1;
 851              		.loc 1 185 0 is_stmt 1
 852 0048 0123     		movs	r3, #1
 853 004a 3B61     		str	r3, [r7, #16]
 186:SpO2.c        ****       while (i+n_width < n_size && pn_x[i] == pn_x[i+n_width])  // find flat peaks
 854              		.loc 1 186 0
 855 004c 02E0     		b	.L46
 856              	.L48:
 187:SpO2.c        ****         n_width++;
 857              		.loc 1 187 0
 858 004e 3B69     		ldr	r3, [r7, #16]
 859 0050 0133     		adds	r3, r3, #1
 860 0052 3B61     		str	r3, [r7, #16]
 861              	.L46:
 186:SpO2.c        ****       while (i+n_width < n_size && pn_x[i] == pn_x[i+n_width])  // find flat peaks
 862              		.loc 1 186 0
 863 0054 7A69     		ldr	r2, [r7, #20]
 864 0056 3B69     		ldr	r3, [r7, #16]
 865 0058 1A44     		add	r2, r2, r3
 866 005a 3B68     		ldr	r3, [r7]
 867 005c 9A42     		cmp	r2, r3
 868 005e 0DDA     		bge	.L47
 186:SpO2.c        ****       while (i+n_width < n_size && pn_x[i] == pn_x[i+n_width])  // find flat peaks
 869              		.loc 1 186 0 is_stmt 0 discriminator 1
 870 0060 7B69     		ldr	r3, [r7, #20]
 871 0062 9B00     		lsls	r3, r3, #2
 872 0064 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 20


 873 0066 1344     		add	r3, r3, r2
 874 0068 1A68     		ldr	r2, [r3]
 875 006a 7969     		ldr	r1, [r7, #20]
 876 006c 3B69     		ldr	r3, [r7, #16]
 877 006e 0B44     		add	r3, r3, r1
 878 0070 9B00     		lsls	r3, r3, #2
 879 0072 7968     		ldr	r1, [r7, #4]
 880 0074 0B44     		add	r3, r3, r1
 881 0076 1B68     		ldr	r3, [r3]
 882 0078 9A42     		cmp	r2, r3
 883 007a E8D0     		beq	.L48
 884              	.L47:
 188:SpO2.c        ****       if (pn_x[i] > pn_x[i+n_width] && (*n_npks) < 15 ){      // find right edge of peaks
 885              		.loc 1 188 0 is_stmt 1
 886 007c 7B69     		ldr	r3, [r7, #20]
 887 007e 9B00     		lsls	r3, r3, #2
 888 0080 7A68     		ldr	r2, [r7, #4]
 889 0082 1344     		add	r3, r3, r2
 890 0084 1A68     		ldr	r2, [r3]
 891 0086 7969     		ldr	r1, [r7, #20]
 892 0088 3B69     		ldr	r3, [r7, #16]
 893 008a 0B44     		add	r3, r3, r1
 894 008c 9B00     		lsls	r3, r3, #2
 895 008e 7968     		ldr	r1, [r7, #4]
 896 0090 0B44     		add	r3, r3, r1
 897 0092 1B68     		ldr	r3, [r3]
 898 0094 9A42     		cmp	r2, r3
 899 0096 13DD     		ble	.L49
 900              		.loc 1 188 0 is_stmt 0 discriminator 1
 901 0098 BB68     		ldr	r3, [r7, #8]
 902 009a 1B68     		ldr	r3, [r3]
 903 009c 0E2B     		cmp	r3, #14
 904 009e 0FDC     		bgt	.L49
 189:SpO2.c        ****         pn_locs[(*n_npks)++] = i;    
 905              		.loc 1 189 0 is_stmt 1
 906 00a0 BB68     		ldr	r3, [r7, #8]
 907 00a2 1B68     		ldr	r3, [r3]
 908 00a4 591C     		adds	r1, r3, #1
 909 00a6 BA68     		ldr	r2, [r7, #8]
 910 00a8 1160     		str	r1, [r2]
 911 00aa 9B00     		lsls	r3, r3, #2
 912 00ac FA68     		ldr	r2, [r7, #12]
 913 00ae 1344     		add	r3, r3, r2
 914 00b0 7A69     		ldr	r2, [r7, #20]
 915 00b2 1A60     		str	r2, [r3]
 190:SpO2.c        ****         // for flat peaks, peak location is left edge
 191:SpO2.c        ****         i += n_width+1;
 916              		.loc 1 191 0
 917 00b4 3B69     		ldr	r3, [r7, #16]
 918 00b6 0133     		adds	r3, r3, #1
 919 00b8 7A69     		ldr	r2, [r7, #20]
 920 00ba 1344     		add	r3, r3, r2
 921 00bc 7B61     		str	r3, [r7, #20]
 922 00be 03E0     		b	.L50
 923              	.L49:
 192:SpO2.c        ****       }
 193:SpO2.c        ****       else
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 21


 194:SpO2.c        ****         i += n_width;
 924              		.loc 1 194 0
 925 00c0 7A69     		ldr	r2, [r7, #20]
 926 00c2 3B69     		ldr	r3, [r7, #16]
 927 00c4 1344     		add	r3, r3, r2
 928 00c6 7B61     		str	r3, [r7, #20]
 929              	.L50:
 188:SpO2.c        ****         pn_locs[(*n_npks)++] = i;    
 930              		.loc 1 188 0
 931 00c8 02E0     		b	.L44
 932              	.L45:
 195:SpO2.c        ****     }
 196:SpO2.c        ****     else
 197:SpO2.c        ****       i++;
 933              		.loc 1 197 0
 934 00ca 7B69     		ldr	r3, [r7, #20]
 935 00cc 0133     		adds	r3, r3, #1
 936 00ce 7B61     		str	r3, [r7, #20]
 937              	.L44:
 183:SpO2.c        ****     if (pn_x[i] > n_min_height && pn_x[i] > pn_x[i-1]){      // find left edge of potential peaks
 938              		.loc 1 183 0
 939 00d0 3B68     		ldr	r3, [r7]
 940 00d2 5A1E     		subs	r2, r3, #1
 941 00d4 7B69     		ldr	r3, [r7, #20]
 942 00d6 9A42     		cmp	r2, r3
 943 00d8 9FDC     		bgt	.L51
 198:SpO2.c        ****   }
 199:SpO2.c        **** }
 944              		.loc 1 199 0
 945 00da 00BF     		nop
 946 00dc 1C37     		adds	r7, r7, #28
 947              		.cfi_def_cfa_offset 4
 948 00de BD46     		mov	sp, r7
 949              		.cfi_def_cfa_register 13
 950              		@ sp needed
 951 00e0 80BC     		pop	{r7}
 952              		.cfi_restore 7
 953              		.cfi_def_cfa_offset 0
 954 00e2 7047     		bx	lr
 955              		.cfi_endproc
 956              	.LFE65:
 957              		.size	maxim_peaks_above_min_height, .-maxim_peaks_above_min_height
 958              		.section	.text.maxim_remove_close_peaks,"ax",%progbits
 959              		.align	2
 960              		.global	maxim_remove_close_peaks
 961              		.thumb
 962              		.thumb_func
 963              		.type	maxim_remove_close_peaks, %function
 964              	maxim_remove_close_peaks:
 965              	.LFB66:
 200:SpO2.c        **** 
 201:SpO2.c        **** void maxim_remove_close_peaks(int32_t *pn_locs, int32_t *pn_npks, int32_t *pn_x, int32_t n_min_dist
 202:SpO2.c        **** /**
 203:SpO2.c        **** * \brief        Remove peaks
 204:SpO2.c        **** * \par          Details
 205:SpO2.c        **** *               Remove peaks separated by less than MIN_DISTANCE
 206:SpO2.c        **** *
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 22


 207:SpO2.c        **** * \retval       None
 208:SpO2.c        **** */
 209:SpO2.c        **** {
 966              		.loc 1 209 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 32
 969              		@ frame_needed = 1, uses_anonymous_args = 0
 970 0000 80B5     		push	{r7, lr}
 971              		.cfi_def_cfa_offset 8
 972              		.cfi_offset 7, -8
 973              		.cfi_offset 14, -4
 974 0002 88B0     		sub	sp, sp, #32
 975              		.cfi_def_cfa_offset 40
 976 0004 00AF     		add	r7, sp, #0
 977              		.cfi_def_cfa_register 7
 978 0006 F860     		str	r0, [r7, #12]
 979 0008 B960     		str	r1, [r7, #8]
 980 000a 7A60     		str	r2, [r7, #4]
 981 000c 3B60     		str	r3, [r7]
 210:SpO2.c        ****     
 211:SpO2.c        ****   int32_t i, j, n_old_npks, n_dist;
 212:SpO2.c        ****     
 213:SpO2.c        ****   /* Order peaks from large to small */
 214:SpO2.c        ****   maxim_sort_indices_descend( pn_x, pn_locs, *pn_npks );
 982              		.loc 1 214 0
 983 000e BB68     		ldr	r3, [r7, #8]
 984 0010 1B68     		ldr	r3, [r3]
 985 0012 1A46     		mov	r2, r3
 986 0014 F968     		ldr	r1, [r7, #12]
 987 0016 7868     		ldr	r0, [r7, #4]
 988 0018 FFF7FEFF 		bl	maxim_sort_indices_descend
 215:SpO2.c        **** 
 216:SpO2.c        ****   for ( i = -1; i < *pn_npks; i++ ){
 989              		.loc 1 216 0
 990 001c 4FF0FF33 		mov	r3, #-1
 991 0020 FB61     		str	r3, [r7, #28]
 992 0022 3EE0     		b	.L53
 993              	.L60:
 217:SpO2.c        ****     n_old_npks = *pn_npks;
 994              		.loc 1 217 0
 995 0024 BB68     		ldr	r3, [r7, #8]
 996 0026 1B68     		ldr	r3, [r3]
 997 0028 7B61     		str	r3, [r7, #20]
 218:SpO2.c        ****     *pn_npks = i+1;
 998              		.loc 1 218 0
 999 002a FB69     		ldr	r3, [r7, #28]
 1000 002c 5A1C     		adds	r2, r3, #1
 1001 002e BB68     		ldr	r3, [r7, #8]
 1002 0030 1A60     		str	r2, [r3]
 219:SpO2.c        ****     for ( j = i+1; j < n_old_npks; j++ ){
 1003              		.loc 1 219 0
 1004 0032 FB69     		ldr	r3, [r7, #28]
 1005 0034 0133     		adds	r3, r3, #1
 1006 0036 BB61     		str	r3, [r7, #24]
 1007 0038 2CE0     		b	.L54
 1008              	.L59:
 220:SpO2.c        ****       n_dist =  pn_locs[j] - ( i == -1 ? -1 : pn_locs[i] ); // lag-zero peak of autocorr is at inde
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 23


 1009              		.loc 1 220 0
 1010 003a BB69     		ldr	r3, [r7, #24]
 1011 003c 9B00     		lsls	r3, r3, #2
 1012 003e FA68     		ldr	r2, [r7, #12]
 1013 0040 1344     		add	r3, r3, r2
 1014 0042 1A68     		ldr	r2, [r3]
 1015 0044 FB69     		ldr	r3, [r7, #28]
 1016 0046 B3F1FF3F 		cmp	r3, #-1
 1017 004a 05D0     		beq	.L55
 1018              		.loc 1 220 0 is_stmt 0 discriminator 1
 1019 004c FB69     		ldr	r3, [r7, #28]
 1020 004e 9B00     		lsls	r3, r3, #2
 1021 0050 F968     		ldr	r1, [r7, #12]
 1022 0052 0B44     		add	r3, r3, r1
 1023 0054 1B68     		ldr	r3, [r3]
 1024 0056 01E0     		b	.L56
 1025              	.L55:
 1026              		.loc 1 220 0 discriminator 2
 1027 0058 4FF0FF33 		mov	r3, #-1
 1028              	.L56:
 1029              		.loc 1 220 0 discriminator 4
 1030 005c D31A     		subs	r3, r2, r3
 1031 005e 3B61     		str	r3, [r7, #16]
 221:SpO2.c        ****       if ( n_dist > n_min_distance || n_dist < -n_min_distance )
 1032              		.loc 1 221 0 is_stmt 1 discriminator 4
 1033 0060 3A69     		ldr	r2, [r7, #16]
 1034 0062 3B68     		ldr	r3, [r7]
 1035 0064 9A42     		cmp	r2, r3
 1036 0066 04DC     		bgt	.L57
 1037              		.loc 1 221 0 is_stmt 0 discriminator 1
 1038 0068 3B68     		ldr	r3, [r7]
 1039 006a 5A42     		negs	r2, r3
 1040 006c 3B69     		ldr	r3, [r7, #16]
 1041 006e 9A42     		cmp	r2, r3
 1042 0070 0DDD     		ble	.L58
 1043              	.L57:
 222:SpO2.c        ****         pn_locs[(*pn_npks)++] = pn_locs[j];
 1044              		.loc 1 222 0 is_stmt 1
 1045 0072 BB68     		ldr	r3, [r7, #8]
 1046 0074 1B68     		ldr	r3, [r3]
 1047 0076 591C     		adds	r1, r3, #1
 1048 0078 BA68     		ldr	r2, [r7, #8]
 1049 007a 1160     		str	r1, [r2]
 1050 007c 9B00     		lsls	r3, r3, #2
 1051 007e FA68     		ldr	r2, [r7, #12]
 1052 0080 1344     		add	r3, r3, r2
 1053 0082 BA69     		ldr	r2, [r7, #24]
 1054 0084 9200     		lsls	r2, r2, #2
 1055 0086 F968     		ldr	r1, [r7, #12]
 1056 0088 0A44     		add	r2, r2, r1
 1057 008a 1268     		ldr	r2, [r2]
 1058 008c 1A60     		str	r2, [r3]
 1059              	.L58:
 219:SpO2.c        ****       n_dist =  pn_locs[j] - ( i == -1 ? -1 : pn_locs[i] ); // lag-zero peak of autocorr is at inde
 1060              		.loc 1 219 0 discriminator 2
 1061 008e BB69     		ldr	r3, [r7, #24]
 1062 0090 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 24


 1063 0092 BB61     		str	r3, [r7, #24]
 1064              	.L54:
 219:SpO2.c        ****       n_dist =  pn_locs[j] - ( i == -1 ? -1 : pn_locs[i] ); // lag-zero peak of autocorr is at inde
 1065              		.loc 1 219 0 is_stmt 0 discriminator 1
 1066 0094 BA69     		ldr	r2, [r7, #24]
 1067 0096 7B69     		ldr	r3, [r7, #20]
 1068 0098 9A42     		cmp	r2, r3
 1069 009a CEDB     		blt	.L59
 216:SpO2.c        ****     n_old_npks = *pn_npks;
 1070              		.loc 1 216 0 is_stmt 1 discriminator 2
 1071 009c FB69     		ldr	r3, [r7, #28]
 1072 009e 0133     		adds	r3, r3, #1
 1073 00a0 FB61     		str	r3, [r7, #28]
 1074              	.L53:
 216:SpO2.c        ****     n_old_npks = *pn_npks;
 1075              		.loc 1 216 0 is_stmt 0 discriminator 1
 1076 00a2 BB68     		ldr	r3, [r7, #8]
 1077 00a4 1A68     		ldr	r2, [r3]
 1078 00a6 FB69     		ldr	r3, [r7, #28]
 1079 00a8 9A42     		cmp	r2, r3
 1080 00aa BBDC     		bgt	.L60
 223:SpO2.c        ****     }
 224:SpO2.c        ****   }
 225:SpO2.c        **** 
 226:SpO2.c        ****   // Resort indices int32_to ascending order
 227:SpO2.c        ****   maxim_sort_ascend( pn_locs, *pn_npks );
 1081              		.loc 1 227 0 is_stmt 1
 1082 00ac BB68     		ldr	r3, [r7, #8]
 1083 00ae 1B68     		ldr	r3, [r3]
 1084 00b0 1946     		mov	r1, r3
 1085 00b2 F868     		ldr	r0, [r7, #12]
 1086 00b4 FFF7FEFF 		bl	maxim_sort_ascend
 228:SpO2.c        **** }
 1087              		.loc 1 228 0
 1088 00b8 00BF     		nop
 1089 00ba 2037     		adds	r7, r7, #32
 1090              		.cfi_def_cfa_offset 8
 1091 00bc BD46     		mov	sp, r7
 1092              		.cfi_def_cfa_register 13
 1093              		@ sp needed
 1094 00be 80BD     		pop	{r7, pc}
 1095              		.cfi_endproc
 1096              	.LFE66:
 1097              		.size	maxim_remove_close_peaks, .-maxim_remove_close_peaks
 1098              		.section	.text.maxim_sort_ascend,"ax",%progbits
 1099              		.align	2
 1100              		.global	maxim_sort_ascend
 1101              		.thumb
 1102              		.thumb_func
 1103              		.type	maxim_sort_ascend, %function
 1104              	maxim_sort_ascend:
 1105              	.LFB67:
 229:SpO2.c        **** 
 230:SpO2.c        **** void maxim_sort_ascend(int32_t  *pn_x, int32_t n_size) 
 231:SpO2.c        **** /**
 232:SpO2.c        **** * \brief        Sort array
 233:SpO2.c        **** * \par          Details
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 25


 234:SpO2.c        **** *               Sort array in ascending order (insertion sort algorithm)
 235:SpO2.c        **** *
 236:SpO2.c        **** * \retval       None
 237:SpO2.c        **** */
 238:SpO2.c        **** {
 1106              		.loc 1 238 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 24
 1109              		@ frame_needed = 1, uses_anonymous_args = 0
 1110              		@ link register save eliminated.
 1111 0000 80B4     		push	{r7}
 1112              		.cfi_def_cfa_offset 4
 1113              		.cfi_offset 7, -4
 1114 0002 87B0     		sub	sp, sp, #28
 1115              		.cfi_def_cfa_offset 32
 1116 0004 00AF     		add	r7, sp, #0
 1117              		.cfi_def_cfa_register 7
 1118 0006 7860     		str	r0, [r7, #4]
 1119 0008 3960     		str	r1, [r7]
 239:SpO2.c        ****   int32_t i, j, n_temp;
 240:SpO2.c        ****   for (i = 1; i < n_size; i++) {
 1120              		.loc 1 240 0
 1121 000a 0123     		movs	r3, #1
 1122 000c 7B61     		str	r3, [r7, #20]
 1123 000e 2FE0     		b	.L62
 1124              	.L66:
 241:SpO2.c        ****     n_temp = pn_x[i];
 1125              		.loc 1 241 0
 1126 0010 7B69     		ldr	r3, [r7, #20]
 1127 0012 9B00     		lsls	r3, r3, #2
 1128 0014 7A68     		ldr	r2, [r7, #4]
 1129 0016 1344     		add	r3, r3, r2
 1130 0018 1B68     		ldr	r3, [r3]
 1131 001a FB60     		str	r3, [r7, #12]
 242:SpO2.c        ****     for (j = i; j > 0 && n_temp < pn_x[j-1]; j--)
 1132              		.loc 1 242 0
 1133 001c 7B69     		ldr	r3, [r7, #20]
 1134 001e 3B61     		str	r3, [r7, #16]
 1135 0020 0FE0     		b	.L63
 1136              	.L65:
 243:SpO2.c        ****         pn_x[j] = pn_x[j-1];
 1137              		.loc 1 243 0 discriminator 4
 1138 0022 3B69     		ldr	r3, [r7, #16]
 1139 0024 9B00     		lsls	r3, r3, #2
 1140 0026 7A68     		ldr	r2, [r7, #4]
 1141 0028 1A44     		add	r2, r2, r3
 1142 002a 3B69     		ldr	r3, [r7, #16]
 1143 002c 03F18043 		add	r3, r3, #1073741824
 1144 0030 013B     		subs	r3, r3, #1
 1145 0032 9B00     		lsls	r3, r3, #2
 1146 0034 7968     		ldr	r1, [r7, #4]
 1147 0036 0B44     		add	r3, r3, r1
 1148 0038 1B68     		ldr	r3, [r3]
 1149 003a 1360     		str	r3, [r2]
 242:SpO2.c        ****     for (j = i; j > 0 && n_temp < pn_x[j-1]; j--)
 1150              		.loc 1 242 0 discriminator 4
 1151 003c 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 26


 1152 003e 013B     		subs	r3, r3, #1
 1153 0040 3B61     		str	r3, [r7, #16]
 1154              	.L63:
 242:SpO2.c        ****     for (j = i; j > 0 && n_temp < pn_x[j-1]; j--)
 1155              		.loc 1 242 0 is_stmt 0 discriminator 1
 1156 0042 3B69     		ldr	r3, [r7, #16]
 1157 0044 002B     		cmp	r3, #0
 1158 0046 0ADD     		ble	.L64
 242:SpO2.c        ****     for (j = i; j > 0 && n_temp < pn_x[j-1]; j--)
 1159              		.loc 1 242 0 discriminator 3
 1160 0048 3B69     		ldr	r3, [r7, #16]
 1161 004a 03F18043 		add	r3, r3, #1073741824
 1162 004e 013B     		subs	r3, r3, #1
 1163 0050 9B00     		lsls	r3, r3, #2
 1164 0052 7A68     		ldr	r2, [r7, #4]
 1165 0054 1344     		add	r3, r3, r2
 1166 0056 1A68     		ldr	r2, [r3]
 1167 0058 FB68     		ldr	r3, [r7, #12]
 1168 005a 9A42     		cmp	r2, r3
 1169 005c E1DC     		bgt	.L65
 1170              	.L64:
 244:SpO2.c        ****     pn_x[j] = n_temp;
 1171              		.loc 1 244 0 is_stmt 1 discriminator 2
 1172 005e 3B69     		ldr	r3, [r7, #16]
 1173 0060 9B00     		lsls	r3, r3, #2
 1174 0062 7A68     		ldr	r2, [r7, #4]
 1175 0064 1344     		add	r3, r3, r2
 1176 0066 FA68     		ldr	r2, [r7, #12]
 1177 0068 1A60     		str	r2, [r3]
 240:SpO2.c        ****     n_temp = pn_x[i];
 1178              		.loc 1 240 0 discriminator 2
 1179 006a 7B69     		ldr	r3, [r7, #20]
 1180 006c 0133     		adds	r3, r3, #1
 1181 006e 7B61     		str	r3, [r7, #20]
 1182              	.L62:
 240:SpO2.c        ****     n_temp = pn_x[i];
 1183              		.loc 1 240 0 is_stmt 0 discriminator 1
 1184 0070 7A69     		ldr	r2, [r7, #20]
 1185 0072 3B68     		ldr	r3, [r7]
 1186 0074 9A42     		cmp	r2, r3
 1187 0076 CBDB     		blt	.L66
 245:SpO2.c        ****   }
 246:SpO2.c        **** }
 1188              		.loc 1 246 0 is_stmt 1
 1189 0078 00BF     		nop
 1190 007a 1C37     		adds	r7, r7, #28
 1191              		.cfi_def_cfa_offset 4
 1192 007c BD46     		mov	sp, r7
 1193              		.cfi_def_cfa_register 13
 1194              		@ sp needed
 1195 007e 80BC     		pop	{r7}
 1196              		.cfi_restore 7
 1197              		.cfi_def_cfa_offset 0
 1198 0080 7047     		bx	lr
 1199              		.cfi_endproc
 1200              	.LFE67:
 1201              		.size	maxim_sort_ascend, .-maxim_sort_ascend
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 27


 1202 0082 00BF     		.section	.text.maxim_sort_indices_descend,"ax",%progbits
 1203              		.align	2
 1204              		.global	maxim_sort_indices_descend
 1205              		.thumb
 1206              		.thumb_func
 1207              		.type	maxim_sort_indices_descend, %function
 1208              	maxim_sort_indices_descend:
 1209              	.LFB68:
 247:SpO2.c        **** 
 248:SpO2.c        **** void maxim_sort_indices_descend(  int32_t  *pn_x, int32_t *pn_indx, int32_t n_size)
 249:SpO2.c        **** /**
 250:SpO2.c        **** * \brief        Sort indices
 251:SpO2.c        **** * \par          Details
 252:SpO2.c        **** *               Sort indices according to descending order (insertion sort algorithm)
 253:SpO2.c        **** *
 254:SpO2.c        **** * \retval       None
 255:SpO2.c        **** */ 
 256:SpO2.c        **** {
 1210              		.loc 1 256 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 32
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
 1215 0000 80B4     		push	{r7}
 1216              		.cfi_def_cfa_offset 4
 1217              		.cfi_offset 7, -4
 1218 0002 89B0     		sub	sp, sp, #36
 1219              		.cfi_def_cfa_offset 40
 1220 0004 00AF     		add	r7, sp, #0
 1221              		.cfi_def_cfa_register 7
 1222 0006 F860     		str	r0, [r7, #12]
 1223 0008 B960     		str	r1, [r7, #8]
 1224 000a 7A60     		str	r2, [r7, #4]
 257:SpO2.c        ****   int32_t i, j, n_temp;
 258:SpO2.c        ****   for (i = 1; i < n_size; i++) {
 1225              		.loc 1 258 0
 1226 000c 0123     		movs	r3, #1
 1227 000e FB61     		str	r3, [r7, #28]
 1228 0010 37E0     		b	.L68
 1229              	.L72:
 259:SpO2.c        ****     n_temp = pn_indx[i];
 1230              		.loc 1 259 0
 1231 0012 FB69     		ldr	r3, [r7, #28]
 1232 0014 9B00     		lsls	r3, r3, #2
 1233 0016 BA68     		ldr	r2, [r7, #8]
 1234 0018 1344     		add	r3, r3, r2
 1235 001a 1B68     		ldr	r3, [r3]
 1236 001c 7B61     		str	r3, [r7, #20]
 260:SpO2.c        ****     for (j = i; j > 0 && pn_x[n_temp] > pn_x[pn_indx[j-1]]; j--)
 1237              		.loc 1 260 0
 1238 001e FB69     		ldr	r3, [r7, #28]
 1239 0020 BB61     		str	r3, [r7, #24]
 1240 0022 0FE0     		b	.L69
 1241              	.L71:
 261:SpO2.c        ****       pn_indx[j] = pn_indx[j-1];
 1242              		.loc 1 261 0 discriminator 4
 1243 0024 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 28


 1244 0026 9B00     		lsls	r3, r3, #2
 1245 0028 BA68     		ldr	r2, [r7, #8]
 1246 002a 1A44     		add	r2, r2, r3
 1247 002c BB69     		ldr	r3, [r7, #24]
 1248 002e 03F18043 		add	r3, r3, #1073741824
 1249 0032 013B     		subs	r3, r3, #1
 1250 0034 9B00     		lsls	r3, r3, #2
 1251 0036 B968     		ldr	r1, [r7, #8]
 1252 0038 0B44     		add	r3, r3, r1
 1253 003a 1B68     		ldr	r3, [r3]
 1254 003c 1360     		str	r3, [r2]
 260:SpO2.c        ****     for (j = i; j > 0 && pn_x[n_temp] > pn_x[pn_indx[j-1]]; j--)
 1255              		.loc 1 260 0 discriminator 4
 1256 003e BB69     		ldr	r3, [r7, #24]
 1257 0040 013B     		subs	r3, r3, #1
 1258 0042 BB61     		str	r3, [r7, #24]
 1259              	.L69:
 260:SpO2.c        ****     for (j = i; j > 0 && pn_x[n_temp] > pn_x[pn_indx[j-1]]; j--)
 1260              		.loc 1 260 0 is_stmt 0 discriminator 1
 1261 0044 BB69     		ldr	r3, [r7, #24]
 1262 0046 002B     		cmp	r3, #0
 1263 0048 12DD     		ble	.L70
 260:SpO2.c        ****     for (j = i; j > 0 && pn_x[n_temp] > pn_x[pn_indx[j-1]]; j--)
 1264              		.loc 1 260 0 discriminator 3
 1265 004a 7B69     		ldr	r3, [r7, #20]
 1266 004c 9B00     		lsls	r3, r3, #2
 1267 004e FA68     		ldr	r2, [r7, #12]
 1268 0050 1344     		add	r3, r3, r2
 1269 0052 1A68     		ldr	r2, [r3]
 1270 0054 BB69     		ldr	r3, [r7, #24]
 1271 0056 03F18043 		add	r3, r3, #1073741824
 1272 005a 013B     		subs	r3, r3, #1
 1273 005c 9B00     		lsls	r3, r3, #2
 1274 005e B968     		ldr	r1, [r7, #8]
 1275 0060 0B44     		add	r3, r3, r1
 1276 0062 1B68     		ldr	r3, [r3]
 1277 0064 9B00     		lsls	r3, r3, #2
 1278 0066 F968     		ldr	r1, [r7, #12]
 1279 0068 0B44     		add	r3, r3, r1
 1280 006a 1B68     		ldr	r3, [r3]
 1281 006c 9A42     		cmp	r2, r3
 1282 006e D9DC     		bgt	.L71
 1283              	.L70:
 262:SpO2.c        ****     pn_indx[j] = n_temp;
 1284              		.loc 1 262 0 is_stmt 1 discriminator 2
 1285 0070 BB69     		ldr	r3, [r7, #24]
 1286 0072 9B00     		lsls	r3, r3, #2
 1287 0074 BA68     		ldr	r2, [r7, #8]
 1288 0076 1344     		add	r3, r3, r2
 1289 0078 7A69     		ldr	r2, [r7, #20]
 1290 007a 1A60     		str	r2, [r3]
 258:SpO2.c        ****     n_temp = pn_indx[i];
 1291              		.loc 1 258 0 discriminator 2
 1292 007c FB69     		ldr	r3, [r7, #28]
 1293 007e 0133     		adds	r3, r3, #1
 1294 0080 FB61     		str	r3, [r7, #28]
 1295              	.L68:
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 29


 258:SpO2.c        ****     n_temp = pn_indx[i];
 1296              		.loc 1 258 0 is_stmt 0 discriminator 1
 1297 0082 FA69     		ldr	r2, [r7, #28]
 1298 0084 7B68     		ldr	r3, [r7, #4]
 1299 0086 9A42     		cmp	r2, r3
 1300 0088 C3DB     		blt	.L72
 263:SpO2.c        ****   }
 264:SpO2.c        **** }
 1301              		.loc 1 264 0 is_stmt 1
 1302 008a 00BF     		nop
 1303 008c 2437     		adds	r7, r7, #36
 1304              		.cfi_def_cfa_offset 4
 1305 008e BD46     		mov	sp, r7
 1306              		.cfi_def_cfa_register 13
 1307              		@ sp needed
 1308 0090 80BC     		pop	{r7}
 1309              		.cfi_restore 7
 1310              		.cfi_def_cfa_offset 0
 1311 0092 7047     		bx	lr
 1312              		.cfi_endproc
 1313              	.LFE68:
 1314              		.size	maxim_sort_indices_descend, .-maxim_sort_indices_descend
 1315              		.text
 1316              	.Letext0:
 1317              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1318              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1319              		.file 4 "SpO2.h"
 1320              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1321              		.section	.debug_info,"",%progbits
 1322              	.Ldebug_info0:
 1323 0000 14050000 		.4byte	0x514
 1324 0004 0400     		.2byte	0x4
 1325 0006 00000000 		.4byte	.Ldebug_abbrev0
 1326 000a 04       		.byte	0x4
 1327 000b 01       		.uleb128 0x1
 1328 000c 5E000000 		.4byte	.LASF65
 1329 0010 0C       		.byte	0xc
 1330 0011 56020000 		.4byte	.LASF66
 1331 0015 DC010000 		.4byte	.LASF67
 1332 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1333 001d 00000000 		.4byte	0
 1334 0021 00000000 		.4byte	.Ldebug_line0
 1335 0025 02       		.uleb128 0x2
 1336 0026 27030000 		.4byte	.LASF4
 1337 002a 02       		.byte	0x2
 1338 002b 1B       		.byte	0x1b
 1339 002c 30000000 		.4byte	0x30
 1340 0030 03       		.uleb128 0x3
 1341 0031 01       		.byte	0x1
 1342 0032 06       		.byte	0x6
 1343 0033 A7030000 		.4byte	.LASF0
 1344 0037 03       		.uleb128 0x3
 1345 0038 01       		.byte	0x1
 1346 0039 08       		.byte	0x8
 1347 003a 9F020000 		.4byte	.LASF1
 1348 003e 03       		.uleb128 0x3
 1349 003f 02       		.byte	0x2
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 30


 1350 0040 05       		.byte	0x5
 1351 0041 2D000000 		.4byte	.LASF2
 1352 0045 03       		.uleb128 0x3
 1353 0046 02       		.byte	0x2
 1354 0047 07       		.byte	0x7
 1355 0048 14030000 		.4byte	.LASF3
 1356 004c 02       		.uleb128 0x2
 1357 004d 93030000 		.4byte	.LASF5
 1358 0051 02       		.byte	0x2
 1359 0052 3F       		.byte	0x3f
 1360 0053 57000000 		.4byte	0x57
 1361 0057 03       		.uleb128 0x3
 1362 0058 04       		.byte	0x4
 1363 0059 05       		.byte	0x5
 1364 005a 3E020000 		.4byte	.LASF6
 1365 005e 02       		.uleb128 0x2
 1366 005f 11010000 		.4byte	.LASF7
 1367 0063 02       		.byte	0x2
 1368 0064 41       		.byte	0x41
 1369 0065 69000000 		.4byte	0x69
 1370 0069 03       		.uleb128 0x3
 1371 006a 04       		.byte	0x4
 1372 006b 07       		.byte	0x7
 1373 006c 02030000 		.4byte	.LASF8
 1374 0070 03       		.uleb128 0x3
 1375 0071 08       		.byte	0x8
 1376 0072 05       		.byte	0x5
 1377 0073 30020000 		.4byte	.LASF9
 1378 0077 03       		.uleb128 0x3
 1379 0078 08       		.byte	0x8
 1380 0079 07       		.byte	0x7
 1381 007a D5020000 		.4byte	.LASF10
 1382 007e 04       		.uleb128 0x4
 1383 007f 04       		.byte	0x4
 1384 0080 05       		.byte	0x5
 1385 0081 696E7400 		.ascii	"int\000"
 1386 0085 03       		.uleb128 0x3
 1387 0086 04       		.byte	0x4
 1388 0087 07       		.byte	0x7
 1389 0088 F5020000 		.4byte	.LASF11
 1390 008c 02       		.uleb128 0x2
 1391 008d 26000000 		.4byte	.LASF12
 1392 0091 03       		.byte	0x3
 1393 0092 14       		.byte	0x14
 1394 0093 25000000 		.4byte	0x25
 1395 0097 02       		.uleb128 0x2
 1396 0098 3D030000 		.4byte	.LASF13
 1397 009c 03       		.byte	0x3
 1398 009d 2C       		.byte	0x2c
 1399 009e 4C000000 		.4byte	0x4c
 1400 00a2 02       		.uleb128 0x2
 1401 00a3 EC020000 		.4byte	.LASF14
 1402 00a7 03       		.byte	0x3
 1403 00a8 30       		.byte	0x30
 1404 00a9 5E000000 		.4byte	0x5e
 1405 00ad 03       		.uleb128 0x3
 1406 00ae 04       		.byte	0x4
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 31


 1407 00af 04       		.byte	0x4
 1408 00b0 19000000 		.4byte	.LASF15
 1409 00b4 03       		.uleb128 0x3
 1410 00b5 08       		.byte	0x8
 1411 00b6 04       		.byte	0x4
 1412 00b7 E2030000 		.4byte	.LASF16
 1413 00bb 03       		.uleb128 0x3
 1414 00bc 01       		.byte	0x1
 1415 00bd 08       		.byte	0x8
 1416 00be 38030000 		.4byte	.LASF17
 1417 00c2 03       		.uleb128 0x3
 1418 00c3 08       		.byte	0x8
 1419 00c4 04       		.byte	0x4
 1420 00c5 05010000 		.4byte	.LASF18
 1421 00c9 03       		.uleb128 0x3
 1422 00ca 04       		.byte	0x4
 1423 00cb 07       		.byte	0x7
 1424 00cc 37000000 		.4byte	.LASF19
 1425 00d0 05       		.uleb128 0x5
 1426 00d1 8F010000 		.4byte	.LASF45
 1427 00d5 01       		.byte	0x1
 1428 00d6 11       		.byte	0x11
 1429 00d7 00000000 		.4byte	.LFB63
 1430 00db 28060000 		.4byte	.LFE63-.LFB63
 1431 00df 01       		.uleb128 0x1
 1432 00e0 9C       		.byte	0x9c
 1433 00e1 71020000 		.4byte	0x271
 1434 00e5 06       		.uleb128 0x6
 1435 00e6 7A010000 		.4byte	.LASF20
 1436 00ea 01       		.byte	0x1
 1437 00eb 11       		.byte	0x11
 1438 00ec 71020000 		.4byte	0x271
 1439 00f0 03       		.uleb128 0x3
 1440 00f1 91       		.byte	0x91
 1441 00f2 DC7E     		.sleb128 -164
 1442 00f4 06       		.uleb128 0x6
 1443 00f5 59030000 		.4byte	.LASF21
 1444 00f9 01       		.byte	0x1
 1445 00fa 11       		.byte	0x11
 1446 00fb 97000000 		.4byte	0x97
 1447 00ff 03       		.uleb128 0x3
 1448 0100 91       		.byte	0x91
 1449 0101 D87E     		.sleb128 -168
 1450 0103 06       		.uleb128 0x6
 1451 0104 CD010000 		.4byte	.LASF22
 1452 0108 01       		.byte	0x1
 1453 0109 11       		.byte	0x11
 1454 010a 71020000 		.4byte	0x271
 1455 010e 03       		.uleb128 0x3
 1456 010f 91       		.byte	0x91
 1457 0110 D47E     		.sleb128 -172
 1458 0112 06       		.uleb128 0x6
 1459 0113 C2020000 		.4byte	.LASF23
 1460 0117 01       		.byte	0x1
 1461 0118 11       		.byte	0x11
 1462 0119 77020000 		.4byte	0x277
 1463 011d 03       		.uleb128 0x3
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 32


 1464 011e 91       		.byte	0x91
 1465 011f D07E     		.sleb128 -176
 1466 0121 06       		.uleb128 0x6
 1467 0122 47020000 		.4byte	.LASF24
 1468 0126 01       		.byte	0x1
 1469 0127 11       		.byte	0x11
 1470 0128 7D020000 		.4byte	0x27d
 1471 012c 02       		.uleb128 0x2
 1472 012d 91       		.byte	0x91
 1473 012e 00       		.sleb128 0
 1474 012f 06       		.uleb128 0x6
 1475 0130 5D020000 		.4byte	.LASF25
 1476 0134 01       		.byte	0x1
 1477 0135 11       		.byte	0x11
 1478 0136 77020000 		.4byte	0x277
 1479 013a 02       		.uleb128 0x2
 1480 013b 91       		.byte	0x91
 1481 013c 04       		.sleb128 4
 1482 013d 06       		.uleb128 0x6
 1483 013e 40000000 		.4byte	.LASF26
 1484 0142 01       		.byte	0x1
 1485 0143 11       		.byte	0x11
 1486 0144 7D020000 		.4byte	0x27d
 1487 0148 02       		.uleb128 0x2
 1488 0149 91       		.byte	0x91
 1489 014a 08       		.sleb128 8
 1490 014b 07       		.uleb128 0x7
 1491 014c 4E030000 		.4byte	.LASF27
 1492 0150 01       		.byte	0x1
 1493 0151 25       		.byte	0x25
 1494 0152 A2000000 		.4byte	0xa2
 1495 0156 02       		.uleb128 0x2
 1496 0157 91       		.byte	0x91
 1497 0158 74       		.sleb128 -12
 1498 0159 08       		.uleb128 0x8
 1499 015a 6B00     		.ascii	"k\000"
 1500 015c 01       		.byte	0x1
 1501 015d 26       		.byte	0x26
 1502 015e 97000000 		.4byte	0x97
 1503 0162 02       		.uleb128 0x2
 1504 0163 91       		.byte	0x91
 1505 0164 70       		.sleb128 -16
 1506 0165 07       		.uleb128 0x7
 1507 0166 BD010000 		.4byte	.LASF28
 1508 016a 01       		.byte	0x1
 1509 016b 26       		.byte	0x26
 1510 016c 97000000 		.4byte	0x97
 1511 0170 02       		.uleb128 0x2
 1512 0171 91       		.byte	0x91
 1513 0172 6C       		.sleb128 -20
 1514 0173 08       		.uleb128 0x8
 1515 0174 6900     		.ascii	"i\000"
 1516 0176 01       		.byte	0x1
 1517 0177 27       		.byte	0x27
 1518 0178 97000000 		.4byte	0x97
 1519 017c 02       		.uleb128 0x2
 1520 017d 91       		.byte	0x91
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 33


 1521 017e 68       		.sleb128 -24
 1522 017f 07       		.uleb128 0x7
 1523 0180 73020000 		.4byte	.LASF29
 1524 0184 01       		.byte	0x1
 1525 0185 27       		.byte	0x27
 1526 0186 97000000 		.4byte	0x97
 1527 018a 02       		.uleb128 0x2
 1528 018b 91       		.byte	0x91
 1529 018c 48       		.sleb128 -56
 1530 018d 07       		.uleb128 0x7
 1531 018e EC000000 		.4byte	.LASF30
 1532 0192 01       		.byte	0x1
 1533 0193 27       		.byte	0x27
 1534 0194 97000000 		.4byte	0x97
 1535 0198 03       		.uleb128 0x3
 1536 0199 91       		.byte	0x91
 1537 019a B47F     		.sleb128 -76
 1538 019c 07       		.uleb128 0x7
 1539 019d 70030000 		.4byte	.LASF31
 1540 01a1 01       		.byte	0x1
 1541 01a2 28       		.byte	0x28
 1542 01a3 97000000 		.4byte	0x97
 1543 01a7 02       		.uleb128 0x2
 1544 01a8 91       		.byte	0x91
 1545 01a9 64       		.sleb128 -28
 1546 01aa 07       		.uleb128 0x7
 1547 01ab 17040000 		.4byte	.LASF32
 1548 01af 01       		.byte	0x1
 1549 01b0 28       		.byte	0x28
 1550 01b1 97000000 		.4byte	0x97
 1551 01b5 03       		.uleb128 0x3
 1552 01b6 91       		.byte	0x91
 1553 01b7 B07F     		.sleb128 -80
 1554 01b9 07       		.uleb128 0x7
 1555 01ba 68010000 		.4byte	.LASF33
 1556 01be 01       		.byte	0x1
 1557 01bf 29       		.byte	0x29
 1558 01c0 83020000 		.4byte	0x283
 1559 01c4 03       		.uleb128 0x3
 1560 01c5 91       		.byte	0x91
 1561 01c6 F47E     		.sleb128 -140
 1562 01c8 07       		.uleb128 0x7
 1563 01c9 49010000 		.4byte	.LASF34
 1564 01cd 01       		.byte	0x1
 1565 01ce 2A       		.byte	0x2a
 1566 01cf 97000000 		.4byte	0x97
 1567 01d3 02       		.uleb128 0x2
 1568 01d4 91       		.byte	0x91
 1569 01d5 60       		.sleb128 -32
 1570 01d6 07       		.uleb128 0x7
 1571 01d7 1F000000 		.4byte	.LASF35
 1572 01db 01       		.byte	0x1
 1573 01dc 2C       		.byte	0x2c
 1574 01dd 97000000 		.4byte	0x97
 1575 01e1 02       		.uleb128 0x2
 1576 01e2 91       		.byte	0x91
 1577 01e3 44       		.sleb128 -60
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 34


 1578 01e4 07       		.uleb128 0x7
 1579 01e5 69030000 		.4byte	.LASF36
 1580 01e9 01       		.byte	0x1
 1581 01ea 2C       		.byte	0x2c
 1582 01eb 97000000 		.4byte	0x97
 1583 01ef 02       		.uleb128 0x2
 1584 01f0 91       		.byte	0x91
 1585 01f1 40       		.sleb128 -64
 1586 01f2 09       		.uleb128 0x9
 1587 01f3 F9000000 		.4byte	.LASF68
 1588 01f7 01       		.byte	0x1
 1589 01f8 2D       		.byte	0x2d
 1590 01f9 97000000 		.4byte	0x97
 1591 01fd 07       		.uleb128 0x7
 1592 01fe BA030000 		.4byte	.LASF37
 1593 0202 01       		.byte	0x1
 1594 0203 2E       		.byte	0x2e
 1595 0204 97000000 		.4byte	0x97
 1596 0208 02       		.uleb128 0x2
 1597 0209 91       		.byte	0x91
 1598 020a 5C       		.sleb128 -36
 1599 020b 07       		.uleb128 0x7
 1600 020c CA020000 		.4byte	.LASF38
 1601 0210 01       		.byte	0x1
 1602 0211 2E       		.byte	0x2e
 1603 0212 97000000 		.4byte	0x97
 1604 0216 02       		.uleb128 0x2
 1605 0217 91       		.byte	0x91
 1606 0218 58       		.sleb128 -40
 1607 0219 07       		.uleb128 0x7
 1608 021a 90020000 		.4byte	.LASF39
 1609 021e 01       		.byte	0x1
 1610 021f 2F       		.byte	0x2f
 1611 0220 97000000 		.4byte	0x97
 1612 0224 02       		.uleb128 0x2
 1613 0225 91       		.byte	0x91
 1614 0226 54       		.sleb128 -44
 1615 0227 07       		.uleb128 0x7
 1616 0228 E9030000 		.4byte	.LASF40
 1617 022c 01       		.byte	0x1
 1618 022d 30       		.byte	0x30
 1619 022e 97000000 		.4byte	0x97
 1620 0232 02       		.uleb128 0x2
 1621 0233 91       		.byte	0x91
 1622 0234 50       		.sleb128 -48
 1623 0235 07       		.uleb128 0x7
 1624 0236 45030000 		.4byte	.LASF41
 1625 023a 01       		.byte	0x1
 1626 023b 31       		.byte	0x31
 1627 023c 93020000 		.4byte	0x293
 1628 0240 03       		.uleb128 0x3
 1629 0241 91       		.byte	0x91
 1630 0242 E07E     		.sleb128 -160
 1631 0244 07       		.uleb128 0x7
 1632 0245 76030000 		.4byte	.LASF42
 1633 0249 01       		.byte	0x1
 1634 024a 31       		.byte	0x31
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 35


 1635 024b 97000000 		.4byte	0x97
 1636 024f 02       		.uleb128 0x2
 1637 0250 91       		.byte	0x91
 1638 0251 4C       		.sleb128 -52
 1639 0252 07       		.uleb128 0x7
 1640 0253 B3030000 		.4byte	.LASF43
 1641 0257 01       		.byte	0x1
 1642 0258 32       		.byte	0x32
 1643 0259 97000000 		.4byte	0x97
 1644 025d 03       		.uleb128 0x3
 1645 025e 91       		.byte	0x91
 1646 025f BC7F     		.sleb128 -68
 1647 0261 07       		.uleb128 0x7
 1648 0262 30030000 		.4byte	.LASF44
 1649 0266 01       		.byte	0x1
 1650 0267 32       		.byte	0x32
 1651 0268 97000000 		.4byte	0x97
 1652 026c 03       		.uleb128 0x3
 1653 026d 91       		.byte	0x91
 1654 026e B87F     		.sleb128 -72
 1655 0270 00       		.byte	0
 1656 0271 0A       		.uleb128 0xa
 1657 0272 04       		.byte	0x4
 1658 0273 A2000000 		.4byte	0xa2
 1659 0277 0A       		.uleb128 0xa
 1660 0278 04       		.byte	0x4
 1661 0279 97000000 		.4byte	0x97
 1662 027d 0A       		.uleb128 0xa
 1663 027e 04       		.byte	0x4
 1664 027f 8C000000 		.4byte	0x8c
 1665 0283 0B       		.uleb128 0xb
 1666 0284 97000000 		.4byte	0x97
 1667 0288 93020000 		.4byte	0x293
 1668 028c 0C       		.uleb128 0xc
 1669 028d C9000000 		.4byte	0xc9
 1670 0291 0E       		.byte	0xe
 1671 0292 00       		.byte	0
 1672 0293 0B       		.uleb128 0xb
 1673 0294 97000000 		.4byte	0x97
 1674 0298 A3020000 		.4byte	0x2a3
 1675 029c 0C       		.uleb128 0xc
 1676 029d C9000000 		.4byte	0xc9
 1677 02a1 04       		.byte	0x4
 1678 02a2 00       		.byte	0
 1679 02a3 05       		.uleb128 0x5
 1680 02a4 4D000000 		.4byte	.LASF46
 1681 02a8 01       		.byte	0x1
 1682 02a9 9D       		.byte	0x9d
 1683 02aa 00000000 		.4byte	.LFB64
 1684 02ae 42000000 		.4byte	.LFE64-.LFB64
 1685 02b2 01       		.uleb128 0x1
 1686 02b3 9C       		.byte	0x9c
 1687 02b4 1B030000 		.4byte	0x31b
 1688 02b8 06       		.uleb128 0x6
 1689 02b9 0F040000 		.4byte	.LASF47
 1690 02bd 01       		.byte	0x1
 1691 02be 9D       		.byte	0x9d
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 36


 1692 02bf 77020000 		.4byte	0x277
 1693 02c3 02       		.uleb128 0x2
 1694 02c4 91       		.byte	0x91
 1695 02c5 74       		.sleb128 -12
 1696 02c6 06       		.uleb128 0x6
 1697 02c7 17040000 		.4byte	.LASF32
 1698 02cb 01       		.byte	0x1
 1699 02cc 9D       		.byte	0x9d
 1700 02cd 77020000 		.4byte	0x277
 1701 02d1 02       		.uleb128 0x2
 1702 02d2 91       		.byte	0x91
 1703 02d3 70       		.sleb128 -16
 1704 02d4 06       		.uleb128 0x6
 1705 02d5 8E030000 		.4byte	.LASF48
 1706 02d9 01       		.byte	0x1
 1707 02da 9D       		.byte	0x9d
 1708 02db 77020000 		.4byte	0x277
 1709 02df 02       		.uleb128 0x2
 1710 02e0 91       		.byte	0x91
 1711 02e1 6C       		.sleb128 -20
 1712 02e2 06       		.uleb128 0x6
 1713 02e3 2D040000 		.4byte	.LASF49
 1714 02e7 01       		.byte	0x1
 1715 02e8 9D       		.byte	0x9d
 1716 02e9 97000000 		.4byte	0x97
 1717 02ed 02       		.uleb128 0x2
 1718 02ee 91       		.byte	0x91
 1719 02ef 68       		.sleb128 -24
 1720 02f0 06       		.uleb128 0x6
 1721 02f1 B5020000 		.4byte	.LASF50
 1722 02f5 01       		.byte	0x1
 1723 02f6 9D       		.byte	0x9d
 1724 02f7 97000000 		.4byte	0x97
 1725 02fb 02       		.uleb128 0x2
 1726 02fc 91       		.byte	0x91
 1727 02fd 00       		.sleb128 0
 1728 02fe 06       		.uleb128 0x6
 1729 02ff 1E040000 		.4byte	.LASF51
 1730 0303 01       		.byte	0x1
 1731 0304 9D       		.byte	0x9d
 1732 0305 97000000 		.4byte	0x97
 1733 0309 02       		.uleb128 0x2
 1734 030a 91       		.byte	0x91
 1735 030b 04       		.sleb128 4
 1736 030c 06       		.uleb128 0x6
 1737 030d 9D030000 		.4byte	.LASF52
 1738 0311 01       		.byte	0x1
 1739 0312 9D       		.byte	0x9d
 1740 0313 97000000 		.4byte	0x97
 1741 0317 02       		.uleb128 0x2
 1742 0318 91       		.byte	0x91
 1743 0319 08       		.sleb128 8
 1744 031a 00       		.byte	0
 1745 031b 0D       		.uleb128 0xd
 1746 031c C5030000 		.4byte	.LASF53
 1747 0320 01       		.byte	0x1
 1748 0321 AB       		.byte	0xab
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 37


 1749 0322 00000000 		.4byte	.LFB65
 1750 0326 E4000000 		.4byte	.LFE65-.LFB65
 1751 032a 01       		.uleb128 0x1
 1752 032b 9C       		.byte	0x9c
 1753 032c 91030000 		.4byte	0x391
 1754 0330 06       		.uleb128 0x6
 1755 0331 0F040000 		.4byte	.LASF47
 1756 0335 01       		.byte	0x1
 1757 0336 AB       		.byte	0xab
 1758 0337 77020000 		.4byte	0x277
 1759 033b 02       		.uleb128 0x2
 1760 033c 91       		.byte	0x91
 1761 033d 6C       		.sleb128 -20
 1762 033e 06       		.uleb128 0x6
 1763 033f 17040000 		.4byte	.LASF32
 1764 0343 01       		.byte	0x1
 1765 0344 AB       		.byte	0xab
 1766 0345 77020000 		.4byte	0x277
 1767 0349 02       		.uleb128 0x2
 1768 034a 91       		.byte	0x91
 1769 034b 68       		.sleb128 -24
 1770 034c 06       		.uleb128 0x6
 1771 034d 8E030000 		.4byte	.LASF48
 1772 0351 01       		.byte	0x1
 1773 0352 AB       		.byte	0xab
 1774 0353 77020000 		.4byte	0x277
 1775 0357 02       		.uleb128 0x2
 1776 0358 91       		.byte	0x91
 1777 0359 64       		.sleb128 -28
 1778 035a 06       		.uleb128 0x6
 1779 035b 2D040000 		.4byte	.LASF49
 1780 035f 01       		.byte	0x1
 1781 0360 AB       		.byte	0xab
 1782 0361 97000000 		.4byte	0x97
 1783 0365 02       		.uleb128 0x2
 1784 0366 91       		.byte	0x91
 1785 0367 60       		.sleb128 -32
 1786 0368 06       		.uleb128 0x6
 1787 0369 B5020000 		.4byte	.LASF50
 1788 036d 01       		.byte	0x1
 1789 036e AB       		.byte	0xab
 1790 036f 97000000 		.4byte	0x97
 1791 0373 02       		.uleb128 0x2
 1792 0374 91       		.byte	0x91
 1793 0375 00       		.sleb128 0
 1794 0376 08       		.uleb128 0x8
 1795 0377 6900     		.ascii	"i\000"
 1796 0379 01       		.byte	0x1
 1797 037a B4       		.byte	0xb4
 1798 037b 97000000 		.4byte	0x97
 1799 037f 02       		.uleb128 0x2
 1800 0380 91       		.byte	0x91
 1801 0381 74       		.sleb128 -12
 1802 0382 07       		.uleb128 0x7
 1803 0383 86030000 		.4byte	.LASF54
 1804 0387 01       		.byte	0x1
 1805 0388 B4       		.byte	0xb4
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 38


 1806 0389 97000000 		.4byte	0x97
 1807 038d 02       		.uleb128 0x2
 1808 038e 91       		.byte	0x91
 1809 038f 70       		.sleb128 -16
 1810 0390 00       		.byte	0
 1811 0391 05       		.uleb128 0x5
 1812 0392 00000000 		.4byte	.LASF55
 1813 0396 01       		.byte	0x1
 1814 0397 C9       		.byte	0xc9
 1815 0398 00000000 		.4byte	.LFB66
 1816 039c C0000000 		.4byte	.LFE66-.LFB66
 1817 03a0 01       		.uleb128 0x1
 1818 03a1 9C       		.byte	0x9c
 1819 03a2 13040000 		.4byte	0x413
 1820 03a6 06       		.uleb128 0x6
 1821 03a7 0F040000 		.4byte	.LASF47
 1822 03ab 01       		.byte	0x1
 1823 03ac C9       		.byte	0xc9
 1824 03ad 77020000 		.4byte	0x277
 1825 03b1 02       		.uleb128 0x2
 1826 03b2 91       		.byte	0x91
 1827 03b3 64       		.sleb128 -28
 1828 03b4 06       		.uleb128 0x6
 1829 03b5 6B020000 		.4byte	.LASF56
 1830 03b9 01       		.byte	0x1
 1831 03ba C9       		.byte	0xc9
 1832 03bb 77020000 		.4byte	0x277
 1833 03bf 02       		.uleb128 0x2
 1834 03c0 91       		.byte	0x91
 1835 03c1 60       		.sleb128 -32
 1836 03c2 06       		.uleb128 0x6
 1837 03c3 8E030000 		.4byte	.LASF48
 1838 03c7 01       		.byte	0x1
 1839 03c8 C9       		.byte	0xc9
 1840 03c9 77020000 		.4byte	0x277
 1841 03cd 02       		.uleb128 0x2
 1842 03ce 91       		.byte	0x91
 1843 03cf 5C       		.sleb128 -36
 1844 03d0 06       		.uleb128 0x6
 1845 03d1 1E040000 		.4byte	.LASF51
 1846 03d5 01       		.byte	0x1
 1847 03d6 C9       		.byte	0xc9
 1848 03d7 97000000 		.4byte	0x97
 1849 03db 02       		.uleb128 0x2
 1850 03dc 91       		.byte	0x91
 1851 03dd 58       		.sleb128 -40
 1852 03de 08       		.uleb128 0x8
 1853 03df 6900     		.ascii	"i\000"
 1854 03e1 01       		.byte	0x1
 1855 03e2 D3       		.byte	0xd3
 1856 03e3 97000000 		.4byte	0x97
 1857 03e7 02       		.uleb128 0x2
 1858 03e8 91       		.byte	0x91
 1859 03e9 74       		.sleb128 -12
 1860 03ea 08       		.uleb128 0x8
 1861 03eb 6A00     		.ascii	"j\000"
 1862 03ed 01       		.byte	0x1
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 39


 1863 03ee D3       		.byte	0xd3
 1864 03ef 97000000 		.4byte	0x97
 1865 03f3 02       		.uleb128 0x2
 1866 03f4 91       		.byte	0x91
 1867 03f5 70       		.sleb128 -16
 1868 03f6 07       		.uleb128 0x7
 1869 03f7 5D010000 		.4byte	.LASF57
 1870 03fb 01       		.byte	0x1
 1871 03fc D3       		.byte	0xd3
 1872 03fd 97000000 		.4byte	0x97
 1873 0401 02       		.uleb128 0x2
 1874 0402 91       		.byte	0x91
 1875 0403 6C       		.sleb128 -20
 1876 0404 07       		.uleb128 0x7
 1877 0405 B6010000 		.4byte	.LASF58
 1878 0409 01       		.byte	0x1
 1879 040a D3       		.byte	0xd3
 1880 040b 97000000 		.4byte	0x97
 1881 040f 02       		.uleb128 0x2
 1882 0410 91       		.byte	0x91
 1883 0411 68       		.sleb128 -24
 1884 0412 00       		.byte	0
 1885 0413 0D       		.uleb128 0xd
 1886 0414 1C010000 		.4byte	.LASF59
 1887 0418 01       		.byte	0x1
 1888 0419 E6       		.byte	0xe6
 1889 041a 00000000 		.4byte	.LFB67
 1890 041e 82000000 		.4byte	.LFE67-.LFB67
 1891 0422 01       		.uleb128 0x1
 1892 0423 9C       		.byte	0x9c
 1893 0424 6B040000 		.4byte	0x46b
 1894 0428 06       		.uleb128 0x6
 1895 0429 8E030000 		.4byte	.LASF48
 1896 042d 01       		.byte	0x1
 1897 042e E6       		.byte	0xe6
 1898 042f 77020000 		.4byte	0x277
 1899 0433 02       		.uleb128 0x2
 1900 0434 91       		.byte	0x91
 1901 0435 64       		.sleb128 -28
 1902 0436 06       		.uleb128 0x6
 1903 0437 2D040000 		.4byte	.LASF49
 1904 043b 01       		.byte	0x1
 1905 043c E6       		.byte	0xe6
 1906 043d 97000000 		.4byte	0x97
 1907 0441 02       		.uleb128 0x2
 1908 0442 91       		.byte	0x91
 1909 0443 60       		.sleb128 -32
 1910 0444 08       		.uleb128 0x8
 1911 0445 6900     		.ascii	"i\000"
 1912 0447 01       		.byte	0x1
 1913 0448 EF       		.byte	0xef
 1914 0449 97000000 		.4byte	0x97
 1915 044d 02       		.uleb128 0x2
 1916 044e 91       		.byte	0x91
 1917 044f 74       		.sleb128 -12
 1918 0450 08       		.uleb128 0x8
 1919 0451 6A00     		.ascii	"j\000"
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 40


 1920 0453 01       		.byte	0x1
 1921 0454 EF       		.byte	0xef
 1922 0455 97000000 		.4byte	0x97
 1923 0459 02       		.uleb128 0x2
 1924 045a 91       		.byte	0x91
 1925 045b 70       		.sleb128 -16
 1926 045c 07       		.uleb128 0x7
 1927 045d 88010000 		.4byte	.LASF60
 1928 0461 01       		.byte	0x1
 1929 0462 EF       		.byte	0xef
 1930 0463 97000000 		.4byte	0x97
 1931 0467 02       		.uleb128 0x2
 1932 0468 91       		.byte	0x91
 1933 0469 6C       		.sleb128 -20
 1934 046a 00       		.byte	0
 1935 046b 0D       		.uleb128 0xd
 1936 046c 2E010000 		.4byte	.LASF61
 1937 0470 01       		.byte	0x1
 1938 0471 F8       		.byte	0xf8
 1939 0472 00000000 		.4byte	.LFB68
 1940 0476 94000000 		.4byte	.LFE68-.LFB68
 1941 047a 01       		.uleb128 0x1
 1942 047b 9C       		.byte	0x9c
 1943 047c D4040000 		.4byte	0x4d4
 1944 0480 06       		.uleb128 0x6
 1945 0481 8E030000 		.4byte	.LASF48
 1946 0485 01       		.byte	0x1
 1947 0486 F8       		.byte	0xf8
 1948 0487 77020000 		.4byte	0x277
 1949 048b 02       		.uleb128 0x2
 1950 048c 91       		.byte	0x91
 1951 048d 64       		.sleb128 -28
 1952 048e 06       		.uleb128 0x6
 1953 048f AD020000 		.4byte	.LASF62
 1954 0493 01       		.byte	0x1
 1955 0494 F8       		.byte	0xf8
 1956 0495 77020000 		.4byte	0x277
 1957 0499 02       		.uleb128 0x2
 1958 049a 91       		.byte	0x91
 1959 049b 60       		.sleb128 -32
 1960 049c 06       		.uleb128 0x6
 1961 049d 2D040000 		.4byte	.LASF49
 1962 04a1 01       		.byte	0x1
 1963 04a2 F8       		.byte	0xf8
 1964 04a3 97000000 		.4byte	0x97
 1965 04a7 02       		.uleb128 0x2
 1966 04a8 91       		.byte	0x91
 1967 04a9 5C       		.sleb128 -36
 1968 04aa 0E       		.uleb128 0xe
 1969 04ab 6900     		.ascii	"i\000"
 1970 04ad 01       		.byte	0x1
 1971 04ae 0101     		.2byte	0x101
 1972 04b0 97000000 		.4byte	0x97
 1973 04b4 02       		.uleb128 0x2
 1974 04b5 91       		.byte	0x91
 1975 04b6 74       		.sleb128 -12
 1976 04b7 0E       		.uleb128 0xe
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 41


 1977 04b8 6A00     		.ascii	"j\000"
 1978 04ba 01       		.byte	0x1
 1979 04bb 0101     		.2byte	0x101
 1980 04bd 97000000 		.4byte	0x97
 1981 04c1 02       		.uleb128 0x2
 1982 04c2 91       		.byte	0x91
 1983 04c3 70       		.sleb128 -16
 1984 04c4 0F       		.uleb128 0xf
 1985 04c5 88010000 		.4byte	.LASF60
 1986 04c9 01       		.byte	0x1
 1987 04ca 0101     		.2byte	0x101
 1988 04cc 97000000 		.4byte	0x97
 1989 04d0 02       		.uleb128 0x2
 1990 04d1 91       		.byte	0x91
 1991 04d2 6C       		.sleb128 -20
 1992 04d3 00       		.byte	0
 1993 04d4 0B       		.uleb128 0xb
 1994 04d5 97000000 		.4byte	0x97
 1995 04d9 E4040000 		.4byte	0x4e4
 1996 04dd 0C       		.uleb128 0xc
 1997 04de C9000000 		.4byte	0xc9
 1998 04e2 C7       		.byte	0xc7
 1999 04e3 00       		.byte	0
 2000 04e4 07       		.uleb128 0x7
 2001 04e5 F8030000 		.4byte	.LASF63
 2002 04e9 04       		.byte	0x4
 2003 04ea 1C       		.byte	0x1c
 2004 04eb D4040000 		.4byte	0x4d4
 2005 04ef 05       		.uleb128 0x5
 2006 04f0 03       		.byte	0x3
 2007 04f1 00000000 		.4byte	an_x
 2008 04f5 07       		.uleb128 0x7
 2009 04f6 FD030000 		.4byte	.LASF64
 2010 04fa 04       		.byte	0x4
 2011 04fb 1D       		.byte	0x1d
 2012 04fc D4040000 		.4byte	0x4d4
 2013 0500 05       		.uleb128 0x5
 2014 0501 03       		.byte	0x3
 2015 0502 20030000 		.4byte	an_y
 2016 0506 10       		.uleb128 0x10
 2017 0507 02040000 		.4byte	.LASF69
 2018 050b 05       		.byte	0x5
 2019 050c 1207     		.2byte	0x712
 2020 050e 12050000 		.4byte	0x512
 2021 0512 11       		.uleb128 0x11
 2022 0513 97000000 		.4byte	0x97
 2023 0517 00       		.byte	0
 2024              		.section	.debug_abbrev,"",%progbits
 2025              	.Ldebug_abbrev0:
 2026 0000 01       		.uleb128 0x1
 2027 0001 11       		.uleb128 0x11
 2028 0002 01       		.byte	0x1
 2029 0003 25       		.uleb128 0x25
 2030 0004 0E       		.uleb128 0xe
 2031 0005 13       		.uleb128 0x13
 2032 0006 0B       		.uleb128 0xb
 2033 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 42


 2034 0008 0E       		.uleb128 0xe
 2035 0009 1B       		.uleb128 0x1b
 2036 000a 0E       		.uleb128 0xe
 2037 000b 55       		.uleb128 0x55
 2038 000c 17       		.uleb128 0x17
 2039 000d 11       		.uleb128 0x11
 2040 000e 01       		.uleb128 0x1
 2041 000f 10       		.uleb128 0x10
 2042 0010 17       		.uleb128 0x17
 2043 0011 00       		.byte	0
 2044 0012 00       		.byte	0
 2045 0013 02       		.uleb128 0x2
 2046 0014 16       		.uleb128 0x16
 2047 0015 00       		.byte	0
 2048 0016 03       		.uleb128 0x3
 2049 0017 0E       		.uleb128 0xe
 2050 0018 3A       		.uleb128 0x3a
 2051 0019 0B       		.uleb128 0xb
 2052 001a 3B       		.uleb128 0x3b
 2053 001b 0B       		.uleb128 0xb
 2054 001c 49       		.uleb128 0x49
 2055 001d 13       		.uleb128 0x13
 2056 001e 00       		.byte	0
 2057 001f 00       		.byte	0
 2058 0020 03       		.uleb128 0x3
 2059 0021 24       		.uleb128 0x24
 2060 0022 00       		.byte	0
 2061 0023 0B       		.uleb128 0xb
 2062 0024 0B       		.uleb128 0xb
 2063 0025 3E       		.uleb128 0x3e
 2064 0026 0B       		.uleb128 0xb
 2065 0027 03       		.uleb128 0x3
 2066 0028 0E       		.uleb128 0xe
 2067 0029 00       		.byte	0
 2068 002a 00       		.byte	0
 2069 002b 04       		.uleb128 0x4
 2070 002c 24       		.uleb128 0x24
 2071 002d 00       		.byte	0
 2072 002e 0B       		.uleb128 0xb
 2073 002f 0B       		.uleb128 0xb
 2074 0030 3E       		.uleb128 0x3e
 2075 0031 0B       		.uleb128 0xb
 2076 0032 03       		.uleb128 0x3
 2077 0033 08       		.uleb128 0x8
 2078 0034 00       		.byte	0
 2079 0035 00       		.byte	0
 2080 0036 05       		.uleb128 0x5
 2081 0037 2E       		.uleb128 0x2e
 2082 0038 01       		.byte	0x1
 2083 0039 3F       		.uleb128 0x3f
 2084 003a 19       		.uleb128 0x19
 2085 003b 03       		.uleb128 0x3
 2086 003c 0E       		.uleb128 0xe
 2087 003d 3A       		.uleb128 0x3a
 2088 003e 0B       		.uleb128 0xb
 2089 003f 3B       		.uleb128 0x3b
 2090 0040 0B       		.uleb128 0xb
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 43


 2091 0041 27       		.uleb128 0x27
 2092 0042 19       		.uleb128 0x19
 2093 0043 11       		.uleb128 0x11
 2094 0044 01       		.uleb128 0x1
 2095 0045 12       		.uleb128 0x12
 2096 0046 06       		.uleb128 0x6
 2097 0047 40       		.uleb128 0x40
 2098 0048 18       		.uleb128 0x18
 2099 0049 9642     		.uleb128 0x2116
 2100 004b 19       		.uleb128 0x19
 2101 004c 01       		.uleb128 0x1
 2102 004d 13       		.uleb128 0x13
 2103 004e 00       		.byte	0
 2104 004f 00       		.byte	0
 2105 0050 06       		.uleb128 0x6
 2106 0051 05       		.uleb128 0x5
 2107 0052 00       		.byte	0
 2108 0053 03       		.uleb128 0x3
 2109 0054 0E       		.uleb128 0xe
 2110 0055 3A       		.uleb128 0x3a
 2111 0056 0B       		.uleb128 0xb
 2112 0057 3B       		.uleb128 0x3b
 2113 0058 0B       		.uleb128 0xb
 2114 0059 49       		.uleb128 0x49
 2115 005a 13       		.uleb128 0x13
 2116 005b 02       		.uleb128 0x2
 2117 005c 18       		.uleb128 0x18
 2118 005d 00       		.byte	0
 2119 005e 00       		.byte	0
 2120 005f 07       		.uleb128 0x7
 2121 0060 34       		.uleb128 0x34
 2122 0061 00       		.byte	0
 2123 0062 03       		.uleb128 0x3
 2124 0063 0E       		.uleb128 0xe
 2125 0064 3A       		.uleb128 0x3a
 2126 0065 0B       		.uleb128 0xb
 2127 0066 3B       		.uleb128 0x3b
 2128 0067 0B       		.uleb128 0xb
 2129 0068 49       		.uleb128 0x49
 2130 0069 13       		.uleb128 0x13
 2131 006a 02       		.uleb128 0x2
 2132 006b 18       		.uleb128 0x18
 2133 006c 00       		.byte	0
 2134 006d 00       		.byte	0
 2135 006e 08       		.uleb128 0x8
 2136 006f 34       		.uleb128 0x34
 2137 0070 00       		.byte	0
 2138 0071 03       		.uleb128 0x3
 2139 0072 08       		.uleb128 0x8
 2140 0073 3A       		.uleb128 0x3a
 2141 0074 0B       		.uleb128 0xb
 2142 0075 3B       		.uleb128 0x3b
 2143 0076 0B       		.uleb128 0xb
 2144 0077 49       		.uleb128 0x49
 2145 0078 13       		.uleb128 0x13
 2146 0079 02       		.uleb128 0x2
 2147 007a 18       		.uleb128 0x18
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 44


 2148 007b 00       		.byte	0
 2149 007c 00       		.byte	0
 2150 007d 09       		.uleb128 0x9
 2151 007e 34       		.uleb128 0x34
 2152 007f 00       		.byte	0
 2153 0080 03       		.uleb128 0x3
 2154 0081 0E       		.uleb128 0xe
 2155 0082 3A       		.uleb128 0x3a
 2156 0083 0B       		.uleb128 0xb
 2157 0084 3B       		.uleb128 0x3b
 2158 0085 0B       		.uleb128 0xb
 2159 0086 49       		.uleb128 0x49
 2160 0087 13       		.uleb128 0x13
 2161 0088 00       		.byte	0
 2162 0089 00       		.byte	0
 2163 008a 0A       		.uleb128 0xa
 2164 008b 0F       		.uleb128 0xf
 2165 008c 00       		.byte	0
 2166 008d 0B       		.uleb128 0xb
 2167 008e 0B       		.uleb128 0xb
 2168 008f 49       		.uleb128 0x49
 2169 0090 13       		.uleb128 0x13
 2170 0091 00       		.byte	0
 2171 0092 00       		.byte	0
 2172 0093 0B       		.uleb128 0xb
 2173 0094 01       		.uleb128 0x1
 2174 0095 01       		.byte	0x1
 2175 0096 49       		.uleb128 0x49
 2176 0097 13       		.uleb128 0x13
 2177 0098 01       		.uleb128 0x1
 2178 0099 13       		.uleb128 0x13
 2179 009a 00       		.byte	0
 2180 009b 00       		.byte	0
 2181 009c 0C       		.uleb128 0xc
 2182 009d 21       		.uleb128 0x21
 2183 009e 00       		.byte	0
 2184 009f 49       		.uleb128 0x49
 2185 00a0 13       		.uleb128 0x13
 2186 00a1 2F       		.uleb128 0x2f
 2187 00a2 0B       		.uleb128 0xb
 2188 00a3 00       		.byte	0
 2189 00a4 00       		.byte	0
 2190 00a5 0D       		.uleb128 0xd
 2191 00a6 2E       		.uleb128 0x2e
 2192 00a7 01       		.byte	0x1
 2193 00a8 3F       		.uleb128 0x3f
 2194 00a9 19       		.uleb128 0x19
 2195 00aa 03       		.uleb128 0x3
 2196 00ab 0E       		.uleb128 0xe
 2197 00ac 3A       		.uleb128 0x3a
 2198 00ad 0B       		.uleb128 0xb
 2199 00ae 3B       		.uleb128 0x3b
 2200 00af 0B       		.uleb128 0xb
 2201 00b0 27       		.uleb128 0x27
 2202 00b1 19       		.uleb128 0x19
 2203 00b2 11       		.uleb128 0x11
 2204 00b3 01       		.uleb128 0x1
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 45


 2205 00b4 12       		.uleb128 0x12
 2206 00b5 06       		.uleb128 0x6
 2207 00b6 40       		.uleb128 0x40
 2208 00b7 18       		.uleb128 0x18
 2209 00b8 9742     		.uleb128 0x2117
 2210 00ba 19       		.uleb128 0x19
 2211 00bb 01       		.uleb128 0x1
 2212 00bc 13       		.uleb128 0x13
 2213 00bd 00       		.byte	0
 2214 00be 00       		.byte	0
 2215 00bf 0E       		.uleb128 0xe
 2216 00c0 34       		.uleb128 0x34
 2217 00c1 00       		.byte	0
 2218 00c2 03       		.uleb128 0x3
 2219 00c3 08       		.uleb128 0x8
 2220 00c4 3A       		.uleb128 0x3a
 2221 00c5 0B       		.uleb128 0xb
 2222 00c6 3B       		.uleb128 0x3b
 2223 00c7 05       		.uleb128 0x5
 2224 00c8 49       		.uleb128 0x49
 2225 00c9 13       		.uleb128 0x13
 2226 00ca 02       		.uleb128 0x2
 2227 00cb 18       		.uleb128 0x18
 2228 00cc 00       		.byte	0
 2229 00cd 00       		.byte	0
 2230 00ce 0F       		.uleb128 0xf
 2231 00cf 34       		.uleb128 0x34
 2232 00d0 00       		.byte	0
 2233 00d1 03       		.uleb128 0x3
 2234 00d2 0E       		.uleb128 0xe
 2235 00d3 3A       		.uleb128 0x3a
 2236 00d4 0B       		.uleb128 0xb
 2237 00d5 3B       		.uleb128 0x3b
 2238 00d6 05       		.uleb128 0x5
 2239 00d7 49       		.uleb128 0x49
 2240 00d8 13       		.uleb128 0x13
 2241 00d9 02       		.uleb128 0x2
 2242 00da 18       		.uleb128 0x18
 2243 00db 00       		.byte	0
 2244 00dc 00       		.byte	0
 2245 00dd 10       		.uleb128 0x10
 2246 00de 34       		.uleb128 0x34
 2247 00df 00       		.byte	0
 2248 00e0 03       		.uleb128 0x3
 2249 00e1 0E       		.uleb128 0xe
 2250 00e2 3A       		.uleb128 0x3a
 2251 00e3 0B       		.uleb128 0xb
 2252 00e4 3B       		.uleb128 0x3b
 2253 00e5 05       		.uleb128 0x5
 2254 00e6 49       		.uleb128 0x49
 2255 00e7 13       		.uleb128 0x13
 2256 00e8 3F       		.uleb128 0x3f
 2257 00e9 19       		.uleb128 0x19
 2258 00ea 3C       		.uleb128 0x3c
 2259 00eb 19       		.uleb128 0x19
 2260 00ec 00       		.byte	0
 2261 00ed 00       		.byte	0
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 46


 2262 00ee 11       		.uleb128 0x11
 2263 00ef 35       		.uleb128 0x35
 2264 00f0 00       		.byte	0
 2265 00f1 49       		.uleb128 0x49
 2266 00f2 13       		.uleb128 0x13
 2267 00f3 00       		.byte	0
 2268 00f4 00       		.byte	0
 2269 00f5 00       		.byte	0
 2270              		.section	.debug_aranges,"",%progbits
 2271 0000 44000000 		.4byte	0x44
 2272 0004 0200     		.2byte	0x2
 2273 0006 00000000 		.4byte	.Ldebug_info0
 2274 000a 04       		.byte	0x4
 2275 000b 00       		.byte	0
 2276 000c 0000     		.2byte	0
 2277 000e 0000     		.2byte	0
 2278 0010 00000000 		.4byte	.LFB63
 2279 0014 28060000 		.4byte	.LFE63-.LFB63
 2280 0018 00000000 		.4byte	.LFB64
 2281 001c 42000000 		.4byte	.LFE64-.LFB64
 2282 0020 00000000 		.4byte	.LFB65
 2283 0024 E4000000 		.4byte	.LFE65-.LFB65
 2284 0028 00000000 		.4byte	.LFB66
 2285 002c C0000000 		.4byte	.LFE66-.LFB66
 2286 0030 00000000 		.4byte	.LFB67
 2287 0034 82000000 		.4byte	.LFE67-.LFB67
 2288 0038 00000000 		.4byte	.LFB68
 2289 003c 94000000 		.4byte	.LFE68-.LFB68
 2290 0040 00000000 		.4byte	0
 2291 0044 00000000 		.4byte	0
 2292              		.section	.debug_ranges,"",%progbits
 2293              	.Ldebug_ranges0:
 2294 0000 00000000 		.4byte	.LFB63
 2295 0004 28060000 		.4byte	.LFE63
 2296 0008 00000000 		.4byte	.LFB64
 2297 000c 42000000 		.4byte	.LFE64
 2298 0010 00000000 		.4byte	.LFB65
 2299 0014 E4000000 		.4byte	.LFE65
 2300 0018 00000000 		.4byte	.LFB66
 2301 001c C0000000 		.4byte	.LFE66
 2302 0020 00000000 		.4byte	.LFB67
 2303 0024 82000000 		.4byte	.LFE67
 2304 0028 00000000 		.4byte	.LFB68
 2305 002c 94000000 		.4byte	.LFE68
 2306 0030 00000000 		.4byte	0
 2307 0034 00000000 		.4byte	0
 2308              		.section	.debug_line,"",%progbits
 2309              	.Ldebug_line0:
 2310 0000 94030000 		.section	.debug_str,"MS",%progbits,1
 2310      02004901 
 2310      00000201 
 2310      FB0E0D00 
 2310      01010101 
 2311              	.LASF55:
 2312 0000 6D617869 		.ascii	"maxim_remove_close_peaks\000"
 2312      6D5F7265 
 2312      6D6F7665 
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 47


 2312      5F636C6F 
 2312      73655F70 
 2313              	.LASF15:
 2314 0019 666C6F61 		.ascii	"float\000"
 2314      7400
 2315              	.LASF35:
 2316 001f 6E5F795F 		.ascii	"n_y_ac\000"
 2316      616300
 2317              	.LASF12:
 2318 0026 696E7438 		.ascii	"int8_t\000"
 2318      5F7400
 2319              	.LASF2:
 2320 002d 73686F72 		.ascii	"short int\000"
 2320      7420696E 
 2320      7400
 2321              	.LASF19:
 2322 0037 73697A65 		.ascii	"sizetype\000"
 2322      74797065 
 2322      00
 2323              	.LASF26:
 2324 0040 7063685F 		.ascii	"pch_hr_valid\000"
 2324      68725F76 
 2324      616C6964 
 2324      00
 2325              	.LASF46:
 2326 004d 6D617869 		.ascii	"maxim_find_peaks\000"
 2326      6D5F6669 
 2326      6E645F70 
 2326      65616B73 
 2326      00
 2327              	.LASF65:
 2328 005e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2328      43313120 
 2328      352E342E 
 2328      31203230 
 2328      31363036 
 2329 0091 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2329      20726576 
 2329      6973696F 
 2329      6E203233 
 2329      37373135 
 2330 00c4 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2330      66756E63 
 2330      74696F6E 
 2330      2D736563 
 2330      74696F6E 
 2331              	.LASF30:
 2332 00ec 6E5F6D69 		.ascii	"n_middle_idx\000"
 2332      64646C65 
 2332      5F696478 
 2332      00
 2333              	.LASF68:
 2334 00f9 6E5F7370 		.ascii	"n_spo2_calc\000"
 2334      6F325F63 
 2334      616C6300 
 2335              	.LASF18:
 2336 0105 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 48


 2336      20646F75 
 2336      626C6500 
 2337              	.LASF7:
 2338 0111 5F5F7569 		.ascii	"__uint32_t\000"
 2338      6E743332 
 2338      5F7400
 2339              	.LASF59:
 2340 011c 6D617869 		.ascii	"maxim_sort_ascend\000"
 2340      6D5F736F 
 2340      72745F61 
 2340      7363656E 
 2340      6400
 2341              	.LASF61:
 2342 012e 6D617869 		.ascii	"maxim_sort_indices_descend\000"
 2342      6D5F736F 
 2342      72745F69 
 2342      6E646963 
 2342      65735F64 
 2343              	.LASF34:
 2344 0149 6E5F7065 		.ascii	"n_peak_interval_sum\000"
 2344      616B5F69 
 2344      6E746572 
 2344      76616C5F 
 2344      73756D00 
 2345              	.LASF57:
 2346 015d 6E5F6F6C 		.ascii	"n_old_npks\000"
 2346      645F6E70 
 2346      6B7300
 2347              	.LASF33:
 2348 0168 616E5F69 		.ascii	"an_ir_valley_locs\000"
 2348      725F7661 
 2348      6C6C6579 
 2348      5F6C6F63 
 2348      7300
 2349              	.LASF20:
 2350 017a 70756E5F 		.ascii	"pun_ir_buffer\000"
 2350      69725F62 
 2350      75666665 
 2350      7200
 2351              	.LASF60:
 2352 0188 6E5F7465 		.ascii	"n_temp\000"
 2352      6D7000
 2353              	.LASF45:
 2354 018f 6D617869 		.ascii	"maxim_heart_rate_and_oxygen_saturation\000"
 2354      6D5F6865 
 2354      6172745F 
 2354      72617465 
 2354      5F616E64 
 2355              	.LASF58:
 2356 01b6 6E5F6469 		.ascii	"n_dist\000"
 2356      737400
 2357              	.LASF28:
 2358 01bd 6E5F695F 		.ascii	"n_i_ratio_count\000"
 2358      72617469 
 2358      6F5F636F 
 2358      756E7400 
 2359              	.LASF22:
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 49


 2360 01cd 70756E5F 		.ascii	"pun_red_buffer\000"
 2360      7265645F 
 2360      62756666 
 2360      657200
 2361              	.LASF67:
 2362 01dc 433A5C55 		.ascii	"C:\\Users\\Perro\\Documents\\PSoC Creator\\Pulseoxi"
 2362      73657273 
 2362      5C506572 
 2362      726F5C44 
 2362      6F63756D 
 2363 020a 6D657465 		.ascii	"meter\\Project_LTEBS\\Saturimetro.cydsn\000"
 2363      725C5072 
 2363      6F6A6563 
 2363      745F4C54 
 2363      4542535C 
 2364              	.LASF9:
 2365 0230 6C6F6E67 		.ascii	"long long int\000"
 2365      206C6F6E 
 2365      6720696E 
 2365      7400
 2366              	.LASF6:
 2367 023e 6C6F6E67 		.ascii	"long int\000"
 2367      20696E74 
 2367      00
 2368              	.LASF24:
 2369 0247 7063685F 		.ascii	"pch_spo2_valid\000"
 2369      73706F32 
 2369      5F76616C 
 2369      696400
 2370              	.LASF66:
 2371 0256 53704F32 		.ascii	"SpO2.c\000"
 2371      2E6300
 2372              	.LASF25:
 2373 025d 706E5F68 		.ascii	"pn_heart_rate\000"
 2373      65617274 
 2373      5F726174 
 2373      6500
 2374              	.LASF56:
 2375 026b 706E5F6E 		.ascii	"pn_npks\000"
 2375      706B7300 
 2376              	.LASF29:
 2377 0273 6E5F6578 		.ascii	"n_exact_ir_valley_locs_count\000"
 2377      6163745F 
 2377      69725F76 
 2377      616C6C65 
 2377      795F6C6F 
 2378              	.LASF39:
 2379 0290 6E5F795F 		.ascii	"n_y_dc_max_idx\000"
 2379      64635F6D 
 2379      61785F69 
 2379      647800
 2380              	.LASF1:
 2381 029f 756E7369 		.ascii	"unsigned char\000"
 2381      676E6564 
 2381      20636861 
 2381      7200
 2382              	.LASF62:
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 50


 2383 02ad 706E5F69 		.ascii	"pn_indx\000"
 2383      6E647800 
 2384              	.LASF50:
 2385 02b5 6E5F6D69 		.ascii	"n_min_height\000"
 2385      6E5F6865 
 2385      69676874 
 2385      00
 2386              	.LASF23:
 2387 02c2 706E5F73 		.ascii	"pn_spo2\000"
 2387      706F3200 
 2388              	.LASF38:
 2389 02ca 6E5F785F 		.ascii	"n_x_dc_max\000"
 2389      64635F6D 
 2389      617800
 2390              	.LASF10:
 2391 02d5 6C6F6E67 		.ascii	"long long unsigned int\000"
 2391      206C6F6E 
 2391      6720756E 
 2391      7369676E 
 2391      65642069 
 2392              	.LASF14:
 2393 02ec 75696E74 		.ascii	"uint32_t\000"
 2393      33325F74 
 2393      00
 2394              	.LASF11:
 2395 02f5 756E7369 		.ascii	"unsigned int\000"
 2395      676E6564 
 2395      20696E74 
 2395      00
 2396              	.LASF8:
 2397 0302 6C6F6E67 		.ascii	"long unsigned int\000"
 2397      20756E73 
 2397      69676E65 
 2397      6420696E 
 2397      7400
 2398              	.LASF3:
 2399 0314 73686F72 		.ascii	"short unsigned int\000"
 2399      7420756E 
 2399      7369676E 
 2399      65642069 
 2399      6E7400
 2400              	.LASF4:
 2401 0327 5F5F696E 		.ascii	"__int8_t\000"
 2401      74385F74 
 2401      00
 2402              	.LASF44:
 2403 0330 6E5F6465 		.ascii	"n_denom\000"
 2403      6E6F6D00 
 2404              	.LASF17:
 2405 0338 63686172 		.ascii	"char\000"
 2405      00
 2406              	.LASF13:
 2407 033d 696E7433 		.ascii	"int32_t\000"
 2407      325F7400 
 2408              	.LASF41:
 2409 0345 616E5F72 		.ascii	"an_ratio\000"
 2409      6174696F 
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 51


 2409      00
 2410              	.LASF27:
 2411 034e 756E5F69 		.ascii	"un_ir_mean\000"
 2411      725F6D65 
 2411      616E00
 2412              	.LASF21:
 2413 0359 6E5F6275 		.ascii	"n_buffer_length\000"
 2413      66666572 
 2413      5F6C656E 
 2413      67746800 
 2414              	.LASF36:
 2415 0369 6E5F785F 		.ascii	"n_x_ac\000"
 2415      616300
 2416              	.LASF31:
 2417 0370 6E5F7468 		.ascii	"n_th1\000"
 2417      3100
 2418              	.LASF42:
 2419 0376 6E5F7261 		.ascii	"n_ratio_average\000"
 2419      74696F5F 
 2419      61766572 
 2419      61676500 
 2420              	.LASF54:
 2421 0386 6E5F7769 		.ascii	"n_width\000"
 2421      64746800 
 2422              	.LASF48:
 2423 038e 706E5F78 		.ascii	"pn_x\000"
 2423      00
 2424              	.LASF5:
 2425 0393 5F5F696E 		.ascii	"__int32_t\000"
 2425      7433325F 
 2425      7400
 2426              	.LASF52:
 2427 039d 6E5F6D61 		.ascii	"n_max_num\000"
 2427      785F6E75 
 2427      6D00
 2428              	.LASF0:
 2429 03a7 7369676E 		.ascii	"signed char\000"
 2429      65642063 
 2429      68617200 
 2430              	.LASF43:
 2431 03b3 6E5F6E75 		.ascii	"n_nume\000"
 2431      6D6500
 2432              	.LASF37:
 2433 03ba 6E5F795F 		.ascii	"n_y_dc_max\000"
 2433      64635F6D 
 2433      617800
 2434              	.LASF53:
 2435 03c5 6D617869 		.ascii	"maxim_peaks_above_min_height\000"
 2435      6D5F7065 
 2435      616B735F 
 2435      61626F76 
 2435      655F6D69 
 2436              	.LASF16:
 2437 03e2 646F7562 		.ascii	"double\000"
 2437      6C6500
 2438              	.LASF40:
 2439 03e9 6E5F785F 		.ascii	"n_x_dc_max_idx\000"
ARM GAS  C:\Users\Perro\AppData\Local\Temp\ccQUdgsq.s 			page 52


 2439      64635F6D 
 2439      61785F69 
 2439      647800
 2440              	.LASF63:
 2441 03f8 616E5F78 		.ascii	"an_x\000"
 2441      00
 2442              	.LASF64:
 2443 03fd 616E5F79 		.ascii	"an_y\000"
 2443      00
 2444              	.LASF69:
 2445 0402 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2445      52784275 
 2445      66666572 
 2445      00
 2446              	.LASF47:
 2447 040f 706E5F6C 		.ascii	"pn_locs\000"
 2447      6F637300 
 2448              	.LASF32:
 2449 0417 6E5F6E70 		.ascii	"n_npks\000"
 2449      6B7300
 2450              	.LASF51:
 2451 041e 6E5F6D69 		.ascii	"n_min_distance\000"
 2451      6E5F6469 
 2451      7374616E 
 2451      636500
 2452              	.LASF49:
 2453 042d 6E5F7369 		.ascii	"n_size\000"
 2453      7A6500
 2454              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
